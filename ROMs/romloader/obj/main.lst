                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _swapin_real_cart
                             13 	.globl _joystick_read
                             14 	.globl _cart_detect
                             15 	.globl _sd_card_detect
                             16 	.globl _sd_read_block
                             17 	.globl _sd_card_init
                             18 	.globl _sd_send_cmd
                             19 	.globl _sd_send_cmd_ex
                             20 	.globl _disp_hex
                             21 	.globl _print_setxy
                             22 	.globl _print_str_nl
                             23 	.globl _print_nl
                             24 	.globl _print_str_sp
                             25 	.globl _print_str
                             26 	.globl _strlen
                             27 	.globl _vdp_memcpy
                             28 	.globl _vdp_memset
                             29 	.globl _vdp_wtr
                             30 	.globl _vdp_wr_addr
                             31 	.globl _vdp_rd_addr
                             32 	.globl _nmi_handler
                             33 	.globl _CMDARGS
                             34 	.globl _g_sd_type
                             35 	.globl _g_sd_status
                             36 	.globl _g_sd_addr_size
                             37 	.globl _g_sd_type_name
                             38 	.globl _print_loc
                             39 	.globl _nmi_count_g
                             40 	.globl _hex
                             41 ;--------------------------------------------------------
                             42 ; special function registers
                             43 ;--------------------------------------------------------
                     0056    44 _SD_CTRL_PORT	=	0x0056
                     0057    45 _SD_DATA_PORT	=	0x0057
                     0080    46 _CONT_KEY_PORT	=	0x0080
                     00C0    47 _CONT_JOY_PORT	=	0x00c0
                     00FC    48 _CONT1_DATA_PORT	=	0x00fc
                     00FF    49 _CONT2_DATA_PORT	=	0x00ff
                     00BE    50 _VDP_DATA_PORT	=	0x00be
                     00BF    51 _VDP_CTRL_PORT	=	0x00bf
                             52 ;--------------------------------------------------------
                             53 ; ram data
                             54 ;--------------------------------------------------------
                             55 	.area _DATA
   0000                      56 _sd_card_detect_state_65536_87:
   0000                      57 	.ds 1
   0001                      58 _sd_card_detect_delay_65536_87:
   0001                      59 	.ds 1
   0002                      60 _cart_detect_state_65536_98:
   0002                      61 	.ds 1
   0003                      62 _cart_detect_delay_65536_98:
   0003                      63 	.ds 1
   0004                      64 _joystick_read_state_65536_107:
   0004                      65 	.ds 1
   0005                      66 _joystick_read_delay_65536_107:
   0005                      67 	.ds 1
                             68 ;--------------------------------------------------------
                             69 ; ram data
                             70 ;--------------------------------------------------------
                             71 	.area _INITIALIZED
   0000                      72 _nmi_count_g::
   0000                      73 	.ds 1
   0001                      74 _print_loc::
   0001                      75 	.ds 2
   0003                      76 _g_sd_type_name::
   0003                      77 	.ds 8
   000B                      78 _g_sd_addr_size::
   000B                      79 	.ds 1
   000C                      80 _g_sd_status::
   000C                      81 	.ds 1
   000D                      82 _g_sd_type::
   000D                      83 	.ds 1
   000E                      84 _CMDARGS::
   000E                      85 	.ds 4
                             86 ;--------------------------------------------------------
                             87 ; absolute external ram data
                             88 ;--------------------------------------------------------
                             89 	.area _DABS (ABS)
                             90 ;--------------------------------------------------------
                             91 ; global & static initialisations
                             92 ;--------------------------------------------------------
                             93 	.area _HOME
                             94 	.area _GSINIT
                             95 	.area _GSFINAL
                             96 	.area _GSINIT
                             97 ;src/main.c:923: static uint8_t state = SD_ST_NOTFOUND;
   0000 FD 21r00r00   [14]   98 	ld	iy, #_sd_card_detect_state_65536_87
   0004 FD 36 00 00   [19]   99 	ld	0 (iy), #0x00
                            100 ;src/main.c:924: static uint8_t delay = 0;
   0008 FD 21r01r00   [14]  101 	ld	iy, #_sd_card_detect_delay_65536_87
   000C FD 36 00 00   [19]  102 	ld	0 (iy), #0x00
                            103 ;src/main.c:1015: static uint8_t state = CART_ST_NOTFOUND;
   0010 FD 21r02r00   [14]  104 	ld	iy, #_cart_detect_state_65536_98
   0014 FD 36 00 00   [19]  105 	ld	0 (iy), #0x00
                            106 ;src/main.c:1016: static uint8_t delay = 0;
   0018 FD 21r03r00   [14]  107 	ld	iy, #_cart_detect_delay_65536_98
   001C FD 36 00 00   [19]  108 	ld	0 (iy), #0x00
                            109 ;src/main.c:1093: static uint8_t state = JOY_ST_NONE;
   0020 FD 21r04r00   [14]  110 	ld	iy, #_joystick_read_state_65536_107
   0024 FD 36 00 00   [19]  111 	ld	0 (iy), #0x00
                            112 ;src/main.c:1094: static uint8_t delay = 0;
   0028 FD 21r05r00   [14]  113 	ld	iy, #_joystick_read_delay_65536_107
   002C FD 36 00 00   [19]  114 	ld	0 (iy), #0x00
                            115 ;--------------------------------------------------------
                            116 ; Home
                            117 ;--------------------------------------------------------
                            118 	.area _HOME
                            119 	.area _HOME
                            120 ;--------------------------------------------------------
                            121 ; code
                            122 ;--------------------------------------------------------
                            123 	.area _CODE
                            124 ;src/main.c:58: nmi_handler(void) __critical __interrupt __naked
                            125 ;	---------------------------------
                            126 ; Function nmi_handler
                            127 ; ---------------------------------
   0000                     128 _nmi_handler::
                            129 ;src/main.c:73: __endasm;
   0000 F5            [11]  130 	push	af
   0001 3Ar00r00      [13]  131 	ld	a, (_nmi_count_g)
   0004 3C            [ 4]  132 	inc	a
   0005 32r00r00      [13]  133 	ld	(_nmi_count_g), a
   0008 F1            [10]  134 	pop	af
   0009 ED 45         [14]  135 	retn
                            136 ;src/main.c:74: }
                            137 ;src/main.c:89: vdp_rd_addr(uint16_t addr)
                            138 ;	---------------------------------
                            139 ; Function vdp_rd_addr
                            140 ; ---------------------------------
   000B                     141 _vdp_rd_addr::
                            142 ;src/main.c:92: VDP_CTRL_PORT = (addr & 0xFF);
   000B FD 21 02 00   [14]  143 	ld	iy, #2
   000F FD 39         [15]  144 	add	iy, sp
   0011 FD 7E 00      [19]  145 	ld	a, 0 (iy)
   0014 D3 BF         [11]  146 	out	(_VDP_CTRL_PORT), a
                            147 ;src/main.c:96: VDP_CTRL_PORT = ((addr >> 8) & 0x3F);
   0016 FD 7E 01      [19]  148 	ld	a, 1 (iy)
   0019 E6 3F         [ 7]  149 	and	a, #0x3f
   001B D3 BF         [11]  150 	out	(_VDP_CTRL_PORT), a
                            151 ;src/main.c:97: }
   001D C9            [10]  152 	ret
   001E                     153 _msx1_font:
   001E 00                  154 	.db #0x00	; 0
   001F 00                  155 	.db #0x00	; 0
   0020 00                  156 	.db #0x00	; 0
   0021 00                  157 	.db #0x00	; 0
   0022 00                  158 	.db #0x00	; 0
   0023 00                  159 	.db #0x00	; 0
   0024 00                  160 	.db #0x00	; 0
   0025 00                  161 	.db #0x00	; 0
   0026 3C                  162 	.db #0x3c	; 60
   0027 42                  163 	.db #0x42	; 66	'B'
   0028 A5                  164 	.db #0xa5	; 165
   0029 81                  165 	.db #0x81	; 129
   002A A5                  166 	.db #0xa5	; 165
   002B 99                  167 	.db #0x99	; 153
   002C 42                  168 	.db #0x42	; 66	'B'
   002D 3C                  169 	.db #0x3c	; 60
   002E 3C                  170 	.db #0x3c	; 60
   002F 7E                  171 	.db #0x7e	; 126
   0030 DB                  172 	.db #0xdb	; 219
   0031 FF                  173 	.db #0xff	; 255
   0032 FF                  174 	.db #0xff	; 255
   0033 DB                  175 	.db #0xdb	; 219
   0034 66                  176 	.db #0x66	; 102	'f'
   0035 3C                  177 	.db #0x3c	; 60
   0036 6C                  178 	.db #0x6c	; 108	'l'
   0037 FE                  179 	.db #0xfe	; 254
   0038 FE                  180 	.db #0xfe	; 254
   0039 FE                  181 	.db #0xfe	; 254
   003A 7C                  182 	.db #0x7c	; 124
   003B 38                  183 	.db #0x38	; 56	'8'
   003C 10                  184 	.db #0x10	; 16
   003D 00                  185 	.db #0x00	; 0
   003E 10                  186 	.db #0x10	; 16
   003F 38                  187 	.db #0x38	; 56	'8'
   0040 7C                  188 	.db #0x7c	; 124
   0041 FE                  189 	.db #0xfe	; 254
   0042 7C                  190 	.db #0x7c	; 124
   0043 38                  191 	.db #0x38	; 56	'8'
   0044 10                  192 	.db #0x10	; 16
   0045 00                  193 	.db #0x00	; 0
   0046 10                  194 	.db #0x10	; 16
   0047 38                  195 	.db #0x38	; 56	'8'
   0048 54                  196 	.db #0x54	; 84	'T'
   0049 FE                  197 	.db #0xfe	; 254
   004A 54                  198 	.db #0x54	; 84	'T'
   004B 10                  199 	.db #0x10	; 16
   004C 38                  200 	.db #0x38	; 56	'8'
   004D 00                  201 	.db #0x00	; 0
   004E 10                  202 	.db #0x10	; 16
   004F 38                  203 	.db #0x38	; 56	'8'
   0050 7C                  204 	.db #0x7c	; 124
   0051 FE                  205 	.db #0xfe	; 254
   0052 FE                  206 	.db #0xfe	; 254
   0053 10                  207 	.db #0x10	; 16
   0054 38                  208 	.db #0x38	; 56	'8'
   0055 00                  209 	.db #0x00	; 0
   0056 00                  210 	.db #0x00	; 0
   0057 00                  211 	.db #0x00	; 0
   0058 00                  212 	.db #0x00	; 0
   0059 30                  213 	.db #0x30	; 48	'0'
   005A 30                  214 	.db #0x30	; 48	'0'
   005B 00                  215 	.db #0x00	; 0
   005C 00                  216 	.db #0x00	; 0
   005D 00                  217 	.db #0x00	; 0
   005E FF                  218 	.db #0xff	; 255
   005F FF                  219 	.db #0xff	; 255
   0060 FF                  220 	.db #0xff	; 255
   0061 E7                  221 	.db #0xe7	; 231
   0062 E7                  222 	.db #0xe7	; 231
   0063 FF                  223 	.db #0xff	; 255
   0064 FF                  224 	.db #0xff	; 255
   0065 FF                  225 	.db #0xff	; 255
   0066 38                  226 	.db #0x38	; 56	'8'
   0067 44                  227 	.db #0x44	; 68	'D'
   0068 82                  228 	.db #0x82	; 130
   0069 82                  229 	.db #0x82	; 130
   006A 82                  230 	.db #0x82	; 130
   006B 44                  231 	.db #0x44	; 68	'D'
   006C 38                  232 	.db #0x38	; 56	'8'
   006D 00                  233 	.db #0x00	; 0
   006E C7                  234 	.db #0xc7	; 199
   006F BB                  235 	.db #0xbb	; 187
   0070 7D                  236 	.db #0x7d	; 125
   0071 7D                  237 	.db #0x7d	; 125
   0072 7D                  238 	.db #0x7d	; 125
   0073 BB                  239 	.db #0xbb	; 187
   0074 C7                  240 	.db #0xc7	; 199
   0075 FF                  241 	.db #0xff	; 255
   0076 0F                  242 	.db #0x0f	; 15
   0077 03                  243 	.db #0x03	; 3
   0078 05                  244 	.db #0x05	; 5
   0079 79                  245 	.db #0x79	; 121	'y'
   007A 88                  246 	.db #0x88	; 136
   007B 88                  247 	.db #0x88	; 136
   007C 88                  248 	.db #0x88	; 136
   007D 70                  249 	.db #0x70	; 112	'p'
   007E 38                  250 	.db #0x38	; 56	'8'
   007F 44                  251 	.db #0x44	; 68	'D'
   0080 44                  252 	.db #0x44	; 68	'D'
   0081 44                  253 	.db #0x44	; 68	'D'
   0082 38                  254 	.db #0x38	; 56	'8'
   0083 10                  255 	.db #0x10	; 16
   0084 7C                  256 	.db #0x7c	; 124
   0085 10                  257 	.db #0x10	; 16
   0086 30                  258 	.db #0x30	; 48	'0'
   0087 28                  259 	.db #0x28	; 40
   0088 24                  260 	.db #0x24	; 36
   0089 24                  261 	.db #0x24	; 36
   008A 28                  262 	.db #0x28	; 40
   008B 20                  263 	.db #0x20	; 32
   008C E0                  264 	.db #0xe0	; 224
   008D C0                  265 	.db #0xc0	; 192
   008E 3C                  266 	.db #0x3c	; 60
   008F 24                  267 	.db #0x24	; 36
   0090 3C                  268 	.db #0x3c	; 60
   0091 24                  269 	.db #0x24	; 36
   0092 24                  270 	.db #0x24	; 36
   0093 E4                  271 	.db #0xe4	; 228
   0094 DC                  272 	.db #0xdc	; 220
   0095 18                  273 	.db #0x18	; 24
   0096 10                  274 	.db #0x10	; 16
   0097 54                  275 	.db #0x54	; 84	'T'
   0098 38                  276 	.db #0x38	; 56	'8'
   0099 EE                  277 	.db #0xee	; 238
   009A 38                  278 	.db #0x38	; 56	'8'
   009B 54                  279 	.db #0x54	; 84	'T'
   009C 10                  280 	.db #0x10	; 16
   009D 00                  281 	.db #0x00	; 0
   009E 10                  282 	.db #0x10	; 16
   009F 10                  283 	.db #0x10	; 16
   00A0 10                  284 	.db #0x10	; 16
   00A1 7C                  285 	.db #0x7c	; 124
   00A2 10                  286 	.db #0x10	; 16
   00A3 10                  287 	.db #0x10	; 16
   00A4 10                  288 	.db #0x10	; 16
   00A5 10                  289 	.db #0x10	; 16
   00A6 10                  290 	.db #0x10	; 16
   00A7 10                  291 	.db #0x10	; 16
   00A8 10                  292 	.db #0x10	; 16
   00A9 FF                  293 	.db #0xff	; 255
   00AA 00                  294 	.db #0x00	; 0
   00AB 00                  295 	.db #0x00	; 0
   00AC 00                  296 	.db #0x00	; 0
   00AD 00                  297 	.db #0x00	; 0
   00AE 00                  298 	.db #0x00	; 0
   00AF 00                  299 	.db #0x00	; 0
   00B0 00                  300 	.db #0x00	; 0
   00B1 FF                  301 	.db #0xff	; 255
   00B2 10                  302 	.db #0x10	; 16
   00B3 10                  303 	.db #0x10	; 16
   00B4 10                  304 	.db #0x10	; 16
   00B5 10                  305 	.db #0x10	; 16
   00B6 10                  306 	.db #0x10	; 16
   00B7 10                  307 	.db #0x10	; 16
   00B8 10                  308 	.db #0x10	; 16
   00B9 F0                  309 	.db #0xf0	; 240
   00BA 10                  310 	.db #0x10	; 16
   00BB 10                  311 	.db #0x10	; 16
   00BC 10                  312 	.db #0x10	; 16
   00BD 10                  313 	.db #0x10	; 16
   00BE 10                  314 	.db #0x10	; 16
   00BF 10                  315 	.db #0x10	; 16
   00C0 10                  316 	.db #0x10	; 16
   00C1 1F                  317 	.db #0x1f	; 31
   00C2 10                  318 	.db #0x10	; 16
   00C3 10                  319 	.db #0x10	; 16
   00C4 10                  320 	.db #0x10	; 16
   00C5 10                  321 	.db #0x10	; 16
   00C6 10                  322 	.db #0x10	; 16
   00C7 10                  323 	.db #0x10	; 16
   00C8 10                  324 	.db #0x10	; 16
   00C9 FF                  325 	.db #0xff	; 255
   00CA 10                  326 	.db #0x10	; 16
   00CB 10                  327 	.db #0x10	; 16
   00CC 10                  328 	.db #0x10	; 16
   00CD 10                  329 	.db #0x10	; 16
   00CE 10                  330 	.db #0x10	; 16
   00CF 10                  331 	.db #0x10	; 16
   00D0 10                  332 	.db #0x10	; 16
   00D1 10                  333 	.db #0x10	; 16
   00D2 10                  334 	.db #0x10	; 16
   00D3 10                  335 	.db #0x10	; 16
   00D4 10                  336 	.db #0x10	; 16
   00D5 10                  337 	.db #0x10	; 16
   00D6 00                  338 	.db #0x00	; 0
   00D7 00                  339 	.db #0x00	; 0
   00D8 00                  340 	.db #0x00	; 0
   00D9 FF                  341 	.db #0xff	; 255
   00DA 00                  342 	.db #0x00	; 0
   00DB 00                  343 	.db #0x00	; 0
   00DC 00                  344 	.db #0x00	; 0
   00DD 00                  345 	.db #0x00	; 0
   00DE 00                  346 	.db #0x00	; 0
   00DF 00                  347 	.db #0x00	; 0
   00E0 00                  348 	.db #0x00	; 0
   00E1 1F                  349 	.db #0x1f	; 31
   00E2 10                  350 	.db #0x10	; 16
   00E3 10                  351 	.db #0x10	; 16
   00E4 10                  352 	.db #0x10	; 16
   00E5 10                  353 	.db #0x10	; 16
   00E6 00                  354 	.db #0x00	; 0
   00E7 00                  355 	.db #0x00	; 0
   00E8 00                  356 	.db #0x00	; 0
   00E9 F0                  357 	.db #0xf0	; 240
   00EA 10                  358 	.db #0x10	; 16
   00EB 10                  359 	.db #0x10	; 16
   00EC 10                  360 	.db #0x10	; 16
   00ED 10                  361 	.db #0x10	; 16
   00EE 10                  362 	.db #0x10	; 16
   00EF 10                  363 	.db #0x10	; 16
   00F0 10                  364 	.db #0x10	; 16
   00F1 1F                  365 	.db #0x1f	; 31
   00F2 00                  366 	.db #0x00	; 0
   00F3 00                  367 	.db #0x00	; 0
   00F4 00                  368 	.db #0x00	; 0
   00F5 00                  369 	.db #0x00	; 0
   00F6 10                  370 	.db #0x10	; 16
   00F7 10                  371 	.db #0x10	; 16
   00F8 10                  372 	.db #0x10	; 16
   00F9 F0                  373 	.db #0xf0	; 240
   00FA 00                  374 	.db #0x00	; 0
   00FB 00                  375 	.db #0x00	; 0
   00FC 00                  376 	.db #0x00	; 0
   00FD 00                  377 	.db #0x00	; 0
   00FE 81                  378 	.db #0x81	; 129
   00FF 42                  379 	.db #0x42	; 66	'B'
   0100 24                  380 	.db #0x24	; 36
   0101 18                  381 	.db #0x18	; 24
   0102 18                  382 	.db #0x18	; 24
   0103 24                  383 	.db #0x24	; 36
   0104 42                  384 	.db #0x42	; 66	'B'
   0105 81                  385 	.db #0x81	; 129
   0106 7E                  386 	.db #0x7e	; 126
   0107 81                  387 	.db #0x81	; 129
   0108 BD                  388 	.db #0xbd	; 189
   0109 A1                  389 	.db #0xa1	; 161
   010A A1                  390 	.db #0xa1	; 161
   010B BD                  391 	.db #0xbd	; 189
   010C 81                  392 	.db #0x81	; 129
   010D 7E                  393 	.db #0x7e	; 126
   010E 1F                  394 	.db #0x1f	; 31
   010F 04                  395 	.db #0x04	; 4
   0110 04                  396 	.db #0x04	; 4
   0111 04                  397 	.db #0x04	; 4
   0112 00                  398 	.db #0x00	; 0
   0113 00                  399 	.db #0x00	; 0
   0114 00                  400 	.db #0x00	; 0
   0115 00                  401 	.db #0x00	; 0
   0116 44                  402 	.db #0x44	; 68	'D'
   0117 6C                  403 	.db #0x6c	; 108	'l'
   0118 54                  404 	.db #0x54	; 84	'T'
   0119 54                  405 	.db #0x54	; 84	'T'
   011A 00                  406 	.db #0x00	; 0
   011B 00                  407 	.db #0x00	; 0
   011C 00                  408 	.db #0x00	; 0
   011D 00                  409 	.db #0x00	; 0
   011E 00                  410 	.db #0x00	; 0
   011F 00                  411 	.db #0x00	; 0
   0120 00                  412 	.db #0x00	; 0
   0121 00                  413 	.db #0x00	; 0
   0122 00                  414 	.db #0x00	; 0
   0123 00                  415 	.db #0x00	; 0
   0124 00                  416 	.db #0x00	; 0
   0125 00                  417 	.db #0x00	; 0
   0126 20                  418 	.db #0x20	; 32
   0127 20                  419 	.db #0x20	; 32
   0128 20                  420 	.db #0x20	; 32
   0129 20                  421 	.db #0x20	; 32
   012A 00                  422 	.db #0x00	; 0
   012B 00                  423 	.db #0x00	; 0
   012C 20                  424 	.db #0x20	; 32
   012D 00                  425 	.db #0x00	; 0
   012E 50                  426 	.db #0x50	; 80	'P'
   012F 50                  427 	.db #0x50	; 80	'P'
   0130 50                  428 	.db #0x50	; 80	'P'
   0131 00                  429 	.db #0x00	; 0
   0132 00                  430 	.db #0x00	; 0
   0133 00                  431 	.db #0x00	; 0
   0134 00                  432 	.db #0x00	; 0
   0135 00                  433 	.db #0x00	; 0
   0136 50                  434 	.db #0x50	; 80	'P'
   0137 50                  435 	.db #0x50	; 80	'P'
   0138 F8                  436 	.db #0xf8	; 248
   0139 50                  437 	.db #0x50	; 80	'P'
   013A F8                  438 	.db #0xf8	; 248
   013B 50                  439 	.db #0x50	; 80	'P'
   013C 50                  440 	.db #0x50	; 80	'P'
   013D 00                  441 	.db #0x00	; 0
   013E 20                  442 	.db #0x20	; 32
   013F 78                  443 	.db #0x78	; 120	'x'
   0140 A0                  444 	.db #0xa0	; 160
   0141 70                  445 	.db #0x70	; 112	'p'
   0142 28                  446 	.db #0x28	; 40
   0143 F0                  447 	.db #0xf0	; 240
   0144 20                  448 	.db #0x20	; 32
   0145 00                  449 	.db #0x00	; 0
   0146 C0                  450 	.db #0xc0	; 192
   0147 C8                  451 	.db #0xc8	; 200
   0148 10                  452 	.db #0x10	; 16
   0149 20                  453 	.db #0x20	; 32
   014A 40                  454 	.db #0x40	; 64
   014B 98                  455 	.db #0x98	; 152
   014C 18                  456 	.db #0x18	; 24
   014D 00                  457 	.db #0x00	; 0
   014E 40                  458 	.db #0x40	; 64
   014F A0                  459 	.db #0xa0	; 160
   0150 40                  460 	.db #0x40	; 64
   0151 A8                  461 	.db #0xa8	; 168
   0152 90                  462 	.db #0x90	; 144
   0153 98                  463 	.db #0x98	; 152
   0154 60                  464 	.db #0x60	; 96
   0155 00                  465 	.db #0x00	; 0
   0156 10                  466 	.db #0x10	; 16
   0157 20                  467 	.db #0x20	; 32
   0158 40                  468 	.db #0x40	; 64
   0159 00                  469 	.db #0x00	; 0
   015A 00                  470 	.db #0x00	; 0
   015B 00                  471 	.db #0x00	; 0
   015C 00                  472 	.db #0x00	; 0
   015D 00                  473 	.db #0x00	; 0
   015E 10                  474 	.db #0x10	; 16
   015F 20                  475 	.db #0x20	; 32
   0160 40                  476 	.db #0x40	; 64
   0161 40                  477 	.db #0x40	; 64
   0162 40                  478 	.db #0x40	; 64
   0163 20                  479 	.db #0x20	; 32
   0164 10                  480 	.db #0x10	; 16
   0165 00                  481 	.db #0x00	; 0
   0166 40                  482 	.db #0x40	; 64
   0167 20                  483 	.db #0x20	; 32
   0168 10                  484 	.db #0x10	; 16
   0169 10                  485 	.db #0x10	; 16
   016A 10                  486 	.db #0x10	; 16
   016B 20                  487 	.db #0x20	; 32
   016C 40                  488 	.db #0x40	; 64
   016D 00                  489 	.db #0x00	; 0
   016E 20                  490 	.db #0x20	; 32
   016F A8                  491 	.db #0xa8	; 168
   0170 70                  492 	.db #0x70	; 112	'p'
   0171 20                  493 	.db #0x20	; 32
   0172 70                  494 	.db #0x70	; 112	'p'
   0173 A8                  495 	.db #0xa8	; 168
   0174 20                  496 	.db #0x20	; 32
   0175 00                  497 	.db #0x00	; 0
   0176 00                  498 	.db #0x00	; 0
   0177 20                  499 	.db #0x20	; 32
   0178 20                  500 	.db #0x20	; 32
   0179 F8                  501 	.db #0xf8	; 248
   017A 20                  502 	.db #0x20	; 32
   017B 20                  503 	.db #0x20	; 32
   017C 00                  504 	.db #0x00	; 0
   017D 00                  505 	.db #0x00	; 0
   017E 00                  506 	.db #0x00	; 0
   017F 00                  507 	.db #0x00	; 0
   0180 00                  508 	.db #0x00	; 0
   0181 00                  509 	.db #0x00	; 0
   0182 00                  510 	.db #0x00	; 0
   0183 20                  511 	.db #0x20	; 32
   0184 20                  512 	.db #0x20	; 32
   0185 40                  513 	.db #0x40	; 64
   0186 00                  514 	.db #0x00	; 0
   0187 00                  515 	.db #0x00	; 0
   0188 00                  516 	.db #0x00	; 0
   0189 78                  517 	.db #0x78	; 120	'x'
   018A 00                  518 	.db #0x00	; 0
   018B 00                  519 	.db #0x00	; 0
   018C 00                  520 	.db #0x00	; 0
   018D 00                  521 	.db #0x00	; 0
   018E 00                  522 	.db #0x00	; 0
   018F 00                  523 	.db #0x00	; 0
   0190 00                  524 	.db #0x00	; 0
   0191 00                  525 	.db #0x00	; 0
   0192 00                  526 	.db #0x00	; 0
   0193 60                  527 	.db #0x60	; 96
   0194 60                  528 	.db #0x60	; 96
   0195 00                  529 	.db #0x00	; 0
   0196 00                  530 	.db #0x00	; 0
   0197 00                  531 	.db #0x00	; 0
   0198 08                  532 	.db #0x08	; 8
   0199 10                  533 	.db #0x10	; 16
   019A 20                  534 	.db #0x20	; 32
   019B 40                  535 	.db #0x40	; 64
   019C 80                  536 	.db #0x80	; 128
   019D 00                  537 	.db #0x00	; 0
   019E 70                  538 	.db #0x70	; 112	'p'
   019F 88                  539 	.db #0x88	; 136
   01A0 98                  540 	.db #0x98	; 152
   01A1 A8                  541 	.db #0xa8	; 168
   01A2 C8                  542 	.db #0xc8	; 200
   01A3 88                  543 	.db #0x88	; 136
   01A4 70                  544 	.db #0x70	; 112	'p'
   01A5 00                  545 	.db #0x00	; 0
   01A6 20                  546 	.db #0x20	; 32
   01A7 60                  547 	.db #0x60	; 96
   01A8 A0                  548 	.db #0xa0	; 160
   01A9 20                  549 	.db #0x20	; 32
   01AA 20                  550 	.db #0x20	; 32
   01AB 20                  551 	.db #0x20	; 32
   01AC F0                  552 	.db #0xf0	; 240
   01AD 00                  553 	.db #0x00	; 0
   01AE 70                  554 	.db #0x70	; 112	'p'
   01AF 88                  555 	.db #0x88	; 136
   01B0 08                  556 	.db #0x08	; 8
   01B1 10                  557 	.db #0x10	; 16
   01B2 60                  558 	.db #0x60	; 96
   01B3 80                  559 	.db #0x80	; 128
   01B4 F8                  560 	.db #0xf8	; 248
   01B5 00                  561 	.db #0x00	; 0
   01B6 70                  562 	.db #0x70	; 112	'p'
   01B7 88                  563 	.db #0x88	; 136
   01B8 08                  564 	.db #0x08	; 8
   01B9 30                  565 	.db #0x30	; 48	'0'
   01BA 08                  566 	.db #0x08	; 8
   01BB 88                  567 	.db #0x88	; 136
   01BC 70                  568 	.db #0x70	; 112	'p'
   01BD 00                  569 	.db #0x00	; 0
   01BE 10                  570 	.db #0x10	; 16
   01BF 30                  571 	.db #0x30	; 48	'0'
   01C0 50                  572 	.db #0x50	; 80	'P'
   01C1 90                  573 	.db #0x90	; 144
   01C2 F8                  574 	.db #0xf8	; 248
   01C3 10                  575 	.db #0x10	; 16
   01C4 10                  576 	.db #0x10	; 16
   01C5 00                  577 	.db #0x00	; 0
   01C6 F8                  578 	.db #0xf8	; 248
   01C7 80                  579 	.db #0x80	; 128
   01C8 E0                  580 	.db #0xe0	; 224
   01C9 10                  581 	.db #0x10	; 16
   01CA 08                  582 	.db #0x08	; 8
   01CB 10                  583 	.db #0x10	; 16
   01CC E0                  584 	.db #0xe0	; 224
   01CD 00                  585 	.db #0x00	; 0
   01CE 30                  586 	.db #0x30	; 48	'0'
   01CF 40                  587 	.db #0x40	; 64
   01D0 80                  588 	.db #0x80	; 128
   01D1 F0                  589 	.db #0xf0	; 240
   01D2 88                  590 	.db #0x88	; 136
   01D3 88                  591 	.db #0x88	; 136
   01D4 70                  592 	.db #0x70	; 112	'p'
   01D5 00                  593 	.db #0x00	; 0
   01D6 F8                  594 	.db #0xf8	; 248
   01D7 88                  595 	.db #0x88	; 136
   01D8 10                  596 	.db #0x10	; 16
   01D9 20                  597 	.db #0x20	; 32
   01DA 20                  598 	.db #0x20	; 32
   01DB 20                  599 	.db #0x20	; 32
   01DC 20                  600 	.db #0x20	; 32
   01DD 00                  601 	.db #0x00	; 0
   01DE 70                  602 	.db #0x70	; 112	'p'
   01DF 88                  603 	.db #0x88	; 136
   01E0 88                  604 	.db #0x88	; 136
   01E1 70                  605 	.db #0x70	; 112	'p'
   01E2 88                  606 	.db #0x88	; 136
   01E3 88                  607 	.db #0x88	; 136
   01E4 70                  608 	.db #0x70	; 112	'p'
   01E5 00                  609 	.db #0x00	; 0
   01E6 70                  610 	.db #0x70	; 112	'p'
   01E7 88                  611 	.db #0x88	; 136
   01E8 88                  612 	.db #0x88	; 136
   01E9 78                  613 	.db #0x78	; 120	'x'
   01EA 08                  614 	.db #0x08	; 8
   01EB 10                  615 	.db #0x10	; 16
   01EC 60                  616 	.db #0x60	; 96
   01ED 00                  617 	.db #0x00	; 0
   01EE 00                  618 	.db #0x00	; 0
   01EF 00                  619 	.db #0x00	; 0
   01F0 20                  620 	.db #0x20	; 32
   01F1 00                  621 	.db #0x00	; 0
   01F2 00                  622 	.db #0x00	; 0
   01F3 20                  623 	.db #0x20	; 32
   01F4 00                  624 	.db #0x00	; 0
   01F5 00                  625 	.db #0x00	; 0
   01F6 00                  626 	.db #0x00	; 0
   01F7 00                  627 	.db #0x00	; 0
   01F8 20                  628 	.db #0x20	; 32
   01F9 00                  629 	.db #0x00	; 0
   01FA 00                  630 	.db #0x00	; 0
   01FB 20                  631 	.db #0x20	; 32
   01FC 20                  632 	.db #0x20	; 32
   01FD 40                  633 	.db #0x40	; 64
   01FE 18                  634 	.db #0x18	; 24
   01FF 30                  635 	.db #0x30	; 48	'0'
   0200 60                  636 	.db #0x60	; 96
   0201 C0                  637 	.db #0xc0	; 192
   0202 60                  638 	.db #0x60	; 96
   0203 30                  639 	.db #0x30	; 48	'0'
   0204 18                  640 	.db #0x18	; 24
   0205 00                  641 	.db #0x00	; 0
   0206 00                  642 	.db #0x00	; 0
   0207 00                  643 	.db #0x00	; 0
   0208 F8                  644 	.db #0xf8	; 248
   0209 00                  645 	.db #0x00	; 0
   020A F8                  646 	.db #0xf8	; 248
   020B 00                  647 	.db #0x00	; 0
   020C 00                  648 	.db #0x00	; 0
   020D 00                  649 	.db #0x00	; 0
   020E C0                  650 	.db #0xc0	; 192
   020F 60                  651 	.db #0x60	; 96
   0210 30                  652 	.db #0x30	; 48	'0'
   0211 18                  653 	.db #0x18	; 24
   0212 30                  654 	.db #0x30	; 48	'0'
   0213 60                  655 	.db #0x60	; 96
   0214 C0                  656 	.db #0xc0	; 192
   0215 00                  657 	.db #0x00	; 0
   0216 70                  658 	.db #0x70	; 112	'p'
   0217 88                  659 	.db #0x88	; 136
   0218 08                  660 	.db #0x08	; 8
   0219 10                  661 	.db #0x10	; 16
   021A 20                  662 	.db #0x20	; 32
   021B 00                  663 	.db #0x00	; 0
   021C 20                  664 	.db #0x20	; 32
   021D 00                  665 	.db #0x00	; 0
   021E 70                  666 	.db #0x70	; 112	'p'
   021F 88                  667 	.db #0x88	; 136
   0220 08                  668 	.db #0x08	; 8
   0221 48                  669 	.db #0x48	; 72	'H'
   0222 A8                  670 	.db #0xa8	; 168
   0223 A8                  671 	.db #0xa8	; 168
   0224 70                  672 	.db #0x70	; 112	'p'
   0225 00                  673 	.db #0x00	; 0
   0226 20                  674 	.db #0x20	; 32
   0227 50                  675 	.db #0x50	; 80	'P'
   0228 88                  676 	.db #0x88	; 136
   0229 88                  677 	.db #0x88	; 136
   022A F8                  678 	.db #0xf8	; 248
   022B 88                  679 	.db #0x88	; 136
   022C 88                  680 	.db #0x88	; 136
   022D 00                  681 	.db #0x00	; 0
   022E F0                  682 	.db #0xf0	; 240
   022F 48                  683 	.db #0x48	; 72	'H'
   0230 48                  684 	.db #0x48	; 72	'H'
   0231 70                  685 	.db #0x70	; 112	'p'
   0232 48                  686 	.db #0x48	; 72	'H'
   0233 48                  687 	.db #0x48	; 72	'H'
   0234 F0                  688 	.db #0xf0	; 240
   0235 00                  689 	.db #0x00	; 0
   0236 30                  690 	.db #0x30	; 48	'0'
   0237 48                  691 	.db #0x48	; 72	'H'
   0238 80                  692 	.db #0x80	; 128
   0239 80                  693 	.db #0x80	; 128
   023A 80                  694 	.db #0x80	; 128
   023B 48                  695 	.db #0x48	; 72	'H'
   023C 30                  696 	.db #0x30	; 48	'0'
   023D 00                  697 	.db #0x00	; 0
   023E E0                  698 	.db #0xe0	; 224
   023F 50                  699 	.db #0x50	; 80	'P'
   0240 48                  700 	.db #0x48	; 72	'H'
   0241 48                  701 	.db #0x48	; 72	'H'
   0242 48                  702 	.db #0x48	; 72	'H'
   0243 50                  703 	.db #0x50	; 80	'P'
   0244 E0                  704 	.db #0xe0	; 224
   0245 00                  705 	.db #0x00	; 0
   0246 F8                  706 	.db #0xf8	; 248
   0247 80                  707 	.db #0x80	; 128
   0248 80                  708 	.db #0x80	; 128
   0249 F0                  709 	.db #0xf0	; 240
   024A 80                  710 	.db #0x80	; 128
   024B 80                  711 	.db #0x80	; 128
   024C F8                  712 	.db #0xf8	; 248
   024D 00                  713 	.db #0x00	; 0
   024E F8                  714 	.db #0xf8	; 248
   024F 80                  715 	.db #0x80	; 128
   0250 80                  716 	.db #0x80	; 128
   0251 F0                  717 	.db #0xf0	; 240
   0252 80                  718 	.db #0x80	; 128
   0253 80                  719 	.db #0x80	; 128
   0254 80                  720 	.db #0x80	; 128
   0255 00                  721 	.db #0x00	; 0
   0256 70                  722 	.db #0x70	; 112	'p'
   0257 88                  723 	.db #0x88	; 136
   0258 80                  724 	.db #0x80	; 128
   0259 B8                  725 	.db #0xb8	; 184
   025A 88                  726 	.db #0x88	; 136
   025B 88                  727 	.db #0x88	; 136
   025C 70                  728 	.db #0x70	; 112	'p'
   025D 00                  729 	.db #0x00	; 0
   025E 88                  730 	.db #0x88	; 136
   025F 88                  731 	.db #0x88	; 136
   0260 88                  732 	.db #0x88	; 136
   0261 F8                  733 	.db #0xf8	; 248
   0262 88                  734 	.db #0x88	; 136
   0263 88                  735 	.db #0x88	; 136
   0264 88                  736 	.db #0x88	; 136
   0265 00                  737 	.db #0x00	; 0
   0266 70                  738 	.db #0x70	; 112	'p'
   0267 20                  739 	.db #0x20	; 32
   0268 20                  740 	.db #0x20	; 32
   0269 20                  741 	.db #0x20	; 32
   026A 20                  742 	.db #0x20	; 32
   026B 20                  743 	.db #0x20	; 32
   026C 70                  744 	.db #0x70	; 112	'p'
   026D 00                  745 	.db #0x00	; 0
   026E 38                  746 	.db #0x38	; 56	'8'
   026F 10                  747 	.db #0x10	; 16
   0270 10                  748 	.db #0x10	; 16
   0271 10                  749 	.db #0x10	; 16
   0272 90                  750 	.db #0x90	; 144
   0273 90                  751 	.db #0x90	; 144
   0274 60                  752 	.db #0x60	; 96
   0275 00                  753 	.db #0x00	; 0
   0276 88                  754 	.db #0x88	; 136
   0277 90                  755 	.db #0x90	; 144
   0278 A0                  756 	.db #0xa0	; 160
   0279 C0                  757 	.db #0xc0	; 192
   027A A0                  758 	.db #0xa0	; 160
   027B 90                  759 	.db #0x90	; 144
   027C 88                  760 	.db #0x88	; 136
   027D 00                  761 	.db #0x00	; 0
   027E 80                  762 	.db #0x80	; 128
   027F 80                  763 	.db #0x80	; 128
   0280 80                  764 	.db #0x80	; 128
   0281 80                  765 	.db #0x80	; 128
   0282 80                  766 	.db #0x80	; 128
   0283 80                  767 	.db #0x80	; 128
   0284 F8                  768 	.db #0xf8	; 248
   0285 00                  769 	.db #0x00	; 0
   0286 88                  770 	.db #0x88	; 136
   0287 D8                  771 	.db #0xd8	; 216
   0288 A8                  772 	.db #0xa8	; 168
   0289 A8                  773 	.db #0xa8	; 168
   028A 88                  774 	.db #0x88	; 136
   028B 88                  775 	.db #0x88	; 136
   028C 88                  776 	.db #0x88	; 136
   028D 00                  777 	.db #0x00	; 0
   028E 88                  778 	.db #0x88	; 136
   028F C8                  779 	.db #0xc8	; 200
   0290 C8                  780 	.db #0xc8	; 200
   0291 A8                  781 	.db #0xa8	; 168
   0292 98                  782 	.db #0x98	; 152
   0293 98                  783 	.db #0x98	; 152
   0294 88                  784 	.db #0x88	; 136
   0295 00                  785 	.db #0x00	; 0
   0296 70                  786 	.db #0x70	; 112	'p'
   0297 88                  787 	.db #0x88	; 136
   0298 88                  788 	.db #0x88	; 136
   0299 88                  789 	.db #0x88	; 136
   029A 88                  790 	.db #0x88	; 136
   029B 88                  791 	.db #0x88	; 136
   029C 70                  792 	.db #0x70	; 112	'p'
   029D 00                  793 	.db #0x00	; 0
   029E F0                  794 	.db #0xf0	; 240
   029F 88                  795 	.db #0x88	; 136
   02A0 88                  796 	.db #0x88	; 136
   02A1 F0                  797 	.db #0xf0	; 240
   02A2 80                  798 	.db #0x80	; 128
   02A3 80                  799 	.db #0x80	; 128
   02A4 80                  800 	.db #0x80	; 128
   02A5 00                  801 	.db #0x00	; 0
   02A6 70                  802 	.db #0x70	; 112	'p'
   02A7 88                  803 	.db #0x88	; 136
   02A8 88                  804 	.db #0x88	; 136
   02A9 88                  805 	.db #0x88	; 136
   02AA A8                  806 	.db #0xa8	; 168
   02AB 90                  807 	.db #0x90	; 144
   02AC 68                  808 	.db #0x68	; 104	'h'
   02AD 00                  809 	.db #0x00	; 0
   02AE F0                  810 	.db #0xf0	; 240
   02AF 88                  811 	.db #0x88	; 136
   02B0 88                  812 	.db #0x88	; 136
   02B1 F0                  813 	.db #0xf0	; 240
   02B2 A0                  814 	.db #0xa0	; 160
   02B3 90                  815 	.db #0x90	; 144
   02B4 88                  816 	.db #0x88	; 136
   02B5 00                  817 	.db #0x00	; 0
   02B6 70                  818 	.db #0x70	; 112	'p'
   02B7 88                  819 	.db #0x88	; 136
   02B8 80                  820 	.db #0x80	; 128
   02B9 70                  821 	.db #0x70	; 112	'p'
   02BA 08                  822 	.db #0x08	; 8
   02BB 88                  823 	.db #0x88	; 136
   02BC 70                  824 	.db #0x70	; 112	'p'
   02BD 00                  825 	.db #0x00	; 0
   02BE F8                  826 	.db #0xf8	; 248
   02BF 20                  827 	.db #0x20	; 32
   02C0 20                  828 	.db #0x20	; 32
   02C1 20                  829 	.db #0x20	; 32
   02C2 20                  830 	.db #0x20	; 32
   02C3 20                  831 	.db #0x20	; 32
   02C4 20                  832 	.db #0x20	; 32
   02C5 00                  833 	.db #0x00	; 0
   02C6 88                  834 	.db #0x88	; 136
   02C7 88                  835 	.db #0x88	; 136
   02C8 88                  836 	.db #0x88	; 136
   02C9 88                  837 	.db #0x88	; 136
   02CA 88                  838 	.db #0x88	; 136
   02CB 88                  839 	.db #0x88	; 136
   02CC 70                  840 	.db #0x70	; 112	'p'
   02CD 00                  841 	.db #0x00	; 0
   02CE 88                  842 	.db #0x88	; 136
   02CF 88                  843 	.db #0x88	; 136
   02D0 88                  844 	.db #0x88	; 136
   02D1 88                  845 	.db #0x88	; 136
   02D2 50                  846 	.db #0x50	; 80	'P'
   02D3 50                  847 	.db #0x50	; 80	'P'
   02D4 20                  848 	.db #0x20	; 32
   02D5 00                  849 	.db #0x00	; 0
   02D6 88                  850 	.db #0x88	; 136
   02D7 88                  851 	.db #0x88	; 136
   02D8 88                  852 	.db #0x88	; 136
   02D9 A8                  853 	.db #0xa8	; 168
   02DA A8                  854 	.db #0xa8	; 168
   02DB D8                  855 	.db #0xd8	; 216
   02DC 88                  856 	.db #0x88	; 136
   02DD 00                  857 	.db #0x00	; 0
   02DE 88                  858 	.db #0x88	; 136
   02DF 88                  859 	.db #0x88	; 136
   02E0 50                  860 	.db #0x50	; 80	'P'
   02E1 20                  861 	.db #0x20	; 32
   02E2 50                  862 	.db #0x50	; 80	'P'
   02E3 88                  863 	.db #0x88	; 136
   02E4 88                  864 	.db #0x88	; 136
   02E5 00                  865 	.db #0x00	; 0
   02E6 88                  866 	.db #0x88	; 136
   02E7 88                  867 	.db #0x88	; 136
   02E8 88                  868 	.db #0x88	; 136
   02E9 70                  869 	.db #0x70	; 112	'p'
   02EA 20                  870 	.db #0x20	; 32
   02EB 20                  871 	.db #0x20	; 32
   02EC 20                  872 	.db #0x20	; 32
   02ED 00                  873 	.db #0x00	; 0
   02EE F8                  874 	.db #0xf8	; 248
   02EF 08                  875 	.db #0x08	; 8
   02F0 10                  876 	.db #0x10	; 16
   02F1 20                  877 	.db #0x20	; 32
   02F2 40                  878 	.db #0x40	; 64
   02F3 80                  879 	.db #0x80	; 128
   02F4 F8                  880 	.db #0xf8	; 248
   02F5 00                  881 	.db #0x00	; 0
   02F6 70                  882 	.db #0x70	; 112	'p'
   02F7 40                  883 	.db #0x40	; 64
   02F8 40                  884 	.db #0x40	; 64
   02F9 40                  885 	.db #0x40	; 64
   02FA 40                  886 	.db #0x40	; 64
   02FB 40                  887 	.db #0x40	; 64
   02FC 70                  888 	.db #0x70	; 112	'p'
   02FD 00                  889 	.db #0x00	; 0
   02FE 00                  890 	.db #0x00	; 0
   02FF 00                  891 	.db #0x00	; 0
   0300 80                  892 	.db #0x80	; 128
   0301 40                  893 	.db #0x40	; 64
   0302 20                  894 	.db #0x20	; 32
   0303 10                  895 	.db #0x10	; 16
   0304 08                  896 	.db #0x08	; 8
   0305 00                  897 	.db #0x00	; 0
   0306 70                  898 	.db #0x70	; 112	'p'
   0307 10                  899 	.db #0x10	; 16
   0308 10                  900 	.db #0x10	; 16
   0309 10                  901 	.db #0x10	; 16
   030A 10                  902 	.db #0x10	; 16
   030B 10                  903 	.db #0x10	; 16
   030C 70                  904 	.db #0x70	; 112	'p'
   030D 00                  905 	.db #0x00	; 0
   030E 20                  906 	.db #0x20	; 32
   030F 50                  907 	.db #0x50	; 80	'P'
   0310 88                  908 	.db #0x88	; 136
   0311 00                  909 	.db #0x00	; 0
   0312 00                  910 	.db #0x00	; 0
   0313 00                  911 	.db #0x00	; 0
   0314 00                  912 	.db #0x00	; 0
   0315 00                  913 	.db #0x00	; 0
   0316 00                  914 	.db #0x00	; 0
   0317 00                  915 	.db #0x00	; 0
   0318 00                  916 	.db #0x00	; 0
   0319 00                  917 	.db #0x00	; 0
   031A 00                  918 	.db #0x00	; 0
   031B 00                  919 	.db #0x00	; 0
   031C F8                  920 	.db #0xf8	; 248
   031D 00                  921 	.db #0x00	; 0
   031E 80                  922 	.db #0x80	; 128
   031F 40                  923 	.db #0x40	; 64
   0320 20                  924 	.db #0x20	; 32
   0321 00                  925 	.db #0x00	; 0
   0322 00                  926 	.db #0x00	; 0
   0323 00                  927 	.db #0x00	; 0
   0324 00                  928 	.db #0x00	; 0
   0325 00                  929 	.db #0x00	; 0
   0326 00                  930 	.db #0x00	; 0
   0327 00                  931 	.db #0x00	; 0
   0328 70                  932 	.db #0x70	; 112	'p'
   0329 08                  933 	.db #0x08	; 8
   032A 78                  934 	.db #0x78	; 120	'x'
   032B 88                  935 	.db #0x88	; 136
   032C 78                  936 	.db #0x78	; 120	'x'
   032D 00                  937 	.db #0x00	; 0
   032E 80                  938 	.db #0x80	; 128
   032F 80                  939 	.db #0x80	; 128
   0330 B0                  940 	.db #0xb0	; 176
   0331 C8                  941 	.db #0xc8	; 200
   0332 88                  942 	.db #0x88	; 136
   0333 C8                  943 	.db #0xc8	; 200
   0334 B0                  944 	.db #0xb0	; 176
   0335 00                  945 	.db #0x00	; 0
   0336 00                  946 	.db #0x00	; 0
   0337 00                  947 	.db #0x00	; 0
   0338 70                  948 	.db #0x70	; 112	'p'
   0339 88                  949 	.db #0x88	; 136
   033A 80                  950 	.db #0x80	; 128
   033B 88                  951 	.db #0x88	; 136
   033C 70                  952 	.db #0x70	; 112	'p'
   033D 00                  953 	.db #0x00	; 0
   033E 08                  954 	.db #0x08	; 8
   033F 08                  955 	.db #0x08	; 8
   0340 68                  956 	.db #0x68	; 104	'h'
   0341 98                  957 	.db #0x98	; 152
   0342 88                  958 	.db #0x88	; 136
   0343 98                  959 	.db #0x98	; 152
   0344 68                  960 	.db #0x68	; 104	'h'
   0345 00                  961 	.db #0x00	; 0
   0346 00                  962 	.db #0x00	; 0
   0347 00                  963 	.db #0x00	; 0
   0348 70                  964 	.db #0x70	; 112	'p'
   0349 88                  965 	.db #0x88	; 136
   034A F8                  966 	.db #0xf8	; 248
   034B 80                  967 	.db #0x80	; 128
   034C 70                  968 	.db #0x70	; 112	'p'
   034D 00                  969 	.db #0x00	; 0
   034E 10                  970 	.db #0x10	; 16
   034F 28                  971 	.db #0x28	; 40
   0350 20                  972 	.db #0x20	; 32
   0351 F8                  973 	.db #0xf8	; 248
   0352 20                  974 	.db #0x20	; 32
   0353 20                  975 	.db #0x20	; 32
   0354 20                  976 	.db #0x20	; 32
   0355 00                  977 	.db #0x00	; 0
   0356 00                  978 	.db #0x00	; 0
   0357 00                  979 	.db #0x00	; 0
   0358 68                  980 	.db #0x68	; 104	'h'
   0359 98                  981 	.db #0x98	; 152
   035A 98                  982 	.db #0x98	; 152
   035B 68                  983 	.db #0x68	; 104	'h'
   035C 08                  984 	.db #0x08	; 8
   035D 70                  985 	.db #0x70	; 112	'p'
   035E 80                  986 	.db #0x80	; 128
   035F 80                  987 	.db #0x80	; 128
   0360 F0                  988 	.db #0xf0	; 240
   0361 88                  989 	.db #0x88	; 136
   0362 88                  990 	.db #0x88	; 136
   0363 88                  991 	.db #0x88	; 136
   0364 88                  992 	.db #0x88	; 136
   0365 00                  993 	.db #0x00	; 0
   0366 20                  994 	.db #0x20	; 32
   0367 00                  995 	.db #0x00	; 0
   0368 60                  996 	.db #0x60	; 96
   0369 20                  997 	.db #0x20	; 32
   036A 20                  998 	.db #0x20	; 32
   036B 20                  999 	.db #0x20	; 32
   036C 70                 1000 	.db #0x70	; 112	'p'
   036D 00                 1001 	.db #0x00	; 0
   036E 10                 1002 	.db #0x10	; 16
   036F 00                 1003 	.db #0x00	; 0
   0370 30                 1004 	.db #0x30	; 48	'0'
   0371 10                 1005 	.db #0x10	; 16
   0372 10                 1006 	.db #0x10	; 16
   0373 10                 1007 	.db #0x10	; 16
   0374 90                 1008 	.db #0x90	; 144
   0375 60                 1009 	.db #0x60	; 96
   0376 40                 1010 	.db #0x40	; 64
   0377 40                 1011 	.db #0x40	; 64
   0378 48                 1012 	.db #0x48	; 72	'H'
   0379 50                 1013 	.db #0x50	; 80	'P'
   037A 60                 1014 	.db #0x60	; 96
   037B 50                 1015 	.db #0x50	; 80	'P'
   037C 48                 1016 	.db #0x48	; 72	'H'
   037D 00                 1017 	.db #0x00	; 0
   037E 60                 1018 	.db #0x60	; 96
   037F 20                 1019 	.db #0x20	; 32
   0380 20                 1020 	.db #0x20	; 32
   0381 20                 1021 	.db #0x20	; 32
   0382 20                 1022 	.db #0x20	; 32
   0383 20                 1023 	.db #0x20	; 32
   0384 70                 1024 	.db #0x70	; 112	'p'
   0385 00                 1025 	.db #0x00	; 0
   0386 00                 1026 	.db #0x00	; 0
   0387 00                 1027 	.db #0x00	; 0
   0388 D0                 1028 	.db #0xd0	; 208
   0389 A8                 1029 	.db #0xa8	; 168
   038A A8                 1030 	.db #0xa8	; 168
   038B A8                 1031 	.db #0xa8	; 168
   038C A8                 1032 	.db #0xa8	; 168
   038D 00                 1033 	.db #0x00	; 0
   038E 00                 1034 	.db #0x00	; 0
   038F 00                 1035 	.db #0x00	; 0
   0390 B0                 1036 	.db #0xb0	; 176
   0391 C8                 1037 	.db #0xc8	; 200
   0392 88                 1038 	.db #0x88	; 136
   0393 88                 1039 	.db #0x88	; 136
   0394 88                 1040 	.db #0x88	; 136
   0395 00                 1041 	.db #0x00	; 0
   0396 00                 1042 	.db #0x00	; 0
   0397 00                 1043 	.db #0x00	; 0
   0398 70                 1044 	.db #0x70	; 112	'p'
   0399 88                 1045 	.db #0x88	; 136
   039A 88                 1046 	.db #0x88	; 136
   039B 88                 1047 	.db #0x88	; 136
   039C 70                 1048 	.db #0x70	; 112	'p'
   039D 00                 1049 	.db #0x00	; 0
   039E 00                 1050 	.db #0x00	; 0
   039F 00                 1051 	.db #0x00	; 0
   03A0 B0                 1052 	.db #0xb0	; 176
   03A1 C8                 1053 	.db #0xc8	; 200
   03A2 C8                 1054 	.db #0xc8	; 200
   03A3 B0                 1055 	.db #0xb0	; 176
   03A4 80                 1056 	.db #0x80	; 128
   03A5 80                 1057 	.db #0x80	; 128
   03A6 00                 1058 	.db #0x00	; 0
   03A7 00                 1059 	.db #0x00	; 0
   03A8 68                 1060 	.db #0x68	; 104	'h'
   03A9 98                 1061 	.db #0x98	; 152
   03AA 98                 1062 	.db #0x98	; 152
   03AB 68                 1063 	.db #0x68	; 104	'h'
   03AC 08                 1064 	.db #0x08	; 8
   03AD 08                 1065 	.db #0x08	; 8
   03AE 00                 1066 	.db #0x00	; 0
   03AF 00                 1067 	.db #0x00	; 0
   03B0 B0                 1068 	.db #0xb0	; 176
   03B1 C8                 1069 	.db #0xc8	; 200
   03B2 80                 1070 	.db #0x80	; 128
   03B3 80                 1071 	.db #0x80	; 128
   03B4 80                 1072 	.db #0x80	; 128
   03B5 00                 1073 	.db #0x00	; 0
   03B6 00                 1074 	.db #0x00	; 0
   03B7 00                 1075 	.db #0x00	; 0
   03B8 78                 1076 	.db #0x78	; 120	'x'
   03B9 80                 1077 	.db #0x80	; 128
   03BA 70                 1078 	.db #0x70	; 112	'p'
   03BB 08                 1079 	.db #0x08	; 8
   03BC F0                 1080 	.db #0xf0	; 240
   03BD 00                 1081 	.db #0x00	; 0
   03BE 40                 1082 	.db #0x40	; 64
   03BF 40                 1083 	.db #0x40	; 64
   03C0 F0                 1084 	.db #0xf0	; 240
   03C1 40                 1085 	.db #0x40	; 64
   03C2 40                 1086 	.db #0x40	; 64
   03C3 48                 1087 	.db #0x48	; 72	'H'
   03C4 30                 1088 	.db #0x30	; 48	'0'
   03C5 00                 1089 	.db #0x00	; 0
   03C6 00                 1090 	.db #0x00	; 0
   03C7 00                 1091 	.db #0x00	; 0
   03C8 90                 1092 	.db #0x90	; 144
   03C9 90                 1093 	.db #0x90	; 144
   03CA 90                 1094 	.db #0x90	; 144
   03CB 90                 1095 	.db #0x90	; 144
   03CC 68                 1096 	.db #0x68	; 104	'h'
   03CD 00                 1097 	.db #0x00	; 0
   03CE 00                 1098 	.db #0x00	; 0
   03CF 00                 1099 	.db #0x00	; 0
   03D0 88                 1100 	.db #0x88	; 136
   03D1 88                 1101 	.db #0x88	; 136
   03D2 88                 1102 	.db #0x88	; 136
   03D3 50                 1103 	.db #0x50	; 80	'P'
   03D4 20                 1104 	.db #0x20	; 32
   03D5 00                 1105 	.db #0x00	; 0
   03D6 00                 1106 	.db #0x00	; 0
   03D7 00                 1107 	.db #0x00	; 0
   03D8 88                 1108 	.db #0x88	; 136
   03D9 A8                 1109 	.db #0xa8	; 168
   03DA A8                 1110 	.db #0xa8	; 168
   03DB A8                 1111 	.db #0xa8	; 168
   03DC 50                 1112 	.db #0x50	; 80	'P'
   03DD 00                 1113 	.db #0x00	; 0
   03DE 00                 1114 	.db #0x00	; 0
   03DF 00                 1115 	.db #0x00	; 0
   03E0 88                 1116 	.db #0x88	; 136
   03E1 50                 1117 	.db #0x50	; 80	'P'
   03E2 20                 1118 	.db #0x20	; 32
   03E3 50                 1119 	.db #0x50	; 80	'P'
   03E4 88                 1120 	.db #0x88	; 136
   03E5 00                 1121 	.db #0x00	; 0
   03E6 00                 1122 	.db #0x00	; 0
   03E7 00                 1123 	.db #0x00	; 0
   03E8 88                 1124 	.db #0x88	; 136
   03E9 88                 1125 	.db #0x88	; 136
   03EA 98                 1126 	.db #0x98	; 152
   03EB 68                 1127 	.db #0x68	; 104	'h'
   03EC 08                 1128 	.db #0x08	; 8
   03ED 70                 1129 	.db #0x70	; 112	'p'
   03EE 00                 1130 	.db #0x00	; 0
   03EF 00                 1131 	.db #0x00	; 0
   03F0 F8                 1132 	.db #0xf8	; 248
   03F1 10                 1133 	.db #0x10	; 16
   03F2 20                 1134 	.db #0x20	; 32
   03F3 40                 1135 	.db #0x40	; 64
   03F4 F8                 1136 	.db #0xf8	; 248
   03F5 00                 1137 	.db #0x00	; 0
   03F6 18                 1138 	.db #0x18	; 24
   03F7 20                 1139 	.db #0x20	; 32
   03F8 20                 1140 	.db #0x20	; 32
   03F9 40                 1141 	.db #0x40	; 64
   03FA 20                 1142 	.db #0x20	; 32
   03FB 20                 1143 	.db #0x20	; 32
   03FC 18                 1144 	.db #0x18	; 24
   03FD 00                 1145 	.db #0x00	; 0
   03FE 20                 1146 	.db #0x20	; 32
   03FF 20                 1147 	.db #0x20	; 32
   0400 20                 1148 	.db #0x20	; 32
   0401 00                 1149 	.db #0x00	; 0
   0402 20                 1150 	.db #0x20	; 32
   0403 20                 1151 	.db #0x20	; 32
   0404 20                 1152 	.db #0x20	; 32
   0405 00                 1153 	.db #0x00	; 0
   0406 C0                 1154 	.db #0xc0	; 192
   0407 20                 1155 	.db #0x20	; 32
   0408 20                 1156 	.db #0x20	; 32
   0409 10                 1157 	.db #0x10	; 16
   040A 20                 1158 	.db #0x20	; 32
   040B 20                 1159 	.db #0x20	; 32
   040C C0                 1160 	.db #0xc0	; 192
   040D 00                 1161 	.db #0x00	; 0
   040E 40                 1162 	.db #0x40	; 64
   040F A8                 1163 	.db #0xa8	; 168
   0410 10                 1164 	.db #0x10	; 16
   0411 00                 1165 	.db #0x00	; 0
   0412 00                 1166 	.db #0x00	; 0
   0413 00                 1167 	.db #0x00	; 0
   0414 00                 1168 	.db #0x00	; 0
   0415 00                 1169 	.db #0x00	; 0
   0416 00                 1170 	.db #0x00	; 0
   0417 00                 1171 	.db #0x00	; 0
   0418 20                 1172 	.db #0x20	; 32
   0419 50                 1173 	.db #0x50	; 80	'P'
   041A F8                 1174 	.db #0xf8	; 248
   041B 00                 1175 	.db #0x00	; 0
   041C 00                 1176 	.db #0x00	; 0
   041D 00                 1177 	.db #0x00	; 0
   041E 30                 1178 	.db #0x30	; 48	'0'
   041F 48                 1179 	.db #0x48	; 72	'H'
   0420 80                 1180 	.db #0x80	; 128
   0421 80                 1181 	.db #0x80	; 128
   0422 80                 1182 	.db #0x80	; 128
   0423 48                 1183 	.db #0x48	; 72	'H'
   0424 30                 1184 	.db #0x30	; 48	'0'
   0425 60                 1185 	.db #0x60	; 96
   0426 50                 1186 	.db #0x50	; 80	'P'
   0427 00                 1187 	.db #0x00	; 0
   0428 90                 1188 	.db #0x90	; 144
   0429 90                 1189 	.db #0x90	; 144
   042A 90                 1190 	.db #0x90	; 144
   042B 90                 1191 	.db #0x90	; 144
   042C 68                 1192 	.db #0x68	; 104	'h'
   042D 00                 1193 	.db #0x00	; 0
   042E 10                 1194 	.db #0x10	; 16
   042F 20                 1195 	.db #0x20	; 32
   0430 70                 1196 	.db #0x70	; 112	'p'
   0431 88                 1197 	.db #0x88	; 136
   0432 F8                 1198 	.db #0xf8	; 248
   0433 80                 1199 	.db #0x80	; 128
   0434 70                 1200 	.db #0x70	; 112	'p'
   0435 00                 1201 	.db #0x00	; 0
   0436 20                 1202 	.db #0x20	; 32
   0437 50                 1203 	.db #0x50	; 80	'P'
   0438 70                 1204 	.db #0x70	; 112	'p'
   0439 08                 1205 	.db #0x08	; 8
   043A 78                 1206 	.db #0x78	; 120	'x'
   043B 88                 1207 	.db #0x88	; 136
   043C 78                 1208 	.db #0x78	; 120	'x'
   043D 00                 1209 	.db #0x00	; 0
   043E 10                 1210 	.db #0x10	; 16
   043F 20                 1211 	.db #0x20	; 32
   0440 20                 1212 	.db #0x20	; 32
   0441 50                 1213 	.db #0x50	; 80	'P'
   0442 88                 1214 	.db #0x88	; 136
   0443 F8                 1215 	.db #0xf8	; 248
   0444 88                 1216 	.db #0x88	; 136
   0445 00                 1217 	.db #0x00	; 0
   0446 40                 1218 	.db #0x40	; 64
   0447 20                 1219 	.db #0x20	; 32
   0448 70                 1220 	.db #0x70	; 112	'p'
   0449 08                 1221 	.db #0x08	; 8
   044A 78                 1222 	.db #0x78	; 120	'x'
   044B 88                 1223 	.db #0x88	; 136
   044C 78                 1224 	.db #0x78	; 120	'x'
   044D 00                 1225 	.db #0x00	; 0
   044E 50                 1226 	.db #0x50	; 80	'P'
   044F 00                 1227 	.db #0x00	; 0
   0450 00                 1228 	.db #0x00	; 0
   0451 00                 1229 	.db #0x00	; 0
   0452 00                 1230 	.db #0x00	; 0
   0453 00                 1231 	.db #0x00	; 0
   0454 00                 1232 	.db #0x00	; 0
   0455 00                 1233 	.db #0x00	; 0
   0456 00                 1234 	.db #0x00	; 0
   0457 00                 1235 	.db #0x00	; 0
   0458 70                 1236 	.db #0x70	; 112	'p'
   0459 88                 1237 	.db #0x88	; 136
   045A 80                 1238 	.db #0x80	; 128
   045B 88                 1239 	.db #0x88	; 136
   045C 70                 1240 	.db #0x70	; 112	'p'
   045D 20                 1241 	.db #0x20	; 32
   045E 20                 1242 	.db #0x20	; 32
   045F 50                 1243 	.db #0x50	; 80	'P'
   0460 70                 1244 	.db #0x70	; 112	'p'
   0461 88                 1245 	.db #0x88	; 136
   0462 F8                 1246 	.db #0xf8	; 248
   0463 80                 1247 	.db #0x80	; 128
   0464 70                 1248 	.db #0x70	; 112	'p'
   0465 00                 1249 	.db #0x00	; 0
   0466 10                 1250 	.db #0x10	; 16
   0467 20                 1251 	.db #0x20	; 32
   0468 70                 1252 	.db #0x70	; 112	'p'
   0469 20                 1253 	.db #0x20	; 32
   046A 20                 1254 	.db #0x20	; 32
   046B 20                 1255 	.db #0x20	; 32
   046C 70                 1256 	.db #0x70	; 112	'p'
   046D 00                 1257 	.db #0x00	; 0
   046E 10                 1258 	.db #0x10	; 16
   046F 20                 1259 	.db #0x20	; 32
   0470 70                 1260 	.db #0x70	; 112	'p'
   0471 88                 1261 	.db #0x88	; 136
   0472 88                 1262 	.db #0x88	; 136
   0473 88                 1263 	.db #0x88	; 136
   0474 70                 1264 	.db #0x70	; 112	'p'
   0475 00                 1265 	.db #0x00	; 0
   0476 10                 1266 	.db #0x10	; 16
   0477 20                 1267 	.db #0x20	; 32
   0478 88                 1268 	.db #0x88	; 136
   0479 88                 1269 	.db #0x88	; 136
   047A 88                 1270 	.db #0x88	; 136
   047B 88                 1271 	.db #0x88	; 136
   047C 70                 1272 	.db #0x70	; 112	'p'
   047D 00                 1273 	.db #0x00	; 0
   047E 20                 1274 	.db #0x20	; 32
   047F 50                 1275 	.db #0x50	; 80	'P'
   0480 20                 1276 	.db #0x20	; 32
   0481 50                 1277 	.db #0x50	; 80	'P'
   0482 88                 1278 	.db #0x88	; 136
   0483 F8                 1279 	.db #0xf8	; 248
   0484 88                 1280 	.db #0x88	; 136
   0485 00                 1281 	.db #0x00	; 0
   0486 01                 1282 	.db #0x01	; 1
   0487 02                 1283 	.db #0x02	; 2
   0488 04                 1284 	.db #0x04	; 4
   0489 08                 1285 	.db #0x08	; 8
   048A 10                 1286 	.db #0x10	; 16
   048B 20                 1287 	.db #0x20	; 32
   048C 40                 1288 	.db #0x40	; 64
   048D 80                 1289 	.db #0x80	; 128
   048E 80                 1290 	.db #0x80	; 128
   048F 40                 1291 	.db #0x40	; 64
   0490 20                 1292 	.db #0x20	; 32
   0491 10                 1293 	.db #0x10	; 16
   0492 08                 1294 	.db #0x08	; 8
   0493 04                 1295 	.db #0x04	; 4
   0494 02                 1296 	.db #0x02	; 2
   0495 01                 1297 	.db #0x01	; 1
   0496 00                 1298 	.db #0x00	; 0
   0497 10                 1299 	.db #0x10	; 16
   0498 10                 1300 	.db #0x10	; 16
   0499 FF                 1301 	.db #0xff	; 255
   049A 10                 1302 	.db #0x10	; 16
   049B 10                 1303 	.db #0x10	; 16
   049C 00                 1304 	.db #0x00	; 0
   049D 00                 1305 	.db #0x00	; 0
   049E 10                 1306 	.db #0x10	; 16
   049F 20                 1307 	.db #0x20	; 32
   04A0 F8                 1308 	.db #0xf8	; 248
   04A1 80                 1309 	.db #0x80	; 128
   04A2 F0                 1310 	.db #0xf0	; 240
   04A3 80                 1311 	.db #0x80	; 128
   04A4 F8                 1312 	.db #0xf8	; 248
   04A5 00                 1313 	.db #0x00	; 0
   04A6 00                 1314 	.db #0x00	; 0
   04A7 00                 1315 	.db #0x00	; 0
   04A8 6C                 1316 	.db #0x6c	; 108	'l'
   04A9 12                 1317 	.db #0x12	; 18
   04AA 7E                 1318 	.db #0x7e	; 126
   04AB 90                 1319 	.db #0x90	; 144
   04AC 6E                 1320 	.db #0x6e	; 110	'n'
   04AD 00                 1321 	.db #0x00	; 0
   04AE 3E                 1322 	.db #0x3e	; 62
   04AF 50                 1323 	.db #0x50	; 80	'P'
   04B0 90                 1324 	.db #0x90	; 144
   04B1 9C                 1325 	.db #0x9c	; 156
   04B2 F0                 1326 	.db #0xf0	; 240
   04B3 90                 1327 	.db #0x90	; 144
   04B4 9E                 1328 	.db #0x9e	; 158
   04B5 00                 1329 	.db #0x00	; 0
   04B6 20                 1330 	.db #0x20	; 32
   04B7 50                 1331 	.db #0x50	; 80	'P'
   04B8 70                 1332 	.db #0x70	; 112	'p'
   04B9 88                 1333 	.db #0x88	; 136
   04BA 88                 1334 	.db #0x88	; 136
   04BB 88                 1335 	.db #0x88	; 136
   04BC 70                 1336 	.db #0x70	; 112	'p'
   04BD 00                 1337 	.db #0x00	; 0
   04BE 50                 1338 	.db #0x50	; 80	'P'
   04BF 00                 1339 	.db #0x00	; 0
   04C0 70                 1340 	.db #0x70	; 112	'p'
   04C1 88                 1341 	.db #0x88	; 136
   04C2 88                 1342 	.db #0x88	; 136
   04C3 88                 1343 	.db #0x88	; 136
   04C4 70                 1344 	.db #0x70	; 112	'p'
   04C5 00                 1345 	.db #0x00	; 0
   04C6 40                 1346 	.db #0x40	; 64
   04C7 20                 1347 	.db #0x20	; 32
   04C8 70                 1348 	.db #0x70	; 112	'p'
   04C9 88                 1349 	.db #0x88	; 136
   04CA 88                 1350 	.db #0x88	; 136
   04CB 88                 1351 	.db #0x88	; 136
   04CC 70                 1352 	.db #0x70	; 112	'p'
   04CD 00                 1353 	.db #0x00	; 0
   04CE 20                 1354 	.db #0x20	; 32
   04CF 50                 1355 	.db #0x50	; 80	'P'
   04D0 00                 1356 	.db #0x00	; 0
   04D1 90                 1357 	.db #0x90	; 144
   04D2 90                 1358 	.db #0x90	; 144
   04D3 90                 1359 	.db #0x90	; 144
   04D4 68                 1360 	.db #0x68	; 104	'h'
   04D5 00                 1361 	.db #0x00	; 0
   04D6 40                 1362 	.db #0x40	; 64
   04D7 20                 1363 	.db #0x20	; 32
   04D8 00                 1364 	.db #0x00	; 0
   04D9 90                 1365 	.db #0x90	; 144
   04DA 90                 1366 	.db #0x90	; 144
   04DB 90                 1367 	.db #0x90	; 144
   04DC 68                 1368 	.db #0x68	; 104	'h'
   04DD 00                 1369 	.db #0x00	; 0
   04DE 50                 1370 	.db #0x50	; 80	'P'
   04DF 00                 1371 	.db #0x00	; 0
   04E0 88                 1372 	.db #0x88	; 136
   04E1 88                 1373 	.db #0x88	; 136
   04E2 98                 1374 	.db #0x98	; 152
   04E3 68                 1375 	.db #0x68	; 104	'h'
   04E4 08                 1376 	.db #0x08	; 8
   04E5 70                 1377 	.db #0x70	; 112	'p'
   04E6 50                 1378 	.db #0x50	; 80	'P'
   04E7 00                 1379 	.db #0x00	; 0
   04E8 70                 1380 	.db #0x70	; 112	'p'
   04E9 88                 1381 	.db #0x88	; 136
   04EA 88                 1382 	.db #0x88	; 136
   04EB 88                 1383 	.db #0x88	; 136
   04EC 70                 1384 	.db #0x70	; 112	'p'
   04ED 00                 1385 	.db #0x00	; 0
   04EE 50                 1386 	.db #0x50	; 80	'P'
   04EF 00                 1387 	.db #0x00	; 0
   04F0 88                 1388 	.db #0x88	; 136
   04F1 88                 1389 	.db #0x88	; 136
   04F2 88                 1390 	.db #0x88	; 136
   04F3 88                 1391 	.db #0x88	; 136
   04F4 70                 1392 	.db #0x70	; 112	'p'
   04F5 00                 1393 	.db #0x00	; 0
   04F6 20                 1394 	.db #0x20	; 32
   04F7 20                 1395 	.db #0x20	; 32
   04F8 78                 1396 	.db #0x78	; 120	'x'
   04F9 80                 1397 	.db #0x80	; 128
   04FA 80                 1398 	.db #0x80	; 128
   04FB 78                 1399 	.db #0x78	; 120	'x'
   04FC 20                 1400 	.db #0x20	; 32
   04FD 20                 1401 	.db #0x20	; 32
   04FE 18                 1402 	.db #0x18	; 24
   04FF 24                 1403 	.db #0x24	; 36
   0500 20                 1404 	.db #0x20	; 32
   0501 F8                 1405 	.db #0xf8	; 248
   0502 20                 1406 	.db #0x20	; 32
   0503 E2                 1407 	.db #0xe2	; 226
   0504 5C                 1408 	.db #0x5c	; 92
   0505 00                 1409 	.db #0x00	; 0
   0506 88                 1410 	.db #0x88	; 136
   0507 50                 1411 	.db #0x50	; 80	'P'
   0508 20                 1412 	.db #0x20	; 32
   0509 F8                 1413 	.db #0xf8	; 248
   050A 20                 1414 	.db #0x20	; 32
   050B F8                 1415 	.db #0xf8	; 248
   050C 20                 1416 	.db #0x20	; 32
   050D 00                 1417 	.db #0x00	; 0
   050E 60                 1418 	.db #0x60	; 96
   050F 80                 1419 	.db #0x80	; 128
   0510 9C                 1420 	.db #0x9c	; 156
   0511 84                 1421 	.db #0x84	; 132
   0512 88                 1422 	.db #0x88	; 136
   0513 90                 1423 	.db #0x90	; 144
   0514 7C                 1424 	.db #0x7c	; 124
   0515 00                 1425 	.db #0x00	; 0
   0516 18                 1426 	.db #0x18	; 24
   0517 20                 1427 	.db #0x20	; 32
   0518 20                 1428 	.db #0x20	; 32
   0519 F8                 1429 	.db #0xf8	; 248
   051A 20                 1430 	.db #0x20	; 32
   051B 20                 1431 	.db #0x20	; 32
   051C 20                 1432 	.db #0x20	; 32
   051D 40                 1433 	.db #0x40	; 64
   051E 10                 1434 	.db #0x10	; 16
   051F 20                 1435 	.db #0x20	; 32
   0520 70                 1436 	.db #0x70	; 112	'p'
   0521 08                 1437 	.db #0x08	; 8
   0522 78                 1438 	.db #0x78	; 120	'x'
   0523 88                 1439 	.db #0x88	; 136
   0524 78                 1440 	.db #0x78	; 120	'x'
   0525 00                 1441 	.db #0x00	; 0
   0526 10                 1442 	.db #0x10	; 16
   0527 20                 1443 	.db #0x20	; 32
   0528 00                 1444 	.db #0x00	; 0
   0529 60                 1445 	.db #0x60	; 96
   052A 20                 1446 	.db #0x20	; 32
   052B 20                 1447 	.db #0x20	; 32
   052C 70                 1448 	.db #0x70	; 112	'p'
   052D 00                 1449 	.db #0x00	; 0
   052E 10                 1450 	.db #0x10	; 16
   052F 20                 1451 	.db #0x20	; 32
   0530 70                 1452 	.db #0x70	; 112	'p'
   0531 88                 1453 	.db #0x88	; 136
   0532 88                 1454 	.db #0x88	; 136
   0533 88                 1455 	.db #0x88	; 136
   0534 70                 1456 	.db #0x70	; 112	'p'
   0535 00                 1457 	.db #0x00	; 0
   0536 10                 1458 	.db #0x10	; 16
   0537 20                 1459 	.db #0x20	; 32
   0538 90                 1460 	.db #0x90	; 144
   0539 90                 1461 	.db #0x90	; 144
   053A 90                 1462 	.db #0x90	; 144
   053B 90                 1463 	.db #0x90	; 144
   053C 68                 1464 	.db #0x68	; 104	'h'
   053D 00                 1465 	.db #0x00	; 0
   053E 28                 1466 	.db #0x28	; 40
   053F 50                 1467 	.db #0x50	; 80	'P'
   0540 B0                 1468 	.db #0xb0	; 176
   0541 C8                 1469 	.db #0xc8	; 200
   0542 88                 1470 	.db #0x88	; 136
   0543 88                 1471 	.db #0x88	; 136
   0544 88                 1472 	.db #0x88	; 136
   0545 00                 1473 	.db #0x00	; 0
   0546 28                 1474 	.db #0x28	; 40
   0547 50                 1475 	.db #0x50	; 80	'P'
   0548 88                 1476 	.db #0x88	; 136
   0549 C8                 1477 	.db #0xc8	; 200
   054A A8                 1478 	.db #0xa8	; 168
   054B 98                 1479 	.db #0x98	; 152
   054C 88                 1480 	.db #0x88	; 136
   054D 00                 1481 	.db #0x00	; 0
   054E 60                 1482 	.db #0x60	; 96
   054F 90                 1483 	.db #0x90	; 144
   0550 90                 1484 	.db #0x90	; 144
   0551 68                 1485 	.db #0x68	; 104	'h'
   0552 00                 1486 	.db #0x00	; 0
   0553 F8                 1487 	.db #0xf8	; 248
   0554 00                 1488 	.db #0x00	; 0
   0555 00                 1489 	.db #0x00	; 0
   0556 60                 1490 	.db #0x60	; 96
   0557 90                 1491 	.db #0x90	; 144
   0558 90                 1492 	.db #0x90	; 144
   0559 60                 1493 	.db #0x60	; 96
   055A 00                 1494 	.db #0x00	; 0
   055B F0                 1495 	.db #0xf0	; 240
   055C 00                 1496 	.db #0x00	; 0
   055D 00                 1497 	.db #0x00	; 0
   055E 20                 1498 	.db #0x20	; 32
   055F 00                 1499 	.db #0x00	; 0
   0560 20                 1500 	.db #0x20	; 32
   0561 40                 1501 	.db #0x40	; 64
   0562 80                 1502 	.db #0x80	; 128
   0563 88                 1503 	.db #0x88	; 136
   0564 70                 1504 	.db #0x70	; 112	'p'
   0565 00                 1505 	.db #0x00	; 0
   0566 00                 1506 	.db #0x00	; 0
   0567 00                 1507 	.db #0x00	; 0
   0568 00                 1508 	.db #0x00	; 0
   0569 F8                 1509 	.db #0xf8	; 248
   056A 80                 1510 	.db #0x80	; 128
   056B 80                 1511 	.db #0x80	; 128
   056C 00                 1512 	.db #0x00	; 0
   056D 00                 1513 	.db #0x00	; 0
   056E 00                 1514 	.db #0x00	; 0
   056F 00                 1515 	.db #0x00	; 0
   0570 00                 1516 	.db #0x00	; 0
   0571 F8                 1517 	.db #0xf8	; 248
   0572 08                 1518 	.db #0x08	; 8
   0573 08                 1519 	.db #0x08	; 8
   0574 00                 1520 	.db #0x00	; 0
   0575 00                 1521 	.db #0x00	; 0
   0576 84                 1522 	.db #0x84	; 132
   0577 88                 1523 	.db #0x88	; 136
   0578 90                 1524 	.db #0x90	; 144
   0579 A8                 1525 	.db #0xa8	; 168
   057A 54                 1526 	.db #0x54	; 84	'T'
   057B 84                 1527 	.db #0x84	; 132
   057C 08                 1528 	.db #0x08	; 8
   057D 1C                 1529 	.db #0x1c	; 28
   057E 84                 1530 	.db #0x84	; 132
   057F 88                 1531 	.db #0x88	; 136
   0580 90                 1532 	.db #0x90	; 144
   0581 A8                 1533 	.db #0xa8	; 168
   0582 58                 1534 	.db #0x58	; 88	'X'
   0583 A8                 1535 	.db #0xa8	; 168
   0584 3C                 1536 	.db #0x3c	; 60
   0585 08                 1537 	.db #0x08	; 8
   0586 20                 1538 	.db #0x20	; 32
   0587 00                 1539 	.db #0x00	; 0
   0588 00                 1540 	.db #0x00	; 0
   0589 20                 1541 	.db #0x20	; 32
   058A 20                 1542 	.db #0x20	; 32
   058B 20                 1543 	.db #0x20	; 32
   058C 20                 1544 	.db #0x20	; 32
   058D 00                 1545 	.db #0x00	; 0
   058E 00                 1546 	.db #0x00	; 0
   058F 12                 1547 	.db #0x12	; 18
   0590 24                 1548 	.db #0x24	; 36
   0591 48                 1549 	.db #0x48	; 72	'H'
   0592 90                 1550 	.db #0x90	; 144
   0593 48                 1551 	.db #0x48	; 72	'H'
   0594 24                 1552 	.db #0x24	; 36
   0595 12                 1553 	.db #0x12	; 18
   0596 00                 1554 	.db #0x00	; 0
   0597 90                 1555 	.db #0x90	; 144
   0598 48                 1556 	.db #0x48	; 72	'H'
   0599 24                 1557 	.db #0x24	; 36
   059A 12                 1558 	.db #0x12	; 18
   059B 24                 1559 	.db #0x24	; 36
   059C 48                 1560 	.db #0x48	; 72	'H'
   059D 90                 1561 	.db #0x90	; 144
   059E 28                 1562 	.db #0x28	; 40
   059F 50                 1563 	.db #0x50	; 80	'P'
   05A0 20                 1564 	.db #0x20	; 32
   05A1 50                 1565 	.db #0x50	; 80	'P'
   05A2 88                 1566 	.db #0x88	; 136
   05A3 F8                 1567 	.db #0xf8	; 248
   05A4 88                 1568 	.db #0x88	; 136
   05A5 00                 1569 	.db #0x00	; 0
   05A6 28                 1570 	.db #0x28	; 40
   05A7 50                 1571 	.db #0x50	; 80	'P'
   05A8 70                 1572 	.db #0x70	; 112	'p'
   05A9 08                 1573 	.db #0x08	; 8
   05AA 78                 1574 	.db #0x78	; 120	'x'
   05AB 88                 1575 	.db #0x88	; 136
   05AC 78                 1576 	.db #0x78	; 120	'x'
   05AD 00                 1577 	.db #0x00	; 0
   05AE 28                 1578 	.db #0x28	; 40
   05AF 50                 1579 	.db #0x50	; 80	'P'
   05B0 00                 1580 	.db #0x00	; 0
   05B1 70                 1581 	.db #0x70	; 112	'p'
   05B2 20                 1582 	.db #0x20	; 32
   05B3 20                 1583 	.db #0x20	; 32
   05B4 70                 1584 	.db #0x70	; 112	'p'
   05B5 00                 1585 	.db #0x00	; 0
   05B6 28                 1586 	.db #0x28	; 40
   05B7 50                 1587 	.db #0x50	; 80	'P'
   05B8 00                 1588 	.db #0x00	; 0
   05B9 20                 1589 	.db #0x20	; 32
   05BA 20                 1590 	.db #0x20	; 32
   05BB 20                 1591 	.db #0x20	; 32
   05BC 70                 1592 	.db #0x70	; 112	'p'
   05BD 00                 1593 	.db #0x00	; 0
   05BE 28                 1594 	.db #0x28	; 40
   05BF 50                 1595 	.db #0x50	; 80	'P'
   05C0 70                 1596 	.db #0x70	; 112	'p'
   05C1 88                 1597 	.db #0x88	; 136
   05C2 88                 1598 	.db #0x88	; 136
   05C3 88                 1599 	.db #0x88	; 136
   05C4 70                 1600 	.db #0x70	; 112	'p'
   05C5 00                 1601 	.db #0x00	; 0
   05C6 28                 1602 	.db #0x28	; 40
   05C7 50                 1603 	.db #0x50	; 80	'P'
   05C8 70                 1604 	.db #0x70	; 112	'p'
   05C9 88                 1605 	.db #0x88	; 136
   05CA 88                 1606 	.db #0x88	; 136
   05CB 88                 1607 	.db #0x88	; 136
   05CC 70                 1608 	.db #0x70	; 112	'p'
   05CD 00                 1609 	.db #0x00	; 0
   05CE 28                 1610 	.db #0x28	; 40
   05CF 50                 1611 	.db #0x50	; 80	'P'
   05D0 00                 1612 	.db #0x00	; 0
   05D1 88                 1613 	.db #0x88	; 136
   05D2 88                 1614 	.db #0x88	; 136
   05D3 88                 1615 	.db #0x88	; 136
   05D4 70                 1616 	.db #0x70	; 112	'p'
   05D5 00                 1617 	.db #0x00	; 0
   05D6 28                 1618 	.db #0x28	; 40
   05D7 50                 1619 	.db #0x50	; 80	'P'
   05D8 00                 1620 	.db #0x00	; 0
   05D9 90                 1621 	.db #0x90	; 144
   05DA 90                 1622 	.db #0x90	; 144
   05DB 90                 1623 	.db #0x90	; 144
   05DC 68                 1624 	.db #0x68	; 104	'h'
   05DD 00                 1625 	.db #0x00	; 0
   05DE FC                 1626 	.db #0xfc	; 252
   05DF 48                 1627 	.db #0x48	; 72	'H'
   05E0 48                 1628 	.db #0x48	; 72	'H'
   05E1 48                 1629 	.db #0x48	; 72	'H'
   05E2 E8                 1630 	.db #0xe8	; 232
   05E3 08                 1631 	.db #0x08	; 8
   05E4 50                 1632 	.db #0x50	; 80	'P'
   05E5 20                 1633 	.db #0x20	; 32
   05E6 00                 1634 	.db #0x00	; 0
   05E7 A0                 1635 	.db #0xa0	; 160
   05E8 00                 1636 	.db #0x00	; 0
   05E9 A0                 1637 	.db #0xa0	; 160
   05EA A0                 1638 	.db #0xa0	; 160
   05EB A0                 1639 	.db #0xa0	; 160
   05EC 20                 1640 	.db #0x20	; 32
   05ED 40                 1641 	.db #0x40	; 64
   05EE C0                 1642 	.db #0xc0	; 192
   05EF 44                 1643 	.db #0x44	; 68	'D'
   05F0 C8                 1644 	.db #0xc8	; 200
   05F1 54                 1645 	.db #0x54	; 84	'T'
   05F2 EC                 1646 	.db #0xec	; 236
   05F3 54                 1647 	.db #0x54	; 84	'T'
   05F4 9E                 1648 	.db #0x9e	; 158
   05F5 04                 1649 	.db #0x04	; 4
   05F6 10                 1650 	.db #0x10	; 16
   05F7 A8                 1651 	.db #0xa8	; 168
   05F8 40                 1652 	.db #0x40	; 64
   05F9 00                 1653 	.db #0x00	; 0
   05FA 00                 1654 	.db #0x00	; 0
   05FB 00                 1655 	.db #0x00	; 0
   05FC 00                 1656 	.db #0x00	; 0
   05FD 00                 1657 	.db #0x00	; 0
   05FE 00                 1658 	.db #0x00	; 0
   05FF 20                 1659 	.db #0x20	; 32
   0600 50                 1660 	.db #0x50	; 80	'P'
   0601 88                 1661 	.db #0x88	; 136
   0602 50                 1662 	.db #0x50	; 80	'P'
   0603 20                 1663 	.db #0x20	; 32
   0604 00                 1664 	.db #0x00	; 0
   0605 00                 1665 	.db #0x00	; 0
   0606 C4                 1666 	.db #0xc4	; 196
   0607 C8                 1667 	.db #0xc8	; 200
   0608 10                 1668 	.db #0x10	; 16
   0609 20                 1669 	.db #0x20	; 32
   060A 40                 1670 	.db #0x40	; 64
   060B B6                 1671 	.db #0xb6	; 182
   060C 36                 1672 	.db #0x36	; 54	'6'
   060D 00                 1673 	.db #0x00	; 0
   060E 7C                 1674 	.db #0x7c	; 124
   060F A8                 1675 	.db #0xa8	; 168
   0610 A8                 1676 	.db #0xa8	; 168
   0611 68                 1677 	.db #0x68	; 104	'h'
   0612 28                 1678 	.db #0x28	; 40
   0613 28                 1679 	.db #0x28	; 40
   0614 28                 1680 	.db #0x28	; 40
   0615 00                 1681 	.db #0x00	; 0
   0616 38                 1682 	.db #0x38	; 56	'8'
   0617 40                 1683 	.db #0x40	; 64
   0618 30                 1684 	.db #0x30	; 48	'0'
   0619 48                 1685 	.db #0x48	; 72	'H'
   061A 48                 1686 	.db #0x48	; 72	'H'
   061B 30                 1687 	.db #0x30	; 48	'0'
   061C 08                 1688 	.db #0x08	; 8
   061D 70                 1689 	.db #0x70	; 112	'p'
   061E 00                 1690 	.db #0x00	; 0
   061F 00                 1691 	.db #0x00	; 0
   0620 00                 1692 	.db #0x00	; 0
   0621 00                 1693 	.db #0x00	; 0
   0622 00                 1694 	.db #0x00	; 0
   0623 00                 1695 	.db #0x00	; 0
   0624 FF                 1696 	.db #0xff	; 255
   0625 FF                 1697 	.db #0xff	; 255
   0626 F0                 1698 	.db #0xf0	; 240
   0627 F0                 1699 	.db #0xf0	; 240
   0628 F0                 1700 	.db #0xf0	; 240
   0629 F0                 1701 	.db #0xf0	; 240
   062A 0F                 1702 	.db #0x0f	; 15
   062B 0F                 1703 	.db #0x0f	; 15
   062C 0F                 1704 	.db #0x0f	; 15
   062D 0F                 1705 	.db #0x0f	; 15
   062E 00                 1706 	.db #0x00	; 0
   062F 00                 1707 	.db #0x00	; 0
   0630 FF                 1708 	.db #0xff	; 255
   0631 FF                 1709 	.db #0xff	; 255
   0632 FF                 1710 	.db #0xff	; 255
   0633 FF                 1711 	.db #0xff	; 255
   0634 FF                 1712 	.db #0xff	; 255
   0635 FF                 1713 	.db #0xff	; 255
   0636 FF                 1714 	.db #0xff	; 255
   0637 FF                 1715 	.db #0xff	; 255
   0638 00                 1716 	.db #0x00	; 0
   0639 00                 1717 	.db #0x00	; 0
   063A 00                 1718 	.db #0x00	; 0
   063B 00                 1719 	.db #0x00	; 0
   063C 00                 1720 	.db #0x00	; 0
   063D 00                 1721 	.db #0x00	; 0
   063E 00                 1722 	.db #0x00	; 0
   063F 00                 1723 	.db #0x00	; 0
   0640 00                 1724 	.db #0x00	; 0
   0641 3C                 1725 	.db #0x3c	; 60
   0642 3C                 1726 	.db #0x3c	; 60
   0643 00                 1727 	.db #0x00	; 0
   0644 00                 1728 	.db #0x00	; 0
   0645 00                 1729 	.db #0x00	; 0
   0646 FF                 1730 	.db #0xff	; 255
   0647 FF                 1731 	.db #0xff	; 255
   0648 FF                 1732 	.db #0xff	; 255
   0649 FF                 1733 	.db #0xff	; 255
   064A FF                 1734 	.db #0xff	; 255
   064B FF                 1735 	.db #0xff	; 255
   064C 00                 1736 	.db #0x00	; 0
   064D 00                 1737 	.db #0x00	; 0
   064E C0                 1738 	.db #0xc0	; 192
   064F C0                 1739 	.db #0xc0	; 192
   0650 C0                 1740 	.db #0xc0	; 192
   0651 C0                 1741 	.db #0xc0	; 192
   0652 C0                 1742 	.db #0xc0	; 192
   0653 C0                 1743 	.db #0xc0	; 192
   0654 C0                 1744 	.db #0xc0	; 192
   0655 C0                 1745 	.db #0xc0	; 192
   0656 0F                 1746 	.db #0x0f	; 15
   0657 0F                 1747 	.db #0x0f	; 15
   0658 0F                 1748 	.db #0x0f	; 15
   0659 0F                 1749 	.db #0x0f	; 15
   065A F0                 1750 	.db #0xf0	; 240
   065B F0                 1751 	.db #0xf0	; 240
   065C F0                 1752 	.db #0xf0	; 240
   065D F0                 1753 	.db #0xf0	; 240
   065E FC                 1754 	.db #0xfc	; 252
   065F FC                 1755 	.db #0xfc	; 252
   0660 FC                 1756 	.db #0xfc	; 252
   0661 FC                 1757 	.db #0xfc	; 252
   0662 FC                 1758 	.db #0xfc	; 252
   0663 FC                 1759 	.db #0xfc	; 252
   0664 FC                 1760 	.db #0xfc	; 252
   0665 FC                 1761 	.db #0xfc	; 252
   0666 03                 1762 	.db #0x03	; 3
   0667 03                 1763 	.db #0x03	; 3
   0668 03                 1764 	.db #0x03	; 3
   0669 03                 1765 	.db #0x03	; 3
   066A 03                 1766 	.db #0x03	; 3
   066B 03                 1767 	.db #0x03	; 3
   066C 03                 1768 	.db #0x03	; 3
   066D 03                 1769 	.db #0x03	; 3
   066E 3F                 1770 	.db #0x3f	; 63
   066F 3F                 1771 	.db #0x3f	; 63
   0670 3F                 1772 	.db #0x3f	; 63
   0671 3F                 1773 	.db #0x3f	; 63
   0672 3F                 1774 	.db #0x3f	; 63
   0673 3F                 1775 	.db #0x3f	; 63
   0674 3F                 1776 	.db #0x3f	; 63
   0675 3F                 1777 	.db #0x3f	; 63
   0676 11                 1778 	.db #0x11	; 17
   0677 22                 1779 	.db #0x22	; 34
   0678 44                 1780 	.db #0x44	; 68	'D'
   0679 88                 1781 	.db #0x88	; 136
   067A 11                 1782 	.db #0x11	; 17
   067B 22                 1783 	.db #0x22	; 34
   067C 44                 1784 	.db #0x44	; 68	'D'
   067D 88                 1785 	.db #0x88	; 136
   067E 88                 1786 	.db #0x88	; 136
   067F 44                 1787 	.db #0x44	; 68	'D'
   0680 22                 1788 	.db #0x22	; 34
   0681 11                 1789 	.db #0x11	; 17
   0682 88                 1790 	.db #0x88	; 136
   0683 44                 1791 	.db #0x44	; 68	'D'
   0684 22                 1792 	.db #0x22	; 34
   0685 11                 1793 	.db #0x11	; 17
   0686 FE                 1794 	.db #0xfe	; 254
   0687 7C                 1795 	.db #0x7c	; 124
   0688 38                 1796 	.db #0x38	; 56	'8'
   0689 10                 1797 	.db #0x10	; 16
   068A 00                 1798 	.db #0x00	; 0
   068B 00                 1799 	.db #0x00	; 0
   068C 00                 1800 	.db #0x00	; 0
   068D 00                 1801 	.db #0x00	; 0
   068E 00                 1802 	.db #0x00	; 0
   068F 00                 1803 	.db #0x00	; 0
   0690 00                 1804 	.db #0x00	; 0
   0691 00                 1805 	.db #0x00	; 0
   0692 10                 1806 	.db #0x10	; 16
   0693 38                 1807 	.db #0x38	; 56	'8'
   0694 7C                 1808 	.db #0x7c	; 124
   0695 FE                 1809 	.db #0xfe	; 254
   0696 80                 1810 	.db #0x80	; 128
   0697 C0                 1811 	.db #0xc0	; 192
   0698 E0                 1812 	.db #0xe0	; 224
   0699 F0                 1813 	.db #0xf0	; 240
   069A E0                 1814 	.db #0xe0	; 224
   069B C0                 1815 	.db #0xc0	; 192
   069C 80                 1816 	.db #0x80	; 128
   069D 00                 1817 	.db #0x00	; 0
   069E 01                 1818 	.db #0x01	; 1
   069F 03                 1819 	.db #0x03	; 3
   06A0 07                 1820 	.db #0x07	; 7
   06A1 0F                 1821 	.db #0x0f	; 15
   06A2 07                 1822 	.db #0x07	; 7
   06A3 03                 1823 	.db #0x03	; 3
   06A4 01                 1824 	.db #0x01	; 1
   06A5 00                 1825 	.db #0x00	; 0
   06A6 FF                 1826 	.db #0xff	; 255
   06A7 7E                 1827 	.db #0x7e	; 126
   06A8 3C                 1828 	.db #0x3c	; 60
   06A9 18                 1829 	.db #0x18	; 24
   06AA 18                 1830 	.db #0x18	; 24
   06AB 3C                 1831 	.db #0x3c	; 60
   06AC 7E                 1832 	.db #0x7e	; 126
   06AD FF                 1833 	.db #0xff	; 255
   06AE 81                 1834 	.db #0x81	; 129
   06AF C3                 1835 	.db #0xc3	; 195
   06B0 E7                 1836 	.db #0xe7	; 231
   06B1 FF                 1837 	.db #0xff	; 255
   06B2 FF                 1838 	.db #0xff	; 255
   06B3 E7                 1839 	.db #0xe7	; 231
   06B4 C3                 1840 	.db #0xc3	; 195
   06B5 81                 1841 	.db #0x81	; 129
   06B6 F0                 1842 	.db #0xf0	; 240
   06B7 F0                 1843 	.db #0xf0	; 240
   06B8 F0                 1844 	.db #0xf0	; 240
   06B9 F0                 1845 	.db #0xf0	; 240
   06BA 00                 1846 	.db #0x00	; 0
   06BB 00                 1847 	.db #0x00	; 0
   06BC 00                 1848 	.db #0x00	; 0
   06BD 00                 1849 	.db #0x00	; 0
   06BE 00                 1850 	.db #0x00	; 0
   06BF 00                 1851 	.db #0x00	; 0
   06C0 00                 1852 	.db #0x00	; 0
   06C1 00                 1853 	.db #0x00	; 0
   06C2 0F                 1854 	.db #0x0f	; 15
   06C3 0F                 1855 	.db #0x0f	; 15
   06C4 0F                 1856 	.db #0x0f	; 15
   06C5 0F                 1857 	.db #0x0f	; 15
   06C6 0F                 1858 	.db #0x0f	; 15
   06C7 0F                 1859 	.db #0x0f	; 15
   06C8 0F                 1860 	.db #0x0f	; 15
   06C9 0F                 1861 	.db #0x0f	; 15
   06CA 00                 1862 	.db #0x00	; 0
   06CB 00                 1863 	.db #0x00	; 0
   06CC 00                 1864 	.db #0x00	; 0
   06CD 00                 1865 	.db #0x00	; 0
   06CE 00                 1866 	.db #0x00	; 0
   06CF 00                 1867 	.db #0x00	; 0
   06D0 00                 1868 	.db #0x00	; 0
   06D1 00                 1869 	.db #0x00	; 0
   06D2 F0                 1870 	.db #0xf0	; 240
   06D3 F0                 1871 	.db #0xf0	; 240
   06D4 F0                 1872 	.db #0xf0	; 240
   06D5 F0                 1873 	.db #0xf0	; 240
   06D6 33                 1874 	.db #0x33	; 51	'3'
   06D7 33                 1875 	.db #0x33	; 51	'3'
   06D8 CC                 1876 	.db #0xcc	; 204
   06D9 CC                 1877 	.db #0xcc	; 204
   06DA 33                 1878 	.db #0x33	; 51	'3'
   06DB 33                 1879 	.db #0x33	; 51	'3'
   06DC CC                 1880 	.db #0xcc	; 204
   06DD CC                 1881 	.db #0xcc	; 204
   06DE 00                 1882 	.db #0x00	; 0
   06DF 20                 1883 	.db #0x20	; 32
   06E0 20                 1884 	.db #0x20	; 32
   06E1 50                 1885 	.db #0x50	; 80	'P'
   06E2 50                 1886 	.db #0x50	; 80	'P'
   06E3 88                 1887 	.db #0x88	; 136
   06E4 F8                 1888 	.db #0xf8	; 248
   06E5 00                 1889 	.db #0x00	; 0
   06E6 20                 1890 	.db #0x20	; 32
   06E7 20                 1891 	.db #0x20	; 32
   06E8 70                 1892 	.db #0x70	; 112	'p'
   06E9 20                 1893 	.db #0x20	; 32
   06EA 70                 1894 	.db #0x70	; 112	'p'
   06EB 20                 1895 	.db #0x20	; 32
   06EC 20                 1896 	.db #0x20	; 32
   06ED 00                 1897 	.db #0x00	; 0
   06EE 00                 1898 	.db #0x00	; 0
   06EF 00                 1899 	.db #0x00	; 0
   06F0 00                 1900 	.db #0x00	; 0
   06F1 50                 1901 	.db #0x50	; 80	'P'
   06F2 88                 1902 	.db #0x88	; 136
   06F3 A8                 1903 	.db #0xa8	; 168
   06F4 50                 1904 	.db #0x50	; 80	'P'
   06F5 00                 1905 	.db #0x00	; 0
   06F6 FF                 1906 	.db #0xff	; 255
   06F7 FF                 1907 	.db #0xff	; 255
   06F8 FF                 1908 	.db #0xff	; 255
   06F9 FF                 1909 	.db #0xff	; 255
   06FA FF                 1910 	.db #0xff	; 255
   06FB FF                 1911 	.db #0xff	; 255
   06FC FF                 1912 	.db #0xff	; 255
   06FD FF                 1913 	.db #0xff	; 255
   06FE 00                 1914 	.db #0x00	; 0
   06FF 00                 1915 	.db #0x00	; 0
   0700 00                 1916 	.db #0x00	; 0
   0701 00                 1917 	.db #0x00	; 0
   0702 FF                 1918 	.db #0xff	; 255
   0703 FF                 1919 	.db #0xff	; 255
   0704 FF                 1920 	.db #0xff	; 255
   0705 FF                 1921 	.db #0xff	; 255
   0706 F0                 1922 	.db #0xf0	; 240
   0707 F0                 1923 	.db #0xf0	; 240
   0708 F0                 1924 	.db #0xf0	; 240
   0709 F0                 1925 	.db #0xf0	; 240
   070A F0                 1926 	.db #0xf0	; 240
   070B F0                 1927 	.db #0xf0	; 240
   070C F0                 1928 	.db #0xf0	; 240
   070D F0                 1929 	.db #0xf0	; 240
   070E 0F                 1930 	.db #0x0f	; 15
   070F 0F                 1931 	.db #0x0f	; 15
   0710 0F                 1932 	.db #0x0f	; 15
   0711 0F                 1933 	.db #0x0f	; 15
   0712 0F                 1934 	.db #0x0f	; 15
   0713 0F                 1935 	.db #0x0f	; 15
   0714 0F                 1936 	.db #0x0f	; 15
   0715 0F                 1937 	.db #0x0f	; 15
   0716 FF                 1938 	.db #0xff	; 255
   0717 FF                 1939 	.db #0xff	; 255
   0718 FF                 1940 	.db #0xff	; 255
   0719 FF                 1941 	.db #0xff	; 255
   071A 00                 1942 	.db #0x00	; 0
   071B 00                 1943 	.db #0x00	; 0
   071C 00                 1944 	.db #0x00	; 0
   071D 00                 1945 	.db #0x00	; 0
   071E 00                 1946 	.db #0x00	; 0
   071F 00                 1947 	.db #0x00	; 0
   0720 68                 1948 	.db #0x68	; 104	'h'
   0721 90                 1949 	.db #0x90	; 144
   0722 90                 1950 	.db #0x90	; 144
   0723 90                 1951 	.db #0x90	; 144
   0724 68                 1952 	.db #0x68	; 104	'h'
   0725 00                 1953 	.db #0x00	; 0
   0726 30                 1954 	.db #0x30	; 48	'0'
   0727 48                 1955 	.db #0x48	; 72	'H'
   0728 48                 1956 	.db #0x48	; 72	'H'
   0729 70                 1957 	.db #0x70	; 112	'p'
   072A 48                 1958 	.db #0x48	; 72	'H'
   072B 48                 1959 	.db #0x48	; 72	'H'
   072C 70                 1960 	.db #0x70	; 112	'p'
   072D C0                 1961 	.db #0xc0	; 192
   072E F8                 1962 	.db #0xf8	; 248
   072F 88                 1963 	.db #0x88	; 136
   0730 80                 1964 	.db #0x80	; 128
   0731 80                 1965 	.db #0x80	; 128
   0732 80                 1966 	.db #0x80	; 128
   0733 80                 1967 	.db #0x80	; 128
   0734 80                 1968 	.db #0x80	; 128
   0735 00                 1969 	.db #0x00	; 0
   0736 F8                 1970 	.db #0xf8	; 248
   0737 50                 1971 	.db #0x50	; 80	'P'
   0738 50                 1972 	.db #0x50	; 80	'P'
   0739 50                 1973 	.db #0x50	; 80	'P'
   073A 50                 1974 	.db #0x50	; 80	'P'
   073B 50                 1975 	.db #0x50	; 80	'P'
   073C 98                 1976 	.db #0x98	; 152
   073D 00                 1977 	.db #0x00	; 0
   073E F8                 1978 	.db #0xf8	; 248
   073F 88                 1979 	.db #0x88	; 136
   0740 40                 1980 	.db #0x40	; 64
   0741 20                 1981 	.db #0x20	; 32
   0742 40                 1982 	.db #0x40	; 64
   0743 88                 1983 	.db #0x88	; 136
   0744 F8                 1984 	.db #0xf8	; 248
   0745 00                 1985 	.db #0x00	; 0
   0746 00                 1986 	.db #0x00	; 0
   0747 00                 1987 	.db #0x00	; 0
   0748 78                 1988 	.db #0x78	; 120	'x'
   0749 90                 1989 	.db #0x90	; 144
   074A 90                 1990 	.db #0x90	; 144
   074B 90                 1991 	.db #0x90	; 144
   074C 60                 1992 	.db #0x60	; 96
   074D 00                 1993 	.db #0x00	; 0
   074E 00                 1994 	.db #0x00	; 0
   074F 50                 1995 	.db #0x50	; 80	'P'
   0750 50                 1996 	.db #0x50	; 80	'P'
   0751 50                 1997 	.db #0x50	; 80	'P'
   0752 50                 1998 	.db #0x50	; 80	'P'
   0753 68                 1999 	.db #0x68	; 104	'h'
   0754 80                 2000 	.db #0x80	; 128
   0755 80                 2001 	.db #0x80	; 128
   0756 00                 2002 	.db #0x00	; 0
   0757 50                 2003 	.db #0x50	; 80	'P'
   0758 A0                 2004 	.db #0xa0	; 160
   0759 20                 2005 	.db #0x20	; 32
   075A 20                 2006 	.db #0x20	; 32
   075B 20                 2007 	.db #0x20	; 32
   075C 20                 2008 	.db #0x20	; 32
   075D 00                 2009 	.db #0x00	; 0
   075E F8                 2010 	.db #0xf8	; 248
   075F 20                 2011 	.db #0x20	; 32
   0760 70                 2012 	.db #0x70	; 112	'p'
   0761 A8                 2013 	.db #0xa8	; 168
   0762 A8                 2014 	.db #0xa8	; 168
   0763 70                 2015 	.db #0x70	; 112	'p'
   0764 20                 2016 	.db #0x20	; 32
   0765 F8                 2017 	.db #0xf8	; 248
   0766 20                 2018 	.db #0x20	; 32
   0767 50                 2019 	.db #0x50	; 80	'P'
   0768 88                 2020 	.db #0x88	; 136
   0769 F8                 2021 	.db #0xf8	; 248
   076A 88                 2022 	.db #0x88	; 136
   076B 50                 2023 	.db #0x50	; 80	'P'
   076C 20                 2024 	.db #0x20	; 32
   076D 00                 2025 	.db #0x00	; 0
   076E 70                 2026 	.db #0x70	; 112	'p'
   076F 88                 2027 	.db #0x88	; 136
   0770 88                 2028 	.db #0x88	; 136
   0771 88                 2029 	.db #0x88	; 136
   0772 50                 2030 	.db #0x50	; 80	'P'
   0773 50                 2031 	.db #0x50	; 80	'P'
   0774 D8                 2032 	.db #0xd8	; 216
   0775 00                 2033 	.db #0x00	; 0
   0776 30                 2034 	.db #0x30	; 48	'0'
   0777 40                 2035 	.db #0x40	; 64
   0778 40                 2036 	.db #0x40	; 64
   0779 20                 2037 	.db #0x20	; 32
   077A 50                 2038 	.db #0x50	; 80	'P'
   077B 50                 2039 	.db #0x50	; 80	'P'
   077C 50                 2040 	.db #0x50	; 80	'P'
   077D 20                 2041 	.db #0x20	; 32
   077E 00                 2042 	.db #0x00	; 0
   077F 00                 2043 	.db #0x00	; 0
   0780 00                 2044 	.db #0x00	; 0
   0781 50                 2045 	.db #0x50	; 80	'P'
   0782 A8                 2046 	.db #0xa8	; 168
   0783 A8                 2047 	.db #0xa8	; 168
   0784 50                 2048 	.db #0x50	; 80	'P'
   0785 00                 2049 	.db #0x00	; 0
   0786 08                 2050 	.db #0x08	; 8
   0787 70                 2051 	.db #0x70	; 112	'p'
   0788 A8                 2052 	.db #0xa8	; 168
   0789 A8                 2053 	.db #0xa8	; 168
   078A A8                 2054 	.db #0xa8	; 168
   078B 70                 2055 	.db #0x70	; 112	'p'
   078C 80                 2056 	.db #0x80	; 128
   078D 00                 2057 	.db #0x00	; 0
   078E 38                 2058 	.db #0x38	; 56	'8'
   078F 40                 2059 	.db #0x40	; 64
   0790 80                 2060 	.db #0x80	; 128
   0791 F8                 2061 	.db #0xf8	; 248
   0792 80                 2062 	.db #0x80	; 128
   0793 40                 2063 	.db #0x40	; 64
   0794 38                 2064 	.db #0x38	; 56	'8'
   0795 00                 2065 	.db #0x00	; 0
   0796 70                 2066 	.db #0x70	; 112	'p'
   0797 88                 2067 	.db #0x88	; 136
   0798 88                 2068 	.db #0x88	; 136
   0799 88                 2069 	.db #0x88	; 136
   079A 88                 2070 	.db #0x88	; 136
   079B 88                 2071 	.db #0x88	; 136
   079C 88                 2072 	.db #0x88	; 136
   079D 00                 2073 	.db #0x00	; 0
   079E 00                 2074 	.db #0x00	; 0
   079F 00                 2075 	.db #0x00	; 0
   07A0 F0                 2076 	.db #0xf0	; 240
   07A1 00                 2077 	.db #0x00	; 0
   07A2 F0                 2078 	.db #0xf0	; 240
   07A3 00                 2079 	.db #0x00	; 0
   07A4 F0                 2080 	.db #0xf0	; 240
   07A5 00                 2081 	.db #0x00	; 0
   07A6 20                 2082 	.db #0x20	; 32
   07A7 20                 2083 	.db #0x20	; 32
   07A8 F8                 2084 	.db #0xf8	; 248
   07A9 20                 2085 	.db #0x20	; 32
   07AA 20                 2086 	.db #0x20	; 32
   07AB 00                 2087 	.db #0x00	; 0
   07AC F8                 2088 	.db #0xf8	; 248
   07AD 00                 2089 	.db #0x00	; 0
   07AE C0                 2090 	.db #0xc0	; 192
   07AF 30                 2091 	.db #0x30	; 48	'0'
   07B0 08                 2092 	.db #0x08	; 8
   07B1 30                 2093 	.db #0x30	; 48	'0'
   07B2 C0                 2094 	.db #0xc0	; 192
   07B3 00                 2095 	.db #0x00	; 0
   07B4 F8                 2096 	.db #0xf8	; 248
   07B5 00                 2097 	.db #0x00	; 0
   07B6 18                 2098 	.db #0x18	; 24
   07B7 60                 2099 	.db #0x60	; 96
   07B8 80                 2100 	.db #0x80	; 128
   07B9 60                 2101 	.db #0x60	; 96
   07BA 18                 2102 	.db #0x18	; 24
   07BB 00                 2103 	.db #0x00	; 0
   07BC F8                 2104 	.db #0xf8	; 248
   07BD 00                 2105 	.db #0x00	; 0
   07BE 10                 2106 	.db #0x10	; 16
   07BF 28                 2107 	.db #0x28	; 40
   07C0 20                 2108 	.db #0x20	; 32
   07C1 20                 2109 	.db #0x20	; 32
   07C2 20                 2110 	.db #0x20	; 32
   07C3 20                 2111 	.db #0x20	; 32
   07C4 20                 2112 	.db #0x20	; 32
   07C5 20                 2113 	.db #0x20	; 32
   07C6 20                 2114 	.db #0x20	; 32
   07C7 20                 2115 	.db #0x20	; 32
   07C8 20                 2116 	.db #0x20	; 32
   07C9 20                 2117 	.db #0x20	; 32
   07CA 20                 2118 	.db #0x20	; 32
   07CB 20                 2119 	.db #0x20	; 32
   07CC A0                 2120 	.db #0xa0	; 160
   07CD 40                 2121 	.db #0x40	; 64
   07CE 00                 2122 	.db #0x00	; 0
   07CF 20                 2123 	.db #0x20	; 32
   07D0 00                 2124 	.db #0x00	; 0
   07D1 F8                 2125 	.db #0xf8	; 248
   07D2 00                 2126 	.db #0x00	; 0
   07D3 20                 2127 	.db #0x20	; 32
   07D4 00                 2128 	.db #0x00	; 0
   07D5 00                 2129 	.db #0x00	; 0
   07D6 00                 2130 	.db #0x00	; 0
   07D7 50                 2131 	.db #0x50	; 80	'P'
   07D8 A0                 2132 	.db #0xa0	; 160
   07D9 00                 2133 	.db #0x00	; 0
   07DA 50                 2134 	.db #0x50	; 80	'P'
   07DB A0                 2135 	.db #0xa0	; 160
   07DC 00                 2136 	.db #0x00	; 0
   07DD 00                 2137 	.db #0x00	; 0
   07DE 00                 2138 	.db #0x00	; 0
   07DF 18                 2139 	.db #0x18	; 24
   07E0 24                 2140 	.db #0x24	; 36
   07E1 24                 2141 	.db #0x24	; 36
   07E2 18                 2142 	.db #0x18	; 24
   07E3 00                 2143 	.db #0x00	; 0
   07E4 00                 2144 	.db #0x00	; 0
   07E5 00                 2145 	.db #0x00	; 0
   07E6 00                 2146 	.db #0x00	; 0
   07E7 30                 2147 	.db #0x30	; 48	'0'
   07E8 78                 2148 	.db #0x78	; 120	'x'
   07E9 78                 2149 	.db #0x78	; 120	'x'
   07EA 30                 2150 	.db #0x30	; 48	'0'
   07EB 00                 2151 	.db #0x00	; 0
   07EC 00                 2152 	.db #0x00	; 0
   07ED 00                 2153 	.db #0x00	; 0
   07EE 00                 2154 	.db #0x00	; 0
   07EF 00                 2155 	.db #0x00	; 0
   07F0 00                 2156 	.db #0x00	; 0
   07F1 00                 2157 	.db #0x00	; 0
   07F2 30                 2158 	.db #0x30	; 48	'0'
   07F3 00                 2159 	.db #0x00	; 0
   07F4 00                 2160 	.db #0x00	; 0
   07F5 00                 2161 	.db #0x00	; 0
   07F6 3E                 2162 	.db #0x3e	; 62
   07F7 20                 2163 	.db #0x20	; 32
   07F8 20                 2164 	.db #0x20	; 32
   07F9 20                 2165 	.db #0x20	; 32
   07FA A0                 2166 	.db #0xa0	; 160
   07FB 60                 2167 	.db #0x60	; 96
   07FC 20                 2168 	.db #0x20	; 32
   07FD 00                 2169 	.db #0x00	; 0
   07FE A0                 2170 	.db #0xa0	; 160
   07FF 50                 2171 	.db #0x50	; 80	'P'
   0800 50                 2172 	.db #0x50	; 80	'P'
   0801 50                 2173 	.db #0x50	; 80	'P'
   0802 00                 2174 	.db #0x00	; 0
   0803 00                 2175 	.db #0x00	; 0
   0804 00                 2176 	.db #0x00	; 0
   0805 00                 2177 	.db #0x00	; 0
   0806 40                 2178 	.db #0x40	; 64
   0807 A0                 2179 	.db #0xa0	; 160
   0808 20                 2180 	.db #0x20	; 32
   0809 40                 2181 	.db #0x40	; 64
   080A E0                 2182 	.db #0xe0	; 224
   080B 00                 2183 	.db #0x00	; 0
   080C 00                 2184 	.db #0x00	; 0
   080D 00                 2185 	.db #0x00	; 0
   080E 00                 2186 	.db #0x00	; 0
   080F 38                 2187 	.db #0x38	; 56	'8'
   0810 38                 2188 	.db #0x38	; 56	'8'
   0811 38                 2189 	.db #0x38	; 56	'8'
   0812 38                 2190 	.db #0x38	; 56	'8'
   0813 38                 2191 	.db #0x38	; 56	'8'
   0814 38                 2192 	.db #0x38	; 56	'8'
   0815 00                 2193 	.db #0x00	; 0
   0816 FF                 2194 	.db #0xff	; 255
   0817 FF                 2195 	.db #0xff	; 255
   0818 FF                 2196 	.db #0xff	; 255
   0819 FF                 2197 	.db #0xff	; 255
   081A FF                 2198 	.db #0xff	; 255
   081B FF                 2199 	.db #0xff	; 255
   081C FF                 2200 	.db #0xff	; 255
   081D FF                 2201 	.db #0xff	; 255
   081E                    2202 _hex:
   081E 30 31 32 33 34 35  2203 	.ascii "0123456789ABCDEF"
        36 37 38 39 41 42
        43 44 45 46
   082E 00                 2204 	.db 0x00
                           2205 ;src/main.c:105: vdp_wr_addr(uint16_t addr)
                           2206 ;	---------------------------------
                           2207 ; Function vdp_wr_addr
                           2208 ; ---------------------------------
   082F                    2209 _vdp_wr_addr::
                           2210 ;src/main.c:108: VDP_CTRL_PORT = (addr & 0xFF);
   082F FD 21 02 00   [14] 2211 	ld	iy, #2
   0833 FD 39         [15] 2212 	add	iy, sp
   0835 FD 7E 00      [19] 2213 	ld	a, 0 (iy)
   0838 D3 BF         [11] 2214 	out	(_VDP_CTRL_PORT), a
                           2215 ;src/main.c:112: VDP_CTRL_PORT = ((addr >> 8) & 0x3F) | 0x40;
   083A FD 7E 01      [19] 2216 	ld	a, 1 (iy)
   083D E6 3F         [ 7] 2217 	and	a, #0x3f
   083F F6 40         [ 7] 2218 	or	a, #0x40
   0841 D3 BF         [11] 2219 	out	(_VDP_CTRL_PORT), a
                           2220 ;src/main.c:113: }
   0843 C9            [10] 2221 	ret
                           2222 ;src/main.c:121: vdp_wtr(uint8_t reg, uint8_t val)
                           2223 ;	---------------------------------
                           2224 ; Function vdp_wtr
                           2225 ; ---------------------------------
   0844                    2226 _vdp_wtr::
                           2227 ;src/main.c:124: VDP_CTRL_PORT = val;
   0844 FD 21 03 00   [14] 2228 	ld	iy, #3
   0848 FD 39         [15] 2229 	add	iy, sp
   084A FD 7E 00      [19] 2230 	ld	a, 0 (iy)
   084D D3 BF         [11] 2231 	out	(_VDP_CTRL_PORT), a
                           2232 ;src/main.c:128: VDP_CTRL_PORT = (reg & 0x3F) | 0x80;
   084F FD 2B         [10] 2233 	dec	iy
   0851 FD 7E 00      [19] 2234 	ld	a, 0 (iy)
   0854 E6 3F         [ 7] 2235 	and	a, #0x3f
   0856 F6 80         [ 7] 2236 	or	a, #0x80
   0858 D3 BF         [11] 2237 	out	(_VDP_CTRL_PORT), a
                           2238 ;src/main.c:129: }
   085A C9            [10] 2239 	ret
                           2240 ;src/main.c:137: vdp_memset(uint16_t dst, uint8_t val, uint16_t count)
                           2241 ;	---------------------------------
                           2242 ; Function vdp_memset
                           2243 ; ---------------------------------
   085B                    2244 _vdp_memset::
                           2245 ;src/main.c:143: vdp_wr_addr(dst);
   085B C1            [10] 2246 	pop	bc
   085C E1            [10] 2247 	pop	hl
   085D E5            [11] 2248 	push	hl
   085E C5            [11] 2249 	push	bc
   085F E5            [11] 2250 	push	hl
   0860 CDr2Fr08      [17] 2251 	call	_vdp_wr_addr
   0863 F1            [10] 2252 	pop	af
                           2253 ;src/main.c:177: __endasm;
   0864 21 04 00      [10] 2254 	ld	hl, #4
   0867 39            [11] 2255 	add	hl, sp
   0868 56            [ 7] 2256 	ld	d, (hl)
   0869 23            [ 6] 2257 	inc	hl
   086A 7E            [ 7] 2258 	ld	a, (hl)
   086B 23            [ 6] 2259 	inc	hl
   086C 4E            [ 7] 2260 	ld	c, (hl)
   086D FE 00         [ 7] 2261 	cp	#0
   086F 28 01         [12] 2262 	jr	z, 001$
   0871 0C            [ 4] 2263 	inc	c
   0872                    2264 	    001$:
   0872 47            [ 4] 2265 	ld	b, a
   0873 7A            [ 4] 2266 	ld	a, d
   0874                    2267 	    002$:
   0874 D3 BE         [11] 2268 	out	(_VDP_DATA_PORT), a
   0876 10 FC         [13] 2269 	djnz	002$
   0878 0D            [ 4] 2270 	dec	c
   0879 20 F9         [12] 2271 	jr	nz, 002$
                           2272 ;src/main.c:178: }
   087B C9            [10] 2273 	ret
                           2274 ;src/main.c:186: vdp_memcpy(uint16_t dst, uint8_t *src, uint16_t len)
                           2275 ;	---------------------------------
                           2276 ; Function vdp_memcpy
                           2277 ; ---------------------------------
   087C                    2278 _vdp_memcpy::
                           2279 ;src/main.c:192: vdp_wr_addr(dst);
   087C C1            [10] 2280 	pop	bc
   087D E1            [10] 2281 	pop	hl
   087E E5            [11] 2282 	push	hl
   087F C5            [11] 2283 	push	bc
   0880 E5            [11] 2284 	push	hl
   0881 CDr2Fr08      [17] 2285 	call	_vdp_wr_addr
   0884 F1            [10] 2286 	pop	af
                           2287 ;src/main.c:229: __endasm;
   0885 21 04 00      [10] 2288 	ld	hl, #4
   0888 39            [11] 2289 	add	hl, sp
   0889 5E            [ 7] 2290 	ld	e, (hl)
   088A 23            [ 6] 2291 	inc	hl
   088B 56            [ 7] 2292 	ld	d, (hl)
   088C 23            [ 6] 2293 	inc	hl
   088D 7E            [ 7] 2294 	ld	a, (hl)
   088E 23            [ 6] 2295 	inc	hl
   088F 4E            [ 7] 2296 	ld	c, (hl)
   0890 FE 00         [ 7] 2297 	cp	#0
   0892 28 01         [12] 2298 	jr	z, 001$
   0894 0C            [ 4] 2299 	inc	c
   0895                    2300 	    001$:
   0895 47            [ 4] 2301 	ld	b, a
   0896 79            [ 4] 2302 	ld	a, c
   0897 EB            [ 4] 2303 	ex	de, hl
   0898 0E BE         [ 7] 2304 	ld	c, #_VDP_DATA_PORT
   089A                    2305 	    002$:
   089A ED B3         [21] 2306 	otir
   089C 3D            [ 4] 2307 	dec	a
   089D 20 FB         [12] 2308 	jr	nz, 002$
                           2309 ;src/main.c:230: }
   089F C9            [10] 2310 	ret
                           2311 ;src/main.c:243: strlen(uint8_t *str)
                           2312 ;	---------------------------------
                           2313 ; Function strlen
                           2314 ; ---------------------------------
   08A0                    2315 _strlen::
                           2316 ;src/main.c:246: while ( str[len] != 0 && len != 255 ) { len++; }
   08A0 0E 00         [ 7] 2317 	ld	c, #0x00
   08A2                    2318 00102$:
   08A2 21 02 00      [10] 2319 	ld	hl, #2
   08A5 39            [11] 2320 	add	hl, sp
   08A6 7E            [ 7] 2321 	ld	a, (hl)
   08A7 23            [ 6] 2322 	inc	hl
   08A8 66            [ 7] 2323 	ld	h, (hl)
   08A9 6F            [ 4] 2324 	ld	l, a
   08AA 06 00         [ 7] 2325 	ld	b, #0x00
   08AC 09            [11] 2326 	add	hl, bc
   08AD 7E            [ 7] 2327 	ld	a, (hl)
   08AE B7            [ 4] 2328 	or	a, a
   08AF 28 07         [12] 2329 	jr	Z,00104$
   08B1 79            [ 4] 2330 	ld	a, c
   08B2 3C            [ 4] 2331 	inc	a
   08B3 28 03         [12] 2332 	jr	Z,00104$
   08B5 0C            [ 4] 2333 	inc	c
   08B6 18 EA         [12] 2334 	jr	00102$
   08B8                    2335 00104$:
                           2336 ;src/main.c:247: return len;
   08B8 69            [ 4] 2337 	ld	l, c
                           2338 ;src/main.c:248: }
   08B9 C9            [10] 2339 	ret
                           2340 ;src/main.c:253: print_str(uint8_t *str)
                           2341 ;	---------------------------------
                           2342 ; Function print_str
                           2343 ; ---------------------------------
   08BA                    2344 _print_str::
                           2345 ;src/main.c:255: uint8_t len = strlen(str);
   08BA C1            [10] 2346 	pop	bc
   08BB E1            [10] 2347 	pop	hl
   08BC E5            [11] 2348 	push	hl
   08BD C5            [11] 2349 	push	bc
   08BE E5            [11] 2350 	push	hl
   08BF CDrA0r08      [17] 2351 	call	_strlen
   08C2 F1            [10] 2352 	pop	af
   08C3 4D            [ 4] 2353 	ld	c, l
                           2354 ;src/main.c:256: vdp_memcpy(print_loc, str, len);
   08C4 59            [ 4] 2355 	ld	e, c
   08C5 16 00         [ 7] 2356 	ld	d, #0x00
   08C7 C5            [11] 2357 	push	bc
   08C8 D5            [11] 2358 	push	de
   08C9 21 06 00      [10] 2359 	ld	hl, #6
   08CC 39            [11] 2360 	add	hl, sp
   08CD 4E            [ 7] 2361 	ld	c, (hl)
   08CE 23            [ 6] 2362 	inc	hl
   08CF 46            [ 7] 2363 	ld	b, (hl)
   08D0 C5            [11] 2364 	push	bc
   08D1 2Ar01r00      [16] 2365 	ld	hl, (_print_loc)
   08D4 E5            [11] 2366 	push	hl
   08D5 CDr7Cr08      [17] 2367 	call	_vdp_memcpy
   08D8 21 06 00      [10] 2368 	ld	hl, #6
   08DB 39            [11] 2369 	add	hl, sp
   08DC F9            [ 6] 2370 	ld	sp, hl
   08DD C1            [10] 2371 	pop	bc
                           2372 ;src/main.c:257: print_loc += len;
   08DE 06 00         [ 7] 2373 	ld	b, #0x00
   08E0 2Ar01r00      [16] 2374 	ld	hl, (_print_loc)
   08E3 09            [11] 2375 	add	hl, bc
   08E4 22r01r00      [16] 2376 	ld	(_print_loc), hl
                           2377 ;src/main.c:258: }
   08E7 C9            [10] 2378 	ret
                           2379 ;src/main.c:263: print_str_sp(uint8_t *str)
                           2380 ;	---------------------------------
                           2381 ; Function print_str_sp
                           2382 ; ---------------------------------
   08E8                    2383 _print_str_sp::
                           2384 ;src/main.c:265: print_str(str);
   08E8 C1            [10] 2385 	pop	bc
   08E9 E1            [10] 2386 	pop	hl
   08EA E5            [11] 2387 	push	hl
   08EB C5            [11] 2388 	push	bc
   08EC E5            [11] 2389 	push	hl
   08ED CDrBAr08      [17] 2390 	call	_print_str
   08F0 F1            [10] 2391 	pop	af
                           2392 ;src/main.c:266: print_loc++;
   08F1 2Ar01r00      [16] 2393 	ld	hl, (_print_loc)
   08F4 23            [ 6] 2394 	inc	hl
   08F5 22r01r00      [16] 2395 	ld	(_print_loc), hl
                           2396 ;src/main.c:267: if ( print_loc > (32 * 24) ) {
   08F8 2Ar01r00      [16] 2397 	ld	hl, (_print_loc)
   08FB AF            [ 4] 2398 	xor	a, a
   08FC BD            [ 4] 2399 	cp	a, l
   08FD 3E 03         [ 7] 2400 	ld	a, #0x03
   08FF 9C            [ 4] 2401 	sbc	a, h
   0900 30 07         [12] 2402 	jr	NC,00102$
                           2403 ;src/main.c:268: print_loc = 0;
   0902 21 00 00      [10] 2404 	ld	hl, #0x0000
   0905 22r01r00      [16] 2405 	ld	(_print_loc), hl
   0908 C9            [10] 2406 	ret
   0909                    2407 00102$:
                           2408 ;src/main.c:271: VDP_DATA_PORT = ' ';
   0909 3E 20         [ 7] 2409 	ld	a, #0x20
   090B D3 BE         [11] 2410 	out	(_VDP_DATA_PORT), a
                           2411 ;src/main.c:273: }
   090D C9            [10] 2412 	ret
                           2413 ;src/main.c:278: print_nl(void)
                           2414 ;	---------------------------------
                           2415 ; Function print_nl
                           2416 ; ---------------------------------
   090E                    2417 _print_nl::
                           2418 ;src/main.c:280: print_loc += 32;
   090E 2Ar01r00      [16] 2419 	ld	hl, (_print_loc)
   0911 01 20 00      [10] 2420 	ld	bc, #0x0020
   0914 09            [11] 2421 	add	hl, bc
                           2422 ;src/main.c:281: if ( print_loc > (32 * 24) ) {
   0915 22r01r00      [16] 2423 	ld	(_print_loc), hl
   0918 AF            [ 4] 2424 	xor	a, a
   0919 BD            [ 4] 2425 	cp	a, l
   091A 3E 03         [ 7] 2426 	ld	a, #0x03
   091C 9C            [ 4] 2427 	sbc	a, h
   091D 30 07         [12] 2428 	jr	NC,00102$
                           2429 ;src/main.c:282: print_loc = 0;
   091F 21 00 00      [10] 2430 	ld	hl, #0x0000
   0922 22r01r00      [16] 2431 	ld	(_print_loc), hl
   0925 C9            [10] 2432 	ret
   0926                    2433 00102$:
                           2434 ;src/main.c:286: print_loc &= 0xFFE0;
   0926 7D            [ 4] 2435 	ld	a, l
   0927 E6 E0         [ 7] 2436 	and	a, #0xe0
   0929 6F            [ 4] 2437 	ld	l, a
   092A 22r01r00      [16] 2438 	ld	(_print_loc), hl
                           2439 ;src/main.c:288: }
   092D C9            [10] 2440 	ret
                           2441 ;src/main.c:293: print_str_nl(uint8_t *str)
                           2442 ;	---------------------------------
                           2443 ; Function print_str_nl
                           2444 ; ---------------------------------
   092E                    2445 _print_str_nl::
                           2446 ;src/main.c:295: print_str(str);
   092E C1            [10] 2447 	pop	bc
   092F E1            [10] 2448 	pop	hl
   0930 E5            [11] 2449 	push	hl
   0931 C5            [11] 2450 	push	bc
   0932 E5            [11] 2451 	push	hl
   0933 CDrBAr08      [17] 2452 	call	_print_str
   0936 F1            [10] 2453 	pop	af
                           2454 ;src/main.c:296: print_nl();
                           2455 ;src/main.c:297: }
   0937 C3r0Er09      [10] 2456 	jp	_print_nl
                           2457 ;src/main.c:302: print_setxy(uint8_t x, uint8_t y)
                           2458 ;	---------------------------------
                           2459 ; Function print_setxy
                           2460 ; ---------------------------------
   093A                    2461 _print_setxy::
                           2462 ;src/main.c:304: print_loc = (y * 32) + x;
   093A FD 21 03 00   [14] 2463 	ld	iy, #3
   093E FD 39         [15] 2464 	add	iy, sp
   0940 FD 6E 00      [19] 2465 	ld	l, 0 (iy)
   0943 26 00         [ 7] 2466 	ld	h, #0x00
   0945 29            [11] 2467 	add	hl, hl
   0946 29            [11] 2468 	add	hl, hl
   0947 29            [11] 2469 	add	hl, hl
   0948 29            [11] 2470 	add	hl, hl
   0949 29            [11] 2471 	add	hl, hl
   094A FD 2B         [10] 2472 	dec	iy
   094C FD 4E 00      [19] 2473 	ld	c, 0 (iy)
   094F 06 00         [ 7] 2474 	ld	b, #0x00
   0951 09            [11] 2475 	add	hl, bc
   0952 22r01r00      [16] 2476 	ld	(_print_loc), hl
                           2477 ;src/main.c:305: }
   0955 C9            [10] 2478 	ret
                           2479 ;src/main.c:310: disp_hex(uint8_t d)
                           2480 ;	---------------------------------
                           2481 ; Function disp_hex
                           2482 ; ---------------------------------
   0956                    2483 _disp_hex::
                           2484 ;src/main.c:312: VDP_DATA_PORT = hex[((d >> 4) & 0xF)];
   0956 01r1Er08      [10] 2485 	ld	bc, #_hex+0
   0959 FD 21 02 00   [14] 2486 	ld	iy, #2
   095D FD 39         [15] 2487 	add	iy, sp
   095F FD 7E 00      [19] 2488 	ld	a, 0 (iy)
   0962 07            [ 4] 2489 	rlca
   0963 07            [ 4] 2490 	rlca
   0964 07            [ 4] 2491 	rlca
   0965 07            [ 4] 2492 	rlca
   0966 E6 0F         [ 7] 2493 	and	a, #0x0f
   0968 E6 0F         [ 7] 2494 	and	a, #0x0f
   096A 6F            [ 4] 2495 	ld	l, a
   096B 26 00         [ 7] 2496 	ld	h, #0x00
   096D 09            [11] 2497 	add	hl, bc
   096E 7E            [ 7] 2498 	ld	a, (hl)
   096F D3 BE         [11] 2499 	out	(_VDP_DATA_PORT), a
                           2500 ;src/main.c:313: VDP_DATA_PORT = hex[( d       & 0xF)];
   0971 FD 7E 00      [19] 2501 	ld	a, 0 (iy)
   0974 E6 0F         [ 7] 2502 	and	a, #0x0f
   0976 26 00         [ 7] 2503 	ld	h, #0x00
   0978 6F            [ 4] 2504 	ld	l, a
   0979 09            [11] 2505 	add	hl, bc
   097A 7E            [ 7] 2506 	ld	a, (hl)
   097B D3 BE         [11] 2507 	out	(_VDP_DATA_PORT), a
                           2508 ;src/main.c:314: VDP_DATA_PORT = ' ';
   097D 3E 20         [ 7] 2509 	ld	a, #0x20
   097F D3 BE         [11] 2510 	out	(_VDP_DATA_PORT), a
                           2511 ;src/main.c:315: }
   0981 C9            [10] 2512 	ret
                           2513 ;src/main.c:492: sd_send_cmd_ex(uint8_t cmd, uint8_t crc, uint8_t clk_speed)
                           2514 ;	---------------------------------
                           2515 ; Function sd_send_cmd_ex
                           2516 ; ---------------------------------
   0982                    2517 _sd_send_cmd_ex::
                           2518 ;src/main.c:497: SD_CTRL_PORT = clk_speed | CE_OFF;
   0982 FD 21 04 00   [14] 2519 	ld	iy, #4
   0986 FD 39         [15] 2520 	add	iy, sp
   0988 FD 4E 00      [19] 2521 	ld	c, 0 (iy)
   098B 79            [ 4] 2522 	ld	a, c
   098C F6 01         [ 7] 2523 	or	a, #0x01
   098E D3 56         [11] 2524 	out	(_SD_CTRL_PORT), a
                           2525 ;src/main.c:498: uint8_t d = SD_DATA_PORT; // required end-of-op 8-clocks
   0990 DB 57         [11] 2526 	in	a, (_SD_DATA_PORT)
                           2527 ;src/main.c:500: SD_CTRL_PORT = clk_speed | CE_ON;
   0992 79            [ 4] 2528 	ld	a, c
   0993 D3 56         [11] 2529 	out	(_SD_CTRL_PORT), a
                           2530 ;src/main.c:502: SD_DATA_PORT = cmd;
   0995 FD 2B         [10] 2531 	dec	iy
   0997 FD 2B         [10] 2532 	dec	iy
   0999 FD 7E 00      [19] 2533 	ld	a, 0 (iy)
   099C D3 57         [11] 2534 	out	(_SD_DATA_PORT), a
                           2535 ;src/main.c:506: for ( i = 0 ; i < sizeof(CMDARGS) ; i++ ) {
   099E 0E 00         [ 7] 2536 	ld	c, #0x00
   09A0                    2537 00105$:
                           2538 ;src/main.c:507: SD_DATA_PORT = CMDARGS[i];
   09A0 3Er0E         [ 7] 2539 	ld	a, #<(_CMDARGS)
   09A2 81            [ 4] 2540 	add	a, c
   09A3 5F            [ 4] 2541 	ld	e, a
   09A4 3Es00         [ 7] 2542 	ld	a, #>(_CMDARGS)
   09A6 CE 00         [ 7] 2543 	adc	a, #0x00
   09A8 57            [ 4] 2544 	ld	d, a
   09A9 1A            [ 7] 2545 	ld	a, (de)
   09AA D3 57         [11] 2546 	out	(_SD_DATA_PORT), a
                           2547 ;src/main.c:508: CMDARGS[i] = 0;
   09AC AF            [ 4] 2548 	xor	a, a
   09AD 12            [ 7] 2549 	ld	(de), a
                           2550 ;src/main.c:506: for ( i = 0 ; i < sizeof(CMDARGS) ; i++ ) {
   09AE 0C            [ 4] 2551 	inc	c
   09AF 79            [ 4] 2552 	ld	a, c
   09B0 D6 04         [ 7] 2553 	sub	a, #0x04
   09B2 38 EC         [12] 2554 	jr	C,00105$
                           2555 ;src/main.c:511: SD_DATA_PORT = crc;
   09B4 21 03 00      [10] 2556 	ld	hl, #3+0
   09B7 39            [11] 2557 	add	hl, sp
   09B8 7E            [ 7] 2558 	ld	a, (hl)
   09B9 D3 57         [11] 2559 	out	(_SD_DATA_PORT), a
                           2560 ;src/main.c:515: for ( i = 255 ; i > 0 ; i-- )
   09BB 0E FF         [ 7] 2561 	ld	c, #0xff
   09BD                    2562 00107$:
                           2563 ;src/main.c:517: d = SD_DATA_PORT;
   09BD DB 57         [11] 2564 	in	a, (_SD_DATA_PORT)
                           2565 ;src/main.c:519: if ( d != NODATA ) {
   09BF 47            [ 4] 2566 	ld	b, a
   09C0 3C            [ 4] 2567 	inc	a
   09C1 20 04         [12] 2568 	jr	NZ,00104$
                           2569 ;src/main.c:515: for ( i = 255 ; i > 0 ; i-- )
   09C3 0D            [ 4] 2570 	dec	c
   09C4 79            [ 4] 2571 	ld	a, c
   09C5 20 F6         [12] 2572 	jr	NZ,00107$
   09C7                    2573 00104$:
                           2574 ;src/main.c:524: return d;
   09C7 68            [ 4] 2575 	ld	l, b
                           2576 ;src/main.c:525: }
   09C8 C9            [10] 2577 	ret
                           2578 ;src/main.c:538: sd_send_cmd(uint8_t cmd, uint8_t crc, uint8_t clk_speed)
                           2579 ;	---------------------------------
                           2580 ; Function sd_send_cmd
                           2581 ; ---------------------------------
   09C9                    2582 _sd_send_cmd::
                           2583 ;src/main.c:540: uint8_t d = sd_send_cmd_ex(cmd, crc, clk_speed);
   09C9 FD 21 04 00   [14] 2584 	ld	iy, #4
   09CD FD 39         [15] 2585 	add	iy, sp
   09CF FD 7E 00      [19] 2586 	ld	a, 0 (iy)
   09D2 F5            [11] 2587 	push	af
   09D3 33            [ 6] 2588 	inc	sp
   09D4 FD 2B         [10] 2589 	dec	iy
   09D6 FD 7E 00      [19] 2590 	ld	a, 0 (iy)
   09D9 F5            [11] 2591 	push	af
   09DA 33            [ 6] 2592 	inc	sp
   09DB FD 2B         [10] 2593 	dec	iy
   09DD FD 7E 00      [19] 2594 	ld	a, 0 (iy)
   09E0 F5            [11] 2595 	push	af
   09E1 33            [ 6] 2596 	inc	sp
   09E2 CDr82r09      [17] 2597 	call	_sd_send_cmd_ex
   09E5 F1            [10] 2598 	pop	af
   09E6 33            [ 6] 2599 	inc	sp
   09E7 4D            [ 4] 2600 	ld	c, l
                           2601 ;src/main.c:541: SD_CTRL_PORT = clk_speed | CE_OFF;
   09E8 21 04 00      [10] 2602 	ld	hl, #4+0
   09EB 39            [11] 2603 	add	hl, sp
   09EC 7E            [ 7] 2604 	ld	a, (hl)
   09ED F6 01         [ 7] 2605 	or	a, #0x01
   09EF D3 56         [11] 2606 	out	(_SD_CTRL_PORT), a
                           2607 ;src/main.c:545: uint8_t eop = SD_DATA_PORT; // required end-of-op 8-clocks
   09F1 DB 57         [11] 2608 	in	a, (_SD_DATA_PORT)
                           2609 ;src/main.c:547: return d;
   09F3 69            [ 4] 2610 	ld	l, c
                           2611 ;src/main.c:548: }
   09F4 C9            [10] 2612 	ret
                           2613 ;src/main.c:558: sd_card_init(void)
                           2614 ;	---------------------------------
                           2615 ; Function sd_card_init
                           2616 ; ---------------------------------
   09F5                    2617 _sd_card_init::
                           2618 ;src/main.c:636: g_sd_addr_size = ADDR_BLOCK;
   09F5 21r0Br00      [10] 2619 	ld	hl,#_g_sd_addr_size + 0
   09F8 36 01         [10] 2620 	ld	(hl), #0x01
                           2621 ;src/main.c:637: g_sd_type = SD_IS_UNKNOWN;
   09FA 21r0Dr00      [10] 2622 	ld	hl,#_g_sd_type + 0
   09FD 36 03         [10] 2623 	ld	(hl), #0x03
                           2624 ;src/main.c:640: SD_CTRL_PORT = CK_SLOW | CE_OFF;
   09FF 3E 03         [ 7] 2625 	ld	a, #0x03
   0A01 D3 56         [11] 2626 	out	(_SD_CTRL_PORT), a
                           2627 ;src/main.c:643: for ( i = 10 ; i > 0 ; i-- ) {
   0A03 0E 0A         [ 7] 2628 	ld	c, #0x0a
   0A05                    2629 00140$:
                           2630 ;src/main.c:644: d = SD_DATA_PORT;
   0A05 DB 57         [11] 2631 	in	a, (_SD_DATA_PORT)
                           2632 ;src/main.c:643: for ( i = 10 ; i > 0 ; i-- ) {
   0A07 0D            [ 4] 2633 	dec	c
   0A08 79            [ 4] 2634 	ld	a, c
   0A09 20 FA         [12] 2635 	jr	NZ,00140$
                           2636 ;src/main.c:648: d = sd_send_cmd(CMD0, CRC0, CK_SLOW);
   0A0B 11 95 02      [10] 2637 	ld	de, #0x0295
   0A0E D5            [11] 2638 	push	de
   0A0F 3E 40         [ 7] 2639 	ld	a, #0x40
   0A11 F5            [11] 2640 	push	af
   0A12 33            [ 6] 2641 	inc	sp
   0A13 CDrC9r09      [17] 2642 	call	_sd_send_cmd
   0A16 F1            [10] 2643 	pop	af
   0A17 33            [ 6] 2644 	inc	sp
                           2645 ;src/main.c:649: if ( d != R1_IDLE ) {
   0A18 2D            [ 4] 2646 	dec	l
   0A19 28 03         [12] 2647 	jr	Z,00103$
                           2648 ;src/main.c:650: return SD_SPI_MODE_FAILED;
   0A1B 2E 02         [ 7] 2649 	ld	l, #0x02
   0A1D C9            [10] 2650 	ret
   0A1E                    2651 00103$:
                           2652 ;src/main.c:656: CMDARGS[2] = VHS; CMDARGS[3] = CKPTRN;
   0A1E 21r10r00      [10] 2653 	ld	hl, #(_CMDARGS + 0x0002)
   0A21 36 01         [10] 2654 	ld	(hl), #0x01
   0A23 21r11r00      [10] 2655 	ld	hl, #(_CMDARGS + 0x0003)
   0A26 36 AA         [10] 2656 	ld	(hl), #0xaa
                           2657 ;src/main.c:657: d = sd_send_cmd_ex(CMD8, CRC8, CK_SLOW);
   0A28 11 87 02      [10] 2658 	ld	de, #0x0287
   0A2B D5            [11] 2659 	push	de
   0A2C 3E 48         [ 7] 2660 	ld	a, #0x48
   0A2E F5            [11] 2661 	push	af
   0A2F 33            [ 6] 2662 	inc	sp
   0A30 CDr82r09      [17] 2663 	call	_sd_send_cmd_ex
   0A33 F1            [10] 2664 	pop	af
   0A34 33            [ 6] 2665 	inc	sp
                           2666 ;src/main.c:658: if ( d == R1_IDLE )
   0A35 2D            [ 4] 2667 	dec	l
   0A36 20 21         [12] 2668 	jr	NZ,00114$
                           2669 ;src/main.c:663: d = SD_DATA_PORT; // don't care
   0A38 DB 57         [11] 2670 	in	a, (_SD_DATA_PORT)
                           2671 ;src/main.c:664: d = SD_DATA_PORT; // don't care
   0A3A DB 57         [11] 2672 	in	a, (_SD_DATA_PORT)
                           2673 ;src/main.c:665: i = SD_DATA_PORT; // echo VHS
   0A3C DB 57         [11] 2674 	in	a, (_SD_DATA_PORT)
   0A3E 47            [ 4] 2675 	ld	b, a
                           2676 ;src/main.c:666: d = SD_DATA_PORT; // echo Check Pattern
   0A3F DB 57         [11] 2677 	in	a, (_SD_DATA_PORT)
   0A41 4F            [ 4] 2678 	ld	c, a
                           2679 ;src/main.c:667: SD_CTRL_PORT = CK_SLOW | CE_OFF;
   0A42 3E 03         [ 7] 2680 	ld	a, #0x03
   0A44 D3 56         [11] 2681 	out	(_SD_CTRL_PORT), a
                           2682 ;src/main.c:668: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0A46 DB 57         [11] 2683 	in	a, (_SD_DATA_PORT)
                           2684 ;src/main.c:670: if ( i != VHS || d != CKPTRN ) {
   0A48 10 05         [13] 2685 	djnz	00104$
   0A4A 79            [ 4] 2686 	ld	a, c
   0A4B D6 AA         [ 7] 2687 	sub	a, #0xaa
   0A4D 28 03         [12] 2688 	jr	Z,00105$
   0A4F                    2689 00104$:
                           2690 ;src/main.c:671: return SD_BAD_CMD8_VOLTAGE;
   0A4F 2E 03         [ 7] 2691 	ld	l, #0x03
   0A51 C9            [10] 2692 	ret
   0A52                    2693 00105$:
                           2694 ;src/main.c:674: g_sd_type = SD_IS_SDHC;
   0A52 21r0Dr00      [10] 2695 	ld	hl,#_g_sd_type + 0
   0A55 36 01         [10] 2696 	ld	(hl), #0x01
   0A57 18 43         [12] 2697 	jr	00115$
   0A59                    2698 00114$:
                           2699 ;src/main.c:682: d = sd_send_cmd_ex(CMD58, CRCX, CK_SLOW);
   0A59 11 01 02      [10] 2700 	ld	de, #0x0201
   0A5C D5            [11] 2701 	push	de
   0A5D 3E 7A         [ 7] 2702 	ld	a, #0x7a
   0A5F F5            [11] 2703 	push	af
   0A60 33            [ 6] 2704 	inc	sp
   0A61 CDr82r09      [17] 2705 	call	_sd_send_cmd_ex
   0A64 F1            [10] 2706 	pop	af
   0A65 33            [ 6] 2707 	inc	sp
                           2708 ;src/main.c:683: if ( d > R1_IDLE ) {
   0A66 3E 01         [ 7] 2709 	ld	a, #0x01
   0A68 95            [ 4] 2710 	sub	a, l
   0A69 30 09         [12] 2711 	jr	NC,00108$
                           2712 ;src/main.c:684: SD_CTRL_PORT = CK_SLOW | CE_OFF;
   0A6B 3E 03         [ 7] 2713 	ld	a, #0x03
   0A6D D3 56         [11] 2714 	out	(_SD_CTRL_PORT), a
                           2715 ;src/main.c:685: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0A6F DB 57         [11] 2716 	in	a, (_SD_DATA_PORT)
                           2717 ;src/main.c:686: return SD_BAD_OCR_READ;
   0A71 2E 04         [ 7] 2718 	ld	l, #0x04
   0A73 C9            [10] 2719 	ret
   0A74                    2720 00108$:
                           2721 ;src/main.c:694: i = SD_DATA_PORT; // don't care
   0A74 DB 57         [11] 2722 	in	a, (_SD_DATA_PORT)
                           2723 ;src/main.c:695: i = SD_DATA_PORT; // bits 23..16
   0A76 DB 57         [11] 2724 	in	a, (_SD_DATA_PORT)
   0A78 47            [ 4] 2725 	ld	b, a
                           2726 ;src/main.c:696: d = SD_DATA_PORT; // bit 15, 0x80 or 0x00
   0A79 DB 57         [11] 2727 	in	a, (_SD_DATA_PORT)
                           2728 ;src/main.c:697: d &= 0x80; // make sure reserved bits don't interfere.
   0A7B E6 80         [ 7] 2729 	and	a, #0x80
   0A7D 4F            [ 4] 2730 	ld	c, a
                           2731 ;src/main.c:698: if ( i == 0xFF ) {
   0A7E 04            [ 4] 2732 	inc	b
   0A7F 20 01         [12] 2733 	jr	NZ,00110$
                           2734 ;src/main.c:699: d++;
   0A81 0C            [ 4] 2735 	inc	c
   0A82                    2736 00110$:
                           2737 ;src/main.c:701: i = SD_DATA_PORT; // don't care
   0A82 DB 57         [11] 2738 	in	a, (_SD_DATA_PORT)
                           2739 ;src/main.c:702: SD_CTRL_PORT = CK_SLOW | CE_OFF;
   0A84 3E 03         [ 7] 2740 	ld	a, #0x03
   0A86 D3 56         [11] 2741 	out	(_SD_CTRL_PORT), a
                           2742 ;src/main.c:703: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0A88 DB 57         [11] 2743 	in	a, (_SD_DATA_PORT)
                           2744 ;src/main.c:705: if ( d != 0x81 ) {
   0A8A 79            [ 4] 2745 	ld	a, c
   0A8B D6 81         [ 7] 2746 	sub	a, #0x81
   0A8D 28 03         [12] 2747 	jr	Z,00112$
                           2748 ;src/main.c:706: return SD_BAD_OCR_VOLTAGE;
   0A8F 2E 05         [ 7] 2749 	ld	l, #0x05
   0A91 C9            [10] 2750 	ret
   0A92                    2751 00112$:
                           2752 ;src/main.c:709: g_sd_addr_size = ADDR_BYTE;
   0A92 21r0Br00      [10] 2753 	ld	hl,#_g_sd_addr_size + 0
   0A95 36 00         [10] 2754 	ld	(hl), #0x00
                           2755 ;src/main.c:710: g_sd_type = SD_IS_SDSC;
   0A97 21r0Dr00      [10] 2756 	ld	hl,#_g_sd_type + 0
   0A9A 36 00         [10] 2757 	ld	(hl), #0x00
   0A9C                    2758 00115$:
                           2759 ;src/main.c:717: i = sd_send_cmd(CMD55, CRCX, CK_SLOW);
   0A9C 11 01 02      [10] 2760 	ld	de, #0x0201
   0A9F D5            [11] 2761 	push	de
   0AA0 3E 77         [ 7] 2762 	ld	a, #0x77
   0AA2 F5            [11] 2763 	push	af
   0AA3 33            [ 6] 2764 	inc	sp
   0AA4 CDrC9r09      [17] 2765 	call	_sd_send_cmd
   0AA7 F1            [10] 2766 	pop	af
   0AA8 33            [ 6] 2767 	inc	sp
   0AA9 45            [ 4] 2768 	ld	b, l
                           2769 ;src/main.c:718: if ( g_sd_addr_size == ADDR_BLOCK ) {
   0AAA 3Ar0Br00      [13] 2770 	ld	a,(#_g_sd_addr_size + 0)
   0AAD 3D            [ 4] 2771 	dec	a
   0AAE 20 05         [12] 2772 	jr	NZ,00117$
                           2773 ;src/main.c:721: CMDARGS[0] = HCS_YES;
   0AB0 21r0Er00      [10] 2774 	ld	hl, #_CMDARGS
   0AB3 36 40         [10] 2775 	ld	(hl), #0x40
   0AB5                    2776 00117$:
                           2777 ;src/main.c:723: d = sd_send_cmd(ACMD41, CRCX, CK_SLOW);
   0AB5 C5            [11] 2778 	push	bc
   0AB6 11 01 02      [10] 2779 	ld	de, #0x0201
   0AB9 D5            [11] 2780 	push	de
   0ABA 3E 69         [ 7] 2781 	ld	a, #0x69
   0ABC F5            [11] 2782 	push	af
   0ABD 33            [ 6] 2783 	inc	sp
   0ABE CDrC9r09      [17] 2784 	call	_sd_send_cmd
   0AC1 F1            [10] 2785 	pop	af
   0AC2 33            [ 6] 2786 	inc	sp
   0AC3 7D            [ 4] 2787 	ld	a, l
   0AC4 C1            [10] 2788 	pop	bc
   0AC5 4F            [ 4] 2789 	ld	c, a
                           2790 ;src/main.c:725: if ( i > R1_IDLE || d > R1_IDLE )
   0AC6 3E 01         [ 7] 2791 	ld	a,#0x01
   0AC8 B8            [ 4] 2792 	cp	a,b
   0AC9 38 03         [12] 2793 	jr	C,00120$
   0ACB 91            [ 4] 2794 	sub	a, c
   0ACC 30 1B         [12] 2795 	jr	NC,00164$
   0ACE                    2796 00120$:
                           2797 ;src/main.c:728: d = sd_send_cmd(CMD1, CRCX, CK_SLOW);
   0ACE 11 01 02      [10] 2798 	ld	de, #0x0201
   0AD1 D5            [11] 2799 	push	de
   0AD2 3E 41         [ 7] 2800 	ld	a, #0x41
   0AD4 F5            [11] 2801 	push	af
   0AD5 33            [ 6] 2802 	inc	sp
   0AD6 CDrC9r09      [17] 2803 	call	_sd_send_cmd
   0AD9 F1            [10] 2804 	pop	af
   0ADA 33            [ 6] 2805 	inc	sp
   0ADB 4D            [ 4] 2806 	ld	c, l
                           2807 ;src/main.c:729: if ( d > R1_IDLE ) {
   0ADC 3E 01         [ 7] 2808 	ld	a, #0x01
   0ADE 91            [ 4] 2809 	sub	a, c
   0ADF 30 03         [12] 2810 	jr	NC,00119$
                           2811 ;src/main.c:730: return SD_MMC_FAILED;
   0AE1 2E 06         [ 7] 2812 	ld	l, #0x06
   0AE3 C9            [10] 2813 	ret
   0AE4                    2814 00119$:
                           2815 ;src/main.c:733: g_sd_type = SD_IS_MMC;
   0AE4 21r0Dr00      [10] 2816 	ld	hl,#_g_sd_type + 0
   0AE7 36 02         [10] 2817 	ld	(hl), #0x02
                           2818 ;src/main.c:739: for ( wait = 25000 ; wait > 0 && d == R1_IDLE ; wait-- )
   0AE9                    2819 00164$:
   0AE9 11 A8 61      [10] 2820 	ld	de, #0x61a8
   0AEC                    2821 00144$:
   0AEC 7A            [ 4] 2822 	ld	a, d
   0AED B3            [ 4] 2823 	or	a, e
   0AEE 28 3F         [12] 2824 	jr	Z,00126$
   0AF0 79            [ 4] 2825 	ld	a, c
   0AF1 3D            [ 4] 2826 	dec	a
   0AF2 20 3B         [12] 2827 	jr	NZ,00126$
                           2828 ;src/main.c:741: if ( g_sd_type == SD_IS_MMC ) {
   0AF4 3Ar0Dr00      [13] 2829 	ld	a,(#_g_sd_type + 0)
   0AF7 D6 02         [ 7] 2830 	sub	a, #0x02
   0AF9 20 13         [12] 2831 	jr	NZ,00124$
                           2832 ;src/main.c:742: d = sd_send_cmd(CMD1, CRCX, CK_SLOW);
   0AFB D5            [11] 2833 	push	de
   0AFC 11 01 02      [10] 2834 	ld	de, #0x0201
   0AFF D5            [11] 2835 	push	de
   0B00 3E 41         [ 7] 2836 	ld	a, #0x41
   0B02 F5            [11] 2837 	push	af
   0B03 33            [ 6] 2838 	inc	sp
   0B04 CDrC9r09      [17] 2839 	call	_sd_send_cmd
   0B07 F1            [10] 2840 	pop	af
   0B08 33            [ 6] 2841 	inc	sp
   0B09 7D            [ 4] 2842 	ld	a, l
   0B0A D1            [10] 2843 	pop	de
   0B0B 4F            [ 4] 2844 	ld	c, a
   0B0C 18 1E         [12] 2845 	jr	00145$
   0B0E                    2846 00124$:
                           2847 ;src/main.c:744: d = sd_send_cmd(CMD55, CRCX, CK_SLOW);
   0B0E D5            [11] 2848 	push	de
   0B0F 11 01 02      [10] 2849 	ld	de, #0x0201
   0B12 D5            [11] 2850 	push	de
   0B13 3E 77         [ 7] 2851 	ld	a, #0x77
   0B15 F5            [11] 2852 	push	af
   0B16 33            [ 6] 2853 	inc	sp
   0B17 CDrC9r09      [17] 2854 	call	_sd_send_cmd
   0B1A F1            [10] 2855 	pop	af
   0B1B 33            [ 6] 2856 	inc	sp
   0B1C 11 01 02      [10] 2857 	ld	de, #0x0201
   0B1F D5            [11] 2858 	push	de
   0B20 3E 69         [ 7] 2859 	ld	a, #0x69
   0B22 F5            [11] 2860 	push	af
   0B23 33            [ 6] 2861 	inc	sp
   0B24 CDrC9r09      [17] 2862 	call	_sd_send_cmd
   0B27 F1            [10] 2863 	pop	af
   0B28 33            [ 6] 2864 	inc	sp
   0B29 7D            [ 4] 2865 	ld	a, l
   0B2A D1            [10] 2866 	pop	de
   0B2B 4F            [ 4] 2867 	ld	c, a
   0B2C                    2868 00145$:
                           2869 ;src/main.c:739: for ( wait = 25000 ; wait > 0 && d == R1_IDLE ; wait-- )
   0B2C 1B            [ 6] 2870 	dec	de
   0B2D 18 BD         [12] 2871 	jr	00144$
   0B2F                    2872 00126$:
                           2873 ;src/main.c:749: if ( wait == 0 ) {
   0B2F 7A            [ 4] 2874 	ld	a, d
   0B30 B3            [ 4] 2875 	or	a, e
   0B31 20 03         [12] 2876 	jr	NZ,00128$
                           2877 ;src/main.c:750: return SD_INIT_TIMEOUT;
   0B33 2E 07         [ 7] 2878 	ld	l, #0x07
   0B35 C9            [10] 2879 	ret
   0B36                    2880 00128$:
                           2881 ;src/main.c:753: if ( d != R1_READY ) {
   0B36 79            [ 4] 2882 	ld	a, c
   0B37 B7            [ 4] 2883 	or	a, a
   0B38 28 03         [12] 2884 	jr	Z,00130$
                           2885 ;src/main.c:754: return SD_INIT_FAILED;
   0B3A 2E 08         [ 7] 2886 	ld	l, #0x08
   0B3C C9            [10] 2887 	ret
   0B3D                    2888 00130$:
                           2889 ;src/main.c:762: if ( g_sd_addr_size == ADDR_BLOCK )
   0B3D 3Ar0Br00      [13] 2890 	ld	a,(#_g_sd_addr_size + 0)
   0B40 3D            [ 4] 2891 	dec	a
   0B41 20 34         [12] 2892 	jr	NZ,00138$
                           2893 ;src/main.c:765: d = sd_send_cmd_ex(CMD58, CRCX, CK_SLOW);
   0B43 11 01 02      [10] 2894 	ld	de, #0x0201
   0B46 D5            [11] 2895 	push	de
   0B47 3E 7A         [ 7] 2896 	ld	a, #0x7a
   0B49 F5            [11] 2897 	push	af
   0B4A 33            [ 6] 2898 	inc	sp
   0B4B CDr82r09      [17] 2899 	call	_sd_send_cmd_ex
   0B4E F1            [10] 2900 	pop	af
   0B4F 33            [ 6] 2901 	inc	sp
                           2902 ;src/main.c:766: if ( d > R1_IDLE ) {
   0B50 3E 01         [ 7] 2903 	ld	a, #0x01
   0B52 95            [ 4] 2904 	sub	a, l
   0B53 30 03         [12] 2905 	jr	NC,00132$
                           2906 ;src/main.c:767: return SD_BAD_SSC_READ;
   0B55 2E 09         [ 7] 2907 	ld	l, #0x09
   0B57 C9            [10] 2908 	ret
   0B58                    2909 00132$:
                           2910 ;src/main.c:771: d = SD_DATA_PORT; // CSS is bit 0x40
   0B58 DB 57         [11] 2911 	in	a, (_SD_DATA_PORT)
   0B5A 4F            [ 4] 2912 	ld	c, a
                           2913 ;src/main.c:772: i = SD_DATA_PORT; // don't care
   0B5B DB 57         [11] 2914 	in	a, (_SD_DATA_PORT)
                           2915 ;src/main.c:773: i = SD_DATA_PORT; // don't care
   0B5D DB 57         [11] 2916 	in	a, (_SD_DATA_PORT)
                           2917 ;src/main.c:774: i = SD_DATA_PORT; // don't care
   0B5F DB 57         [11] 2918 	in	a, (_SD_DATA_PORT)
                           2919 ;src/main.c:775: SD_CTRL_PORT = CK_SLOW | CE_OFF;
   0B61 3E 03         [ 7] 2920 	ld	a, #0x03
   0B63 D3 56         [11] 2921 	out	(_SD_CTRL_PORT), a
                           2922 ;src/main.c:776: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0B65 DB 57         [11] 2923 	in	a, (_SD_DATA_PORT)
                           2924 ;src/main.c:778: if ( (d & CSS_BIT) == 0 ) {
   0B67 CB 71         [ 8] 2925 	bit	6, c
   0B69 20 26         [12] 2926 	jr	NZ,00139$
                           2927 ;src/main.c:779: g_sd_addr_size = ADDR_BYTE;
   0B6B 21r0Br00      [10] 2928 	ld	hl,#_g_sd_addr_size + 0
   0B6E 36 00         [10] 2929 	ld	(hl), #0x00
                           2930 ;src/main.c:780: g_sd_type = SD_IS_SDSC;
   0B70 21r0Dr00      [10] 2931 	ld	hl,#_g_sd_type + 0
   0B73 36 00         [10] 2932 	ld	(hl), #0x00
   0B75 18 1A         [12] 2933 	jr	00139$
   0B77                    2934 00138$:
                           2935 ;src/main.c:787: CMDARGS[2] = 0x02;
   0B77 21r10r00      [10] 2936 	ld	hl, #(_CMDARGS + 0x0002)
   0B7A 36 02         [10] 2937 	ld	(hl), #0x02
                           2938 ;src/main.c:788: d = sd_send_cmd(CMD16, CRCX, CK_SLOW);
   0B7C 11 01 02      [10] 2939 	ld	de, #0x0201
   0B7F D5            [11] 2940 	push	de
   0B80 3E 50         [ 7] 2941 	ld	a, #0x50
   0B82 F5            [11] 2942 	push	af
   0B83 33            [ 6] 2943 	inc	sp
   0B84 CDrC9r09      [17] 2944 	call	_sd_send_cmd
   0B87 F1            [10] 2945 	pop	af
   0B88 33            [ 6] 2946 	inc	sp
                           2947 ;src/main.c:789: if ( d > R1_IDLE ) {
   0B89 3E 01         [ 7] 2948 	ld	a, #0x01
   0B8B 95            [ 4] 2949 	sub	a, l
   0B8C 30 03         [12] 2950 	jr	NC,00139$
                           2951 ;src/main.c:790: return SD_SET_BSIZE_FAILED;
   0B8E 2E 0A         [ 7] 2952 	ld	l, #0x0a
   0B90 C9            [10] 2953 	ret
   0B91                    2954 00139$:
                           2955 ;src/main.c:794: return SD_CARD_OK;
   0B91 2E 01         [ 7] 2956 	ld	l, #0x01
                           2957 ;src/main.c:795: }
   0B93 C9            [10] 2958 	ret
                           2959 ;src/main.c:817: sd_read_block(uint32_t block_addr, uint8_t *dst)
                           2960 ;	---------------------------------
                           2961 ; Function sd_read_block
                           2962 ; ---------------------------------
   0B94                    2963 _sd_read_block::
                           2964 ;src/main.c:819: if ( g_sd_addr_size == ADDR_BYTE ) {
   0B94 3Ar0Br00      [13] 2965 	ld	a,(#_g_sd_addr_size + 0)
   0B97 B7            [ 4] 2966 	or	a, a
   0B98 20 1A         [12] 2967 	jr	NZ,00102$
                           2968 ;src/main.c:820: block_addr *= 512;
   0B9A 06 09         [ 7] 2969 	ld	b, #0x09
   0B9C                    2970 00184$:
   0B9C FD 21 02 00   [14] 2971 	ld	iy, #2
   0BA0 FD 39         [15] 2972 	add	iy, sp
   0BA2 FD CB 00 26   [23] 2973 	sla	0 (iy)
   0BA6 FD CB 01 16   [23] 2974 	rl	1 (iy)
   0BAA FD CB 02 16   [23] 2975 	rl	2 (iy)
   0BAE FD CB 03 16   [23] 2976 	rl	3 (iy)
   0BB2 10 E8         [13] 2977 	djnz	00184$
   0BB4                    2978 00102$:
                           2979 ;src/main.c:823: CMDARGS[0] = (uint8_t)(block_addr >> 24);
   0BB4 FD 21 02 00   [14] 2980 	ld	iy, #2
   0BB8 FD 39         [15] 2981 	add	iy, sp
   0BBA FD 4E 03      [19] 2982 	ld	c, 3 (iy)
   0BBD 21r0Er00      [10] 2983 	ld	hl, #_CMDARGS
   0BC0 71            [ 7] 2984 	ld	(hl), c
                           2985 ;src/main.c:824: CMDARGS[1] = (uint8_t)(block_addr >> 16);
   0BC1 23            [ 6] 2986 	inc	hl
   0BC2 FD 4E 02      [19] 2987 	ld	c, 2 (iy)
   0BC5 71            [ 7] 2988 	ld	(hl), c
                           2989 ;src/main.c:825: CMDARGS[2] = (uint8_t)(block_addr >>  8);
   0BC6 21r10r00      [10] 2990 	ld	hl, #_CMDARGS + 2
   0BC9 D1            [10] 2991 	pop	de
   0BCA C1            [10] 2992 	pop	bc
   0BCB C5            [11] 2993 	push	bc
   0BCC D5            [11] 2994 	push	de
   0BCD 70            [ 7] 2995 	ld	(hl), b
                           2996 ;src/main.c:826: CMDARGS[3] = (uint8_t) block_addr;
   0BCE 01r11r00      [10] 2997 	ld	bc, #_CMDARGS + 3
   0BD1 FD 7E 00      [19] 2998 	ld	a, 0 (iy)
   0BD4 02            [ 7] 2999 	ld	(bc), a
                           3000 ;src/main.c:830: d = sd_send_cmd_ex(CMD17, CRCX, CK_FAST);
   0BD5 AF            [ 4] 3001 	xor	a, a
   0BD6 57            [ 4] 3002 	ld	d,a
   0BD7 1E 01         [ 7] 3003 	ld	e,#0x01
   0BD9 D5            [11] 3004 	push	de
   0BDA 3E 51         [ 7] 3005 	ld	a, #0x51
   0BDC F5            [11] 3006 	push	af
   0BDD 33            [ 6] 3007 	inc	sp
   0BDE CDr82r09      [17] 3008 	call	_sd_send_cmd_ex
   0BE1 F1            [10] 3009 	pop	af
   0BE2 33            [ 6] 3010 	inc	sp
   0BE3 7D            [ 4] 3011 	ld	a, l
                           3012 ;src/main.c:831: if ( d != R1_READY ) {
   0BE4 B7            [ 4] 3013 	or	a, a
   0BE5 28 09         [12] 3014 	jr	Z,00135$
                           3015 ;src/main.c:832: SD_CTRL_PORT = CK_FAST | CE_OFF;
   0BE7 3E 01         [ 7] 3016 	ld	a, #0x01
   0BE9 D3 56         [11] 3017 	out	(_SD_CTRL_PORT), a
                           3018 ;src/main.c:833: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0BEB DB 57         [11] 3019 	in	a, (_SD_DATA_PORT)
                           3020 ;src/main.c:834: return SD_READ_BLOCK_FAILED;
   0BED 2E 0B         [ 7] 3021 	ld	l, #0x0b
   0BEF C9            [10] 3022 	ret
                           3023 ;src/main.c:853: for ( count = 25000 ; count > 0 ; count-- )
   0BF0                    3024 00135$:
   0BF0 11 A8 61      [10] 3025 	ld	de, #0x61a8
   0BF3                    3026 00116$:
                           3027 ;src/main.c:855: d = SD_DATA_PORT;
   0BF3 DB 57         [11] 3028 	in	a, (_SD_DATA_PORT)
                           3029 ;src/main.c:857: if ( d == SD_START_TOKEN ||
   0BF5 47            [ 4] 3030 	ld	b, a
   0BF6 D6 FE         [ 7] 3031 	sub	a, #0xfe
   0BF8 3E 01         [ 7] 3032 	ld	a, #0x01
   0BFA 28 01         [12] 3033 	jr	Z,00191$
   0BFC AF            [ 4] 3034 	xor	a, a
   0BFD                    3035 00191$:
   0BFD 4F            [ 4] 3036 	ld	c, a
   0BFE B7            [ 4] 3037 	or	a, a
   0BFF 20 0A         [12] 3038 	jr	NZ,00108$
                           3039 ;src/main.c:858: (d & SD_ERROR_TOKEN_TEST) == SD_ERROR_TOKEN ) {
   0C01 78            [ 4] 3040 	ld	a, b
   0C02 E6 F0         [ 7] 3041 	and	a, #0xf0
   0C04 28 05         [12] 3042 	jr	Z,00108$
                           3043 ;src/main.c:853: for ( count = 25000 ; count > 0 ; count-- )
   0C06 1B            [ 6] 3044 	dec	de
   0C07 7A            [ 4] 3045 	ld	a, d
   0C08 B3            [ 4] 3046 	or	a, e
   0C09 20 E8         [12] 3047 	jr	NZ,00116$
   0C0B                    3048 00108$:
                           3049 ;src/main.c:863: if ( d != SD_START_TOKEN ) {
   0C0B CB 41         [ 8] 3050 	bit	0, c
   0C0D 20 09         [12] 3051 	jr	NZ,00110$
                           3052 ;src/main.c:864: SD_CTRL_PORT = CK_FAST | CE_OFF;
   0C0F 3E 01         [ 7] 3053 	ld	a, #0x01
   0C11 D3 56         [11] 3054 	out	(_SD_CTRL_PORT), a
                           3055 ;src/main.c:865: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0C13 DB 57         [11] 3056 	in	a, (_SD_DATA_PORT)
                           3057 ;src/main.c:866: return SD_TOKEN_TIMEOUT;
   0C15 2E 0C         [ 7] 3058 	ld	l, #0x0c
   0C17 C9            [10] 3059 	ret
   0C18                    3060 00110$:
                           3061 ;src/main.c:873: if ( dst == 0 )
   0C18 21 07 00      [10] 3062 	ld	hl, #6+1
   0C1B 39            [11] 3063 	add	hl, sp
   0C1C 7E            [ 7] 3064 	ld	a, (hl)
   0C1D 2B            [ 6] 3065 	dec	hl
   0C1E B6            [ 7] 3066 	or	a, (hl)
   0C1F 20 0E         [12] 3067 	jr	NZ,00141$
                           3068 ;src/main.c:876: for ( count = 512 ; count > 0 ; count-- )
   0C21 01 00 02      [10] 3069 	ld	bc, #0x0200
   0C24                    3070 00118$:
                           3071 ;src/main.c:878: d = SD_DATA_PORT;
   0C24 DB 57         [11] 3072 	in	a, (_SD_DATA_PORT)
   0C26 D3 BE         [11] 3073 	out	(_VDP_DATA_PORT), a
                           3074 ;src/main.c:876: for ( count = 512 ; count > 0 ; count-- )
   0C28 0B            [ 6] 3075 	dec	bc
   0C29 78            [ 4] 3076 	ld	a, b
   0C2A B1            [ 4] 3077 	or	a, c
   0C2B 20 F7         [12] 3078 	jr	NZ,00118$
   0C2D 18 13         [12] 3079 	jr	00115$
                           3080 ;src/main.c:886: for ( count = 512 ; count > 0 ; count--, dst++ )
   0C2F                    3081 00141$:
   0C2F 01 00 02      [10] 3082 	ld	bc, #0x0200
   0C32 21 06 00      [10] 3083 	ld	hl, #6
   0C35 39            [11] 3084 	add	hl, sp
   0C36 5E            [ 7] 3085 	ld	e, (hl)
   0C37 23            [ 6] 3086 	inc	hl
   0C38 56            [ 7] 3087 	ld	d, (hl)
   0C39                    3088 00120$:
                           3089 ;src/main.c:888: d = SD_DATA_PORT;
   0C39 DB 57         [11] 3090 	in	a, (_SD_DATA_PORT)
                           3091 ;src/main.c:889: *dst = d;
   0C3B 12            [ 7] 3092 	ld	(de), a
                           3093 ;src/main.c:886: for ( count = 512 ; count > 0 ; count--, dst++ )
   0C3C 0B            [ 6] 3094 	dec	bc
   0C3D 13            [ 6] 3095 	inc	de
   0C3E 78            [ 4] 3096 	ld	a, b
   0C3F B1            [ 4] 3097 	or	a, c
   0C40 20 F7         [12] 3098 	jr	NZ,00120$
   0C42                    3099 00115$:
                           3100 ;src/main.c:894: d = SD_DATA_PORT;
   0C42 DB 57         [11] 3101 	in	a, (_SD_DATA_PORT)
                           3102 ;src/main.c:895: d = SD_DATA_PORT;
   0C44 DB 57         [11] 3103 	in	a, (_SD_DATA_PORT)
                           3104 ;src/main.c:897: SD_CTRL_PORT = CK_FAST | CE_OFF;
   0C46 3E 01         [ 7] 3105 	ld	a, #0x01
   0C48 D3 56         [11] 3106 	out	(_SD_CTRL_PORT), a
                           3107 ;src/main.c:898: eop = SD_DATA_PORT; // required end-of-op 8-clocks
   0C4A DB 57         [11] 3108 	in	a, (_SD_DATA_PORT)
                           3109 ;src/main.c:900: return SD_CARD_OK;
   0C4C 2E 01         [ 7] 3110 	ld	l, #0x01
                           3111 ;src/main.c:901: }
   0C4E C9            [10] 3112 	ret
                           3113 ;src/main.c:921: sd_card_detect(uint8_t frame_tick)
                           3114 ;	---------------------------------
                           3115 ; Function sd_card_detect
                           3116 ; ---------------------------------
   0C4F                    3117 _sd_card_detect::
                           3118 ;src/main.c:927: uint8_t sample = (SD_CTRL_PORT & 0x80);
   0C4F DB 56         [11] 3119 	in	a, (_SD_CTRL_PORT)
   0C51 E6 80         [ 7] 3120 	and	a, #0x80
   0C53 4F            [ 4] 3121 	ld	c, a
                           3122 ;src/main.c:929: switch ( state ) {
   0C54 3E 04         [ 7] 3123 	ld	a, #0x04
   0C56 FD 21r00r00   [14] 3124 	ld	iy, #_sd_card_detect_state_65536_87
   0C5A FD 96 00      [19] 3125 	sub	a, 0 (iy)
   0C5D 38 76         [12] 3126 	jr	C,00119$
   0C5F FD 5E 00      [19] 3127 	ld	e, 0 (iy)
   0C62 16 00         [ 7] 3128 	ld	d, #0x00
   0C64 21r6Ar0C      [10] 3129 	ld	hl, #00152$
   0C67 19            [11] 3130 	add	hl, de
   0C68 19            [11] 3131 	add	hl, de
                           3132 ;src/main.c:930: case SD_ST_NOTFOUND :
   0C69 E9            [ 4] 3133 	jp	(hl)
   0C6A                    3134 00152$:
   0C6A 18 08         [12] 3135 	jr	00101$
   0C6C 18 36         [12] 3136 	jr	00110$
   0C6E 18 4F         [12] 3137 	jr	00114$
   0C70 18 54         [12] 3138 	jr	00116$
   0C72 18 52         [12] 3139 	jr	00116$
   0C74                    3140 00101$:
                           3141 ;src/main.c:931: if ( sample == 0x80 )
   0C74 79            [ 4] 3142 	ld	a, c
   0C75 D6 80         [ 7] 3143 	sub	a, #0x80
   0C77 20 24         [12] 3144 	jr	NZ,00108$
                           3145 ;src/main.c:934: if ( frame_tick != 0 )
   0C79 21 02 00      [10] 3146 	ld	hl, #2+0
   0C7C 39            [11] 3147 	add	hl, sp
   0C7D 7E            [ 7] 3148 	ld	a, (hl)
   0C7E B7            [ 4] 3149 	or	a, a
   0C7F 28 54         [12] 3150 	jr	Z,00119$
                           3151 ;src/main.c:936: if ( delay > 20 ) {
   0C81 3E 14         [ 7] 3152 	ld	a, #0x14
   0C83 FD 21r01r00   [14] 3153 	ld	iy, #_sd_card_detect_delay_65536_87
   0C87 FD 96 00      [19] 3154 	sub	a, 0 (iy)
   0C8A 30 0B         [12] 3155 	jr	NC,00103$
                           3156 ;src/main.c:937: delay = 0;
   0C8C FD 36 00 00   [19] 3157 	ld	0 (iy), #0x00
                           3158 ;src/main.c:938: state = SD_ST_INIT;
   0C90 21r00r00      [10] 3159 	ld	hl,#_sd_card_detect_state_65536_87 + 0
   0C93 36 01         [10] 3160 	ld	(hl), #0x01
   0C95 18 3E         [12] 3161 	jr	00119$
   0C97                    3162 00103$:
                           3163 ;src/main.c:941: delay++;
   0C97 21r01r00      [10] 3164 	ld	hl, #_sd_card_detect_delay_65536_87+0
   0C9A 34            [11] 3165 	inc	(hl)
   0C9B 18 38         [12] 3166 	jr	00119$
   0C9D                    3167 00108$:
                           3168 ;src/main.c:948: delay = 0;
   0C9D 21r01r00      [10] 3169 	ld	hl,#_sd_card_detect_delay_65536_87 + 0
   0CA0 36 00         [10] 3170 	ld	(hl), #0x00
                           3171 ;src/main.c:951: break;
   0CA2 18 31         [12] 3172 	jr	00119$
                           3173 ;src/main.c:953: case SD_ST_INIT :
   0CA4                    3174 00110$:
                           3175 ;src/main.c:955: g_sd_status = sd_card_init();
   0CA4 CDrF5r09      [17] 3176 	call	_sd_card_init
   0CA7 7D            [ 4] 3177 	ld	a, l
   0CA8 32r0Cr00      [13] 3178 	ld	(_g_sd_status+0), a
                           3179 ;src/main.c:956: if ( g_sd_status == SD_CARD_OK ) {
   0CAB 3Ar0Cr00      [13] 3180 	ld	a,(#_g_sd_status + 0)
   0CAE 3D            [ 4] 3181 	dec	a
   0CAF 20 07         [12] 3182 	jr	NZ,00112$
                           3183 ;src/main.c:957: state = SD_ST_FOUND;
   0CB1 21r00r00      [10] 3184 	ld	hl,#_sd_card_detect_state_65536_87 + 0
   0CB4 36 02         [10] 3185 	ld	(hl), #0x02
   0CB6 18 1D         [12] 3186 	jr	00119$
   0CB8                    3187 00112$:
                           3188 ;src/main.c:960: state = SD_ST_INITFAIL;
   0CB8 21r00r00      [10] 3189 	ld	hl,#_sd_card_detect_state_65536_87 + 0
   0CBB 36 03         [10] 3190 	ld	(hl), #0x03
                           3191 ;src/main.c:963: break;
   0CBD 18 16         [12] 3192 	jr	00119$
                           3193 ;src/main.c:965: case SD_ST_FOUND :
   0CBF                    3194 00114$:
                           3195 ;src/main.c:970: state = SD_ST_READY;
   0CBF 21r00r00      [10] 3196 	ld	hl,#_sd_card_detect_state_65536_87 + 0
   0CC2 36 04         [10] 3197 	ld	(hl), #0x04
                           3198 ;src/main.c:971: break;
   0CC4 18 0F         [12] 3199 	jr	00119$
                           3200 ;src/main.c:983: case SD_ST_READY :
   0CC6                    3201 00116$:
                           3202 ;src/main.c:984: if ( sample != 0x80 )
   0CC6 79            [ 4] 3203 	ld	a, c
   0CC7 D6 80         [ 7] 3204 	sub	a, #0x80
   0CC9 28 0A         [12] 3205 	jr	Z,00119$
                           3206 ;src/main.c:987: delay = 0;
   0CCB 21r01r00      [10] 3207 	ld	hl,#_sd_card_detect_delay_65536_87 + 0
   0CCE 36 00         [10] 3208 	ld	(hl), #0x00
                           3209 ;src/main.c:988: state = SD_ST_NOTFOUND;
   0CD0 21r00r00      [10] 3210 	ld	hl,#_sd_card_detect_state_65536_87 + 0
   0CD3 36 00         [10] 3211 	ld	(hl), #0x00
                           3212 ;src/main.c:992: }
   0CD5                    3213 00119$:
                           3214 ;src/main.c:994: return state;
   0CD5 FD 21r00r00   [14] 3215 	ld	iy, #_sd_card_detect_state_65536_87
   0CD9 FD 6E 00      [19] 3216 	ld	l, 0 (iy)
                           3217 ;src/main.c:995: }
   0CDC C9            [10] 3218 	ret
                           3219 ;src/main.c:1013: cart_detect(uint8_t frame_tick)
                           3220 ;	---------------------------------
                           3221 ; Function cart_detect
                           3222 ; ---------------------------------
   0CDD                    3223 _cart_detect::
                           3224 ;src/main.c:1021: uint8_t sample = peek(0x8000);
   0CDD 21 00 80      [10] 3225 	ld	hl, #0x8000
   0CE0 4E            [ 7] 3226 	ld	c, (hl)
   0CE1 23            [ 6] 3227 	inc	hl
   0CE2 7E            [ 7] 3228 	ld	a, (hl)
                           3229 ;src/main.c:1023: switch ( state ) {
   0CE3 FD 21r02r00   [14] 3230 	ld	iy, #_cart_detect_state_65536_98
   0CE7 FD 7E 00      [19] 3231 	ld	a, 0 (iy)
   0CEA B7            [ 4] 3232 	or	a, a
   0CEB 28 08         [12] 3233 	jr	Z,00101$
   0CED FD 7E 00      [19] 3234 	ld	a, 0 (iy)
   0CF0 3D            [ 4] 3235 	dec	a
   0CF1 28 36         [12] 3236 	jr	Z,00111$
   0CF3 18 47         [12] 3237 	jr	00115$
                           3238 ;src/main.c:1024: case CART_ST_NOTFOUND :
   0CF5                    3239 00101$:
                           3240 ;src/main.c:1025: if ( sample == 0x55 || sample == 0xAA )
   0CF5 79            [ 4] 3241 	ld	a,c
   0CF6 FE 55         [ 7] 3242 	cp	a,#0x55
   0CF8 28 04         [12] 3243 	jr	Z,00107$
   0CFA D6 AA         [ 7] 3244 	sub	a, #0xaa
   0CFC 20 24         [12] 3245 	jr	NZ,00108$
   0CFE                    3246 00107$:
                           3247 ;src/main.c:1028: if ( frame_tick != 0 )
   0CFE 21 02 00      [10] 3248 	ld	hl, #2+0
   0D01 39            [11] 3249 	add	hl, sp
   0D02 7E            [ 7] 3250 	ld	a, (hl)
   0D03 B7            [ 4] 3251 	or	a, a
   0D04 28 36         [12] 3252 	jr	Z,00115$
                           3253 ;src/main.c:1030: if ( delay > 40 ) {
   0D06 3E 28         [ 7] 3254 	ld	a, #0x28
   0D08 FD 21r03r00   [14] 3255 	ld	iy, #_cart_detect_delay_65536_98
   0D0C FD 96 00      [19] 3256 	sub	a, 0 (iy)
   0D0F 30 0B         [12] 3257 	jr	NC,00103$
                           3258 ;src/main.c:1031: delay = 0;
   0D11 FD 36 00 00   [19] 3259 	ld	0 (iy), #0x00
                           3260 ;src/main.c:1032: state = CART_ST_FOUND;
   0D15 21r02r00      [10] 3261 	ld	hl,#_cart_detect_state_65536_98 + 0
   0D18 36 01         [10] 3262 	ld	(hl), #0x01
   0D1A 18 20         [12] 3263 	jr	00115$
   0D1C                    3264 00103$:
                           3265 ;src/main.c:1035: delay++;
   0D1C 21r03r00      [10] 3266 	ld	hl, #_cart_detect_delay_65536_98+0
   0D1F 34            [11] 3267 	inc	(hl)
   0D20 18 1A         [12] 3268 	jr	00115$
   0D22                    3269 00108$:
                           3270 ;src/main.c:1043: delay = 0;
   0D22 21r03r00      [10] 3271 	ld	hl,#_cart_detect_delay_65536_98 + 0
   0D25 36 00         [10] 3272 	ld	(hl), #0x00
                           3273 ;src/main.c:1046: break;
   0D27 18 13         [12] 3274 	jr	00115$
                           3275 ;src/main.c:1048: case CART_ST_FOUND :
   0D29                    3276 00111$:
                           3277 ;src/main.c:1049: if ( sample != 0x55 && sample != 0xAA )
   0D29 79            [ 4] 3278 	ld	a,c
   0D2A FE 55         [ 7] 3279 	cp	a,#0x55
   0D2C 28 0E         [12] 3280 	jr	Z,00115$
   0D2E D6 AA         [ 7] 3281 	sub	a, #0xaa
   0D30 28 0A         [12] 3282 	jr	Z,00115$
                           3283 ;src/main.c:1053: delay = 0;
   0D32 21r03r00      [10] 3284 	ld	hl,#_cart_detect_delay_65536_98 + 0
   0D35 36 00         [10] 3285 	ld	(hl), #0x00
                           3286 ;src/main.c:1054: state = CART_ST_NOTFOUND;
   0D37 21r02r00      [10] 3287 	ld	hl,#_cart_detect_state_65536_98 + 0
   0D3A 36 00         [10] 3288 	ld	(hl), #0x00
                           3289 ;src/main.c:1058: }
   0D3C                    3290 00115$:
                           3291 ;src/main.c:1060: return state;
   0D3C FD 21r02r00   [14] 3292 	ld	iy, #_cart_detect_state_65536_98
   0D40 FD 6E 00      [19] 3293 	ld	l, 0 (iy)
                           3294 ;src/main.c:1061: }
   0D43 C9            [10] 3295 	ret
                           3296 ;src/main.c:1091: joystick_read(uint8_t frame_tick)
                           3297 ;	---------------------------------
                           3298 ; Function joystick_read
                           3299 ; ---------------------------------
   0D44                    3300 _joystick_read::
                           3301 ;src/main.c:1096: uint8_t sample = CONT1_DATA_PORT;
   0D44 DB FC         [11] 3302 	in	a, (_CONT1_DATA_PORT)
                           3303 ;src/main.c:1097: sample = ~sample;
   0D46 2F            [ 4] 3304 	cpl
                           3305 ;src/main.c:1098: sample &= 0x4F;
   0D47 E6 4F         [ 7] 3306 	and	a, #0x4f
   0D49 4F            [ 4] 3307 	ld	c, a
                           3308 ;src/main.c:1100: vdp_wr_addr(30);
   0D4A C5            [11] 3309 	push	bc
   0D4B 21 1E 00      [10] 3310 	ld	hl, #0x001e
   0D4E E5            [11] 3311 	push	hl
   0D4F CDr2Fr08      [17] 3312 	call	_vdp_wr_addr
   0D52 F1            [10] 3313 	pop	af
   0D53 C1            [10] 3314 	pop	bc
                           3315 ;src/main.c:1101: VDP_DATA_PORT = hex[((sample&0xF0)>>4)];
   0D54 59            [ 4] 3316 	ld	e, c
   0D55 7B            [ 4] 3317 	ld	a, e
   0D56 E6 F0         [ 7] 3318 	and	a, #0xf0
   0D58 6F            [ 4] 3319 	ld	l, a
   0D59 26 00         [ 7] 3320 	ld	h, #0x00
   0D5B CB 2C         [ 8] 3321 	sra	h
   0D5D CB 1D         [ 8] 3322 	rr	l
   0D5F CB 2C         [ 8] 3323 	sra	h
   0D61 CB 1D         [ 8] 3324 	rr	l
   0D63 CB 2C         [ 8] 3325 	sra	h
   0D65 CB 1D         [ 8] 3326 	rr	l
   0D67 CB 2C         [ 8] 3327 	sra	h
   0D69 CB 1D         [ 8] 3328 	rr	l
   0D6B 3Er1E         [ 7] 3329 	ld	a, #<(_hex)
   0D6D 85            [ 4] 3330 	add	a, l
   0D6E 6F            [ 4] 3331 	ld	l, a
   0D6F 3Es08         [ 7] 3332 	ld	a, #>(_hex)
   0D71 8C            [ 4] 3333 	adc	a, h
   0D72 67            [ 4] 3334 	ld	h, a
   0D73 7E            [ 7] 3335 	ld	a, (hl)
   0D74 D3 BE         [11] 3336 	out	(_VDP_DATA_PORT), a
                           3337 ;src/main.c:1102: VDP_DATA_PORT = hex[(sample&0x0F)];
   0D76 7B            [ 4] 3338 	ld	a, e
   0D77 E6 0F         [ 7] 3339 	and	a, #0x0f
   0D79 5F            [ 4] 3340 	ld	e, a
   0D7A 16 00         [ 7] 3341 	ld	d, #0x00
   0D7C 21r1Er08      [10] 3342 	ld	hl, #_hex
   0D7F 19            [11] 3343 	add	hl, de
   0D80 7E            [ 7] 3344 	ld	a, (hl)
   0D81 D3 BE         [11] 3345 	out	(_VDP_DATA_PORT), a
                           3346 ;src/main.c:1110: switch ( state ) {
   0D83 FD 21r04r00   [14] 3347 	ld	iy, #_joystick_read_state_65536_107
   0D87 FD 7E 00      [19] 3348 	ld	a, 0 (iy)
   0D8A B7            [ 4] 3349 	or	a, a
   0D8B 28 10         [12] 3350 	jr	Z,00101$
   0D8D FD 7E 00      [19] 3351 	ld	a, 0 (iy)
   0D90 3D            [ 4] 3352 	dec	a
   0D91 28 39         [12] 3353 	jr	Z,00110$
   0D93 FD 7E 00      [19] 3354 	ld	a, 0 (iy)
   0D96 D6 02         [ 7] 3355 	sub	a, #0x02
   0D98 28 6E         [12] 3356 	jr	Z,00125$
   0D9A C3r18r0E      [10] 3357 	jp	00128$
                           3358 ;src/main.c:1111: case JOY_ST_NONE :
   0D9D                    3359 00101$:
                           3360 ;src/main.c:1112: if ( sample != 0 )
   0D9D 79            [ 4] 3361 	ld	a, c
   0D9E B7            [ 4] 3362 	or	a, a
   0D9F 28 24         [12] 3363 	jr	Z,00108$
                           3364 ;src/main.c:1115: if ( frame_tick != 0 )
   0DA1 21 02 00      [10] 3365 	ld	hl, #2+0
   0DA4 39            [11] 3366 	add	hl, sp
   0DA5 7E            [ 7] 3367 	ld	a, (hl)
   0DA6 B7            [ 4] 3368 	or	a, a
   0DA7 28 74         [12] 3369 	jr	Z,00129$
                           3370 ;src/main.c:1117: if ( delay > 4 ) {
   0DA9 3E 04         [ 7] 3371 	ld	a, #0x04
   0DAB FD 21r05r00   [14] 3372 	ld	iy, #_joystick_read_delay_65536_107
   0DAF FD 96 00      [19] 3373 	sub	a, 0 (iy)
   0DB2 30 0B         [12] 3374 	jr	NC,00103$
                           3375 ;src/main.c:1118: delay = 0;
   0DB4 FD 36 00 00   [19] 3376 	ld	0 (iy), #0x00
                           3377 ;src/main.c:1119: state = JOY_ST_SCAN;
   0DB8 21r04r00      [10] 3378 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DBB 36 01         [10] 3379 	ld	(hl), #0x01
   0DBD 18 5E         [12] 3380 	jr	00129$
   0DBF                    3381 00103$:
                           3382 ;src/main.c:1122: delay++;
   0DBF 21r05r00      [10] 3383 	ld	hl, #_joystick_read_delay_65536_107+0
   0DC2 34            [11] 3384 	inc	(hl)
   0DC3 18 58         [12] 3385 	jr	00129$
   0DC5                    3386 00108$:
                           3387 ;src/main.c:1129: delay = 0;
   0DC5 21r05r00      [10] 3388 	ld	hl,#_joystick_read_delay_65536_107 + 0
   0DC8 36 00         [10] 3389 	ld	(hl), #0x00
                           3390 ;src/main.c:1132: break;
   0DCA 18 51         [12] 3391 	jr	00129$
                           3392 ;src/main.c:1134: case JOY_ST_SCAN :
   0DCC                    3393 00110$:
                           3394 ;src/main.c:1137: state = JOY_ST_WAIT;
   0DCC 21r04r00      [10] 3395 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DCF 36 02         [10] 3396 	ld	(hl), #0x02
                           3397 ;src/main.c:1139: if ( (sample & 0x01) != 0 ) {
   0DD1 CB 41         [ 8] 3398 	bit	0, c
   0DD3 28 07         [12] 3399 	jr	Z,00123$
                           3400 ;src/main.c:1140: state = JOY_ST_UP;
   0DD5 21r04r00      [10] 3401 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DD8 36 03         [10] 3402 	ld	(hl), #0x03
   0DDA 18 41         [12] 3403 	jr	00129$
   0DDC                    3404 00123$:
                           3405 ;src/main.c:1142: else if ( (sample & 0x04) != 0 ) {
   0DDC CB 51         [ 8] 3406 	bit	2, c
   0DDE 28 07         [12] 3407 	jr	Z,00120$
                           3408 ;src/main.c:1143: state = JOY_ST_DN;
   0DE0 21r04r00      [10] 3409 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DE3 36 04         [10] 3410 	ld	(hl), #0x04
   0DE5 18 36         [12] 3411 	jr	00129$
   0DE7                    3412 00120$:
                           3413 ;src/main.c:1145: else if ( (sample & 0x08) != 0 ) {
   0DE7 CB 59         [ 8] 3414 	bit	3, c
   0DE9 28 07         [12] 3415 	jr	Z,00117$
                           3416 ;src/main.c:1146: state = JOY_ST_LT;
   0DEB 21r04r00      [10] 3417 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DEE 36 05         [10] 3418 	ld	(hl), #0x05
   0DF0 18 2B         [12] 3419 	jr	00129$
   0DF2                    3420 00117$:
                           3421 ;src/main.c:1148: else if ( (sample & 0x02) != 0 ) {
   0DF2 CB 49         [ 8] 3422 	bit	1, c
   0DF4 28 07         [12] 3423 	jr	Z,00114$
                           3424 ;src/main.c:1149: state = JOY_ST_RT;
   0DF6 21r04r00      [10] 3425 	ld	hl,#_joystick_read_state_65536_107 + 0
   0DF9 36 06         [10] 3426 	ld	(hl), #0x06
   0DFB 18 20         [12] 3427 	jr	00129$
   0DFD                    3428 00114$:
                           3429 ;src/main.c:1151: else if ( (sample & 0x40) != 0 ) {
   0DFD CB 71         [ 8] 3430 	bit	6, c
   0DFF 28 1C         [12] 3431 	jr	Z,00129$
                           3432 ;src/main.c:1152: state = JOY_ST_FIRE;
   0E01 21r04r00      [10] 3433 	ld	hl,#_joystick_read_state_65536_107 + 0
   0E04 36 07         [10] 3434 	ld	(hl), #0x07
                           3435 ;src/main.c:1155: break;
   0E06 18 15         [12] 3436 	jr	00129$
                           3437 ;src/main.c:1157: case JOY_ST_WAIT :
   0E08                    3438 00125$:
                           3439 ;src/main.c:1160: if ( sample == 0 ) {
   0E08 79            [ 4] 3440 	ld	a, c
   0E09 B7            [ 4] 3441 	or	a, a
   0E0A 20 11         [12] 3442 	jr	NZ,00129$
                           3443 ;src/main.c:1161: delay = 0;
   0E0C 21r05r00      [10] 3444 	ld	hl,#_joystick_read_delay_65536_107 + 0
   0E0F 36 00         [10] 3445 	ld	(hl), #0x00
                           3446 ;src/main.c:1162: state = JOY_ST_NONE;
   0E11 21r04r00      [10] 3447 	ld	hl,#_joystick_read_state_65536_107 + 0
   0E14 36 00         [10] 3448 	ld	(hl), #0x00
                           3449 ;src/main.c:1165: break;
   0E16 18 05         [12] 3450 	jr	00129$
                           3451 ;src/main.c:1167: default :
   0E18                    3452 00128$:
                           3453 ;src/main.c:1169: state = JOY_ST_WAIT;
   0E18 21r04r00      [10] 3454 	ld	hl,#_joystick_read_state_65536_107 + 0
   0E1B 36 02         [10] 3455 	ld	(hl), #0x02
                           3456 ;src/main.c:1171: }
   0E1D                    3457 00129$:
                           3458 ;src/main.c:1173: return state;
   0E1D FD 21r04r00   [14] 3459 	ld	iy, #_joystick_read_state_65536_107
   0E21 FD 6E 00      [19] 3460 	ld	l, 0 (iy)
                           3461 ;src/main.c:1174: }
   0E24 C9            [10] 3462 	ret
                           3463 ;src/main.c:1179: swapin_real_cart(void)
                           3464 ;	---------------------------------
                           3465 ; Function swapin_real_cart
                           3466 ; ---------------------------------
   0E25                    3467 _swapin_real_cart::
                           3468 ;src/main.c:1184: vdp_wtr(0x01, 0xC0);
   0E25 11 01 C0      [10] 3469 	ld	de, #0xc001
   0E28 D5            [11] 3470 	push	de
   0E29 CDr44r08      [17] 3471 	call	_vdp_wtr
   0E2C F1            [10] 3472 	pop	af
                           3473 ;src/main.c:1206: __endasm;
   0E2D 21r3Br0E      [10] 3474 	ld	hl, #001$
   0E30 11 00 60      [10] 3475 	ld	de, #0x6000
   0E33 01 05 00      [10] 3476 	ld	bc, #002$ - #001$
   0E36 ED B0         [21] 3477 	ldir
   0E38 C3 00 60      [10] 3478 	jp	0x6000
   0E3B                    3479 	    001$:
   0E3B DB 55         [11] 3480 	in	a, (0x55)
   0E3D C3 00 00      [10] 3481 	jp	0x0000
   0E40                    3482 	    002$:
   0E40 00            [ 4] 3483 	nop
                           3484 ;src/main.c:1207: }
   0E41 C9            [10] 3485 	ret
                           3486 ;src/main.c:1212: main(void)
                           3487 ;	---------------------------------
                           3488 ; Function main
                           3489 ; ---------------------------------
   0E42                    3490 _main::
   0E42 F5            [11] 3491 	push	af
                           3492 ;src/main.c:1214: uint8_t nmi_last_cnt = 0;
                           3493 ;src/main.c:1218: uint8_t cursor = 1;
   0E43 01 00 01      [10] 3494 	ld	bc, #0x0100
                           3495 ;src/main.c:1224: vdp_wtr(0x00, 0x00);    // VR0 GM1
   0E46 C5            [11] 3496 	push	bc
   0E47 AF            [ 4] 3497 	xor	a, a
   0E48 F5            [11] 3498 	push	af
   0E49 33            [ 6] 3499 	inc	sp
   0E4A AF            [ 4] 3500 	xor	a, a
   0E4B F5            [11] 3501 	push	af
   0E4C 33            [ 6] 3502 	inc	sp
   0E4D CDr44r08      [17] 3503 	call	_vdp_wtr
   0E50 F1            [10] 3504 	pop	af
   0E51 11 01 C0      [10] 3505 	ld	de, #0xc001
   0E54 D5            [11] 3506 	push	de
   0E55 CDr44r08      [17] 3507 	call	_vdp_wtr
   0E58 F1            [10] 3508 	pop	af
   0E59 AF            [ 4] 3509 	xor	a, a
   0E5A 57            [ 4] 3510 	ld	d,a
   0E5B 1E 02         [ 7] 3511 	ld	e,#0x02
   0E5D D5            [11] 3512 	push	de
   0E5E CDr44r08      [17] 3513 	call	_vdp_wtr
   0E61 F1            [10] 3514 	pop	af
   0E62 11 03 10      [10] 3515 	ld	de, #0x1003
   0E65 D5            [11] 3516 	push	de
   0E66 CDr44r08      [17] 3517 	call	_vdp_wtr
   0E69 F1            [10] 3518 	pop	af
   0E6A 11 04 01      [10] 3519 	ld	de, #0x0104
   0E6D D5            [11] 3520 	push	de
   0E6E CDr44r08      [17] 3521 	call	_vdp_wtr
   0E71 F1            [10] 3522 	pop	af
   0E72 11 05 0A      [10] 3523 	ld	de, #0x0a05
   0E75 D5            [11] 3524 	push	de
   0E76 CDr44r08      [17] 3525 	call	_vdp_wtr
   0E79 F1            [10] 3526 	pop	af
   0E7A 11 06 02      [10] 3527 	ld	de, #0x0206
   0E7D D5            [11] 3528 	push	de
   0E7E CDr44r08      [17] 3529 	call	_vdp_wtr
   0E81 F1            [10] 3530 	pop	af
   0E82 11 07 1A      [10] 3531 	ld	de, #0x1a07
   0E85 D5            [11] 3532 	push	de
   0E86 CDr44r08      [17] 3533 	call	_vdp_wtr
   0E89 21 20 00      [10] 3534 	ld	hl, #0x0020
   0E8C E3            [19] 3535 	ex	(sp),hl
   0E8D 3E 1A         [ 7] 3536 	ld	a, #0x1a
   0E8F F5            [11] 3537 	push	af
   0E90 33            [ 6] 3538 	inc	sp
   0E91 21 00 04      [10] 3539 	ld	hl, #0x0400
   0E94 E5            [11] 3540 	push	hl
   0E95 CDr5Br08      [17] 3541 	call	_vdp_memset
   0E98 F1            [10] 3542 	pop	af
   0E99 33            [ 6] 3543 	inc	sp
   0E9A 21 00 08      [10] 3544 	ld	hl,#0x0800
   0E9D E3            [19] 3545 	ex	(sp),hl
   0E9E 21r1Er00      [10] 3546 	ld	hl, #_msx1_font
   0EA1 E5            [11] 3547 	push	hl
   0EA2 21 00 08      [10] 3548 	ld	hl, #0x0800
   0EA5 E5            [11] 3549 	push	hl
   0EA6 CDr7Cr08      [17] 3550 	call	_vdp_memcpy
   0EA9 21 06 00      [10] 3551 	ld	hl, #6
   0EAC 39            [11] 3552 	add	hl, sp
   0EAD F9            [ 6] 3553 	ld	sp, hl
   0EAE C1            [10] 3554 	pop	bc
                           3555 ;src/main.c:1240: CONT_JOY_PORT = 0;  // Any write selects the joystick
   0EAF 3E 00         [ 7] 3556 	ld	a, #0x00
   0EB1 D3 C0         [11] 3557 	out	(_CONT_JOY_PORT), a
                           3558 ;src/main.c:1243: vdp_memset(0x0000, ' ', 32*24);
   0EB3 C5            [11] 3559 	push	bc
   0EB4 21 00 03      [10] 3560 	ld	hl, #0x0300
   0EB7 E5            [11] 3561 	push	hl
   0EB8 3E 20         [ 7] 3562 	ld	a, #0x20
   0EBA F5            [11] 3563 	push	af
   0EBB 33            [ 6] 3564 	inc	sp
   0EBC 26 00         [ 7] 3565 	ld	h, #0x00
   0EBE E5            [11] 3566 	push	hl
   0EBF CDr5Br08      [17] 3567 	call	_vdp_memset
   0EC2 F1            [10] 3568 	pop	af
   0EC3 F1            [10] 3569 	pop	af
   0EC4 33            [ 6] 3570 	inc	sp
   0EC5 AF            [ 4] 3571 	xor	a, a
   0EC6 F5            [11] 3572 	push	af
   0EC7 33            [ 6] 3573 	inc	sp
   0EC8 AF            [ 4] 3574 	xor	a, a
   0EC9 F5            [11] 3575 	push	af
   0ECA 33            [ 6] 3576 	inc	sp
   0ECB CDr3Ar09      [17] 3577 	call	_print_setxy
   0ECE 21rBCr10      [10] 3578 	ld	hl, #___str_1
   0ED1 E3            [19] 3579 	ex	(sp),hl
   0ED2 CDr2Er09      [17] 3580 	call	_print_str_nl
   0ED5 F1            [10] 3581 	pop	af
   0ED6 11 01 E0      [10] 3582 	ld	de, #0xe001
   0ED9 D5            [11] 3583 	push	de
   0EDA CDr44r08      [17] 3584 	call	_vdp_wtr
   0EDD F1            [10] 3585 	pop	af
   0EDE C1            [10] 3586 	pop	bc
                           3587 ;src/main.c:1252: while ( 1 )
   0EDF                    3588 00129$:
                           3589 ;src/main.c:1257: if ( nmi_last_cnt != nmi_count_g )
   0EDF FD 21r00r00   [14] 3590 	ld	iy, #_nmi_count_g
   0EE3 FD 7E 00      [19] 3591 	ld	a, 0 (iy)
   0EE6 91            [ 4] 3592 	sub	a, c
   0EE7 28 F6         [12] 3593 	jr	Z,00129$
                           3594 ;src/main.c:1261: nmi_last_cnt = VDP_CTRL_PORT;
   0EE9 DB BF         [11] 3595 	in	a, (_VDP_CTRL_PORT)
                           3596 ;src/main.c:1262: nmi_last_cnt = nmi_count_g;
   0EEB FD 4E 00      [19] 3597 	ld	c, 0 (iy)
                           3598 ;src/main.c:1271: print_setxy(2, 1);
   0EEE C5            [11] 3599 	push	bc
   0EEF 11 02 01      [10] 3600 	ld	de, #0x0102
   0EF2 D5            [11] 3601 	push	de
   0EF3 CDr3Ar09      [17] 3602 	call	_print_setxy
   0EF6 21rCEr10      [10] 3603 	ld	hl, #___str_2
   0EF9 E3            [19] 3604 	ex	(sp),hl
   0EFA CDrE8r08      [17] 3605 	call	_print_str_sp
   0EFD 26 01         [ 7] 3606 	ld	h,#0x01
   0EFF E3            [19] 3607 	ex	(sp),hl
   0F00 33            [ 6] 3608 	inc	sp
   0F01 CDr4Fr0C      [17] 3609 	call	_sd_card_detect
   0F04 33            [ 6] 3610 	inc	sp
   0F05 C1            [10] 3611 	pop	bc
   0F06 FD 21 01 00   [14] 3612 	ld	iy, #1
   0F0A FD 39         [15] 3613 	add	iy, sp
   0F0C FD 75 00      [19] 3614 	ld	0 (iy), l
                           3615 ;src/main.c:1275: switch ( rtn ) {
   0F0F 3E 04         [ 7] 3616 	ld	a, #0x04
   0F11 FD 96 00      [19] 3617 	sub	a, 0 (iy)
   0F14 DArCEr0F      [10] 3618 	jp	C, 00110$
   0F17 FD 5E 00      [19] 3619 	ld	e, 0 (iy)
   0F1A 16 00         [ 7] 3620 	ld	d, #0x00
   0F1C 21r23r0F      [10] 3621 	ld	hl, #00204$
   0F1F 19            [11] 3622 	add	hl, de
   0F20 19            [11] 3623 	add	hl, de
   0F21 19            [11] 3624 	add	hl, de
   0F22 E9            [ 4] 3625 	jp	(hl)
   0F23                    3626 00204$:
   0F23 C3r32r0F      [10] 3627 	jp	00104$
   0F26 C3r3Fr0F      [10] 3628 	jp	00105$
   0F29 C3r67r0F      [10] 3629 	jp	00107$
   0F2C C3r4Cr0F      [10] 3630 	jp	00106$
   0F2F C3rACr0F      [10] 3631 	jp	00109$
                           3632 ;src/main.c:1276: case SD_ST_NOTFOUND :
   0F32                    3633 00104$:
                           3634 ;src/main.c:1277: print_str("NONE     "); break;
   0F32 C5            [11] 3635 	push	bc
   0F33 21rD6r10      [10] 3636 	ld	hl, #___str_3
   0F36 E5            [11] 3637 	push	hl
   0F37 CDrBAr08      [17] 3638 	call	_print_str
   0F3A F1            [10] 3639 	pop	af
   0F3B C1            [10] 3640 	pop	bc
   0F3C C3rCEr0F      [10] 3641 	jp	00110$
                           3642 ;src/main.c:1278: case SD_ST_INIT :
   0F3F                    3643 00105$:
                           3644 ;src/main.c:1279: print_str("INIT...  "); break;
   0F3F C5            [11] 3645 	push	bc
   0F40 21rE0r10      [10] 3646 	ld	hl, #___str_4
   0F43 E5            [11] 3647 	push	hl
   0F44 CDrBAr08      [17] 3648 	call	_print_str
   0F47 F1            [10] 3649 	pop	af
   0F48 C1            [10] 3650 	pop	bc
   0F49 C3rCEr0F      [10] 3651 	jp	00110$
                           3652 ;src/main.c:1280: case SD_ST_INITFAIL :
   0F4C                    3653 00106$:
                           3654 ;src/main.c:1281: print_str("ERROR:  ");
   0F4C C5            [11] 3655 	push	bc
   0F4D 21rEAr10      [10] 3656 	ld	hl, #___str_5
   0F50 E5            [11] 3657 	push	hl
   0F51 CDrBAr08      [17] 3658 	call	_print_str
   0F54 F1            [10] 3659 	pop	af
   0F55 C1            [10] 3660 	pop	bc
                           3661 ;src/main.c:1284: VDP_DATA_PORT = hex[(g_sd_status&0x0F)];
   0F56 11r1Er08      [10] 3662 	ld	de, #_hex+0
   0F59 3Ar0Cr00      [13] 3663 	ld	a,(#_g_sd_status + 0)
   0F5C E6 0F         [ 7] 3664 	and	a, #0x0f
   0F5E 26 00         [ 7] 3665 	ld	h, #0x00
   0F60 6F            [ 4] 3666 	ld	l, a
   0F61 19            [11] 3667 	add	hl, de
   0F62 7E            [ 7] 3668 	ld	a, (hl)
   0F63 D3 BE         [11] 3669 	out	(_VDP_DATA_PORT), a
                           3670 ;src/main.c:1285: break;
   0F65 18 67         [12] 3671 	jr	00110$
                           3672 ;src/main.c:1286: case SD_ST_FOUND :
   0F67                    3673 00107$:
                           3674 ;src/main.c:1287: print_str("READING.."); 
   0F67 C5            [11] 3675 	push	bc
   0F68 21rF3r10      [10] 3676 	ld	hl, #___str_6
   0F6B E5            [11] 3677 	push	hl
   0F6C CDrBAr08      [17] 3678 	call	_print_str
   0F6F 21 A0 00      [10] 3679 	ld	hl, #0x00a0
   0F72 E3            [19] 3680 	ex	(sp),hl
   0F73 CDr2Fr08      [17] 3681 	call	_vdp_wr_addr
   0F76 21 00 64      [10] 3682 	ld	hl, #0x6400
   0F79 E3            [19] 3683 	ex	(sp),hl
   0F7A 21 00 00      [10] 3684 	ld	hl, #0x0000
   0F7D E5            [11] 3685 	push	hl
   0F7E 21 00 08      [10] 3686 	ld	hl, #0x0800
   0F81 E5            [11] 3687 	push	hl
   0F82 CDr94r0B      [17] 3688 	call	_sd_read_block
   0F85 21 06 00      [10] 3689 	ld	hl, #6
   0F88 39            [11] 3690 	add	hl, sp
   0F89 F9            [ 6] 3691 	ld	sp, hl
   0F8A C1            [10] 3692 	pop	bc
                           3693 ;src/main.c:1295: for ( lp = 512 ; lp > 0 ; lp--, src++ ) {
   0F8B 11 00 02      [10] 3694 	ld	de, #0x0200
   0F8E 21 00 64      [10] 3695 	ld	hl, #0x6400
   0F91 E3            [19] 3696 	ex	(sp), hl
   0F92                    3697 00131$:
                           3698 ;src/main.c:1296: VDP_DATA_PORT = *src;
   0F92 E1            [10] 3699 	pop	hl
   0F93 E5            [11] 3700 	push	hl
   0F94 7E            [ 7] 3701 	ld	a, (hl)
   0F95 D3 BE         [11] 3702 	out	(_VDP_DATA_PORT), a
                           3703 ;src/main.c:1295: for ( lp = 512 ; lp > 0 ; lp--, src++ ) {
   0F97 1B            [ 6] 3704 	dec	de
   0F98 FD 21 00 00   [14] 3705 	ld	iy, #0
   0F9C FD 39         [15] 3706 	add	iy, sp
   0F9E FD 34 00      [23] 3707 	inc	0 (iy)
   0FA1 20 03         [12] 3708 	jr	NZ,00205$
   0FA3 FD 34 01      [23] 3709 	inc	1 (iy)
   0FA6                    3710 00205$:
   0FA6 7A            [ 4] 3711 	ld	a, d
   0FA7 B3            [ 4] 3712 	or	a, e
   0FA8 20 E8         [12] 3713 	jr	NZ,00131$
                           3714 ;src/main.c:1298: break;
   0FAA 18 22         [12] 3715 	jr	00110$
                           3716 ;src/main.c:1299: case SD_ST_READY :
   0FAC                    3717 00109$:
                           3718 ;src/main.c:1300: print_str("YES: ");
   0FAC C5            [11] 3719 	push	bc
   0FAD 21rFDr10      [10] 3720 	ld	hl, #___str_7
   0FB0 E5            [11] 3721 	push	hl
   0FB1 CDrBAr08      [17] 3722 	call	_print_str
   0FB4 F1            [10] 3723 	pop	af
   0FB5 C1            [10] 3724 	pop	bc
                           3725 ;src/main.c:1301: print_str(g_sd_type_name[g_sd_type]);
   0FB6 11r03r00      [10] 3726 	ld	de, #_g_sd_type_name+0
   0FB9 FD 21r0Dr00   [14] 3727 	ld	iy, #_g_sd_type
   0FBD FD 6E 00      [19] 3728 	ld	l, 0 (iy)
   0FC0 26 00         [ 7] 3729 	ld	h, #0x00
   0FC2 29            [11] 3730 	add	hl, hl
   0FC3 19            [11] 3731 	add	hl, de
   0FC4 5E            [ 7] 3732 	ld	e, (hl)
   0FC5 23            [ 6] 3733 	inc	hl
   0FC6 56            [ 7] 3734 	ld	d, (hl)
   0FC7 C5            [11] 3735 	push	bc
   0FC8 D5            [11] 3736 	push	de
   0FC9 CDrBAr08      [17] 3737 	call	_print_str
   0FCC F1            [10] 3738 	pop	af
   0FCD C1            [10] 3739 	pop	bc
                           3740 ;src/main.c:1303: }
   0FCE                    3741 00110$:
                           3742 ;src/main.c:1307: print_setxy(2, 2);
   0FCE C5            [11] 3743 	push	bc
   0FCF 11 02 02      [10] 3744 	ld	de, #0x0202
   0FD2 D5            [11] 3745 	push	de
   0FD3 CDr3Ar09      [17] 3746 	call	_print_setxy
   0FD6 21r03r11      [10] 3747 	ld	hl, #___str_8
   0FD9 E3            [19] 3748 	ex	(sp),hl
   0FDA CDrE8r08      [17] 3749 	call	_print_str_sp
   0FDD 26 01         [ 7] 3750 	ld	h,#0x01
   0FDF E3            [19] 3751 	ex	(sp),hl
   0FE0 33            [ 6] 3752 	inc	sp
   0FE1 CDrDDr0C      [17] 3753 	call	_cart_detect
   0FE4 33            [ 6] 3754 	inc	sp
   0FE5 7D            [ 4] 3755 	ld	a, l
   0FE6 C1            [10] 3756 	pop	bc
                           3757 ;src/main.c:1310: if ( rtn == 0 ) {
   0FE7 B7            [ 4] 3758 	or	a, a
   0FE8 20 27         [12] 3759 	jr	NZ,00112$
                           3760 ;src/main.c:1311: print_str("NONE");
   0FEA C5            [11] 3761 	push	bc
   0FEB 21r0Br11      [10] 3762 	ld	hl, #___str_9
   0FEE E5            [11] 3763 	push	hl
   0FEF CDrBAr08      [17] 3764 	call	_print_str
   0FF2 21 3A 00      [10] 3765 	ld	hl, #0x003a
   0FF5 E3            [19] 3766 	ex	(sp),hl
   0FF6 3E 20         [ 7] 3767 	ld	a, #0x20
   0FF8 F5            [11] 3768 	push	af
   0FF9 33            [ 6] 3769 	inc	sp
   0FFA 2Ar01r00      [16] 3770 	ld	hl, (_print_loc)
   0FFD E5            [11] 3771 	push	hl
   0FFE CDr5Br08      [17] 3772 	call	_vdp_memset
   1001 F1            [10] 3773 	pop	af
   1002 F1            [10] 3774 	pop	af
   1003 33            [ 6] 3775 	inc	sp
   1004 C1            [10] 3776 	pop	bc
                           3777 ;src/main.c:1313: have_cart = 0;
   1005 AF            [ 4] 3778 	xor	a, a
   1006 FD 21 00 00   [14] 3779 	ld	iy, #0
   100A FD 39         [15] 3780 	add	iy, sp
   100C FD 77 00      [19] 3781 	ld	0 (iy), a
   100F 18 20         [12] 3782 	jr	00113$
   1011                    3783 00112$:
                           3784 ;src/main.c:1317: vdp_memcpy(print_loc, bp, 54);
   1011 C5            [11] 3785 	push	bc
   1012 21 36 00      [10] 3786 	ld	hl, #0x0036
   1015 E5            [11] 3787 	push	hl
   1016 21 24 80      [10] 3788 	ld	hl, #0x8024
   1019 E5            [11] 3789 	push	hl
   101A 2Ar01r00      [16] 3790 	ld	hl, (_print_loc)
   101D E5            [11] 3791 	push	hl
   101E CDr7Cr08      [17] 3792 	call	_vdp_memcpy
   1021 21 06 00      [10] 3793 	ld	hl, #6
   1024 39            [11] 3794 	add	hl, sp
   1025 F9            [ 6] 3795 	ld	sp, hl
   1026 C1            [10] 3796 	pop	bc
                           3797 ;src/main.c:1318: have_cart = 1;
   1027 FD 21 00 00   [14] 3798 	ld	iy, #0
   102B FD 39         [15] 3799 	add	iy, sp
   102D FD 36 00 01   [19] 3800 	ld	0 (iy), #0x01
   1031                    3801 00113$:
                           3802 ;src/main.c:1323: rtn = joystick_read(frame_tick);
   1031 C5            [11] 3803 	push	bc
   1032 3E 01         [ 7] 3804 	ld	a, #0x01
   1034 F5            [11] 3805 	push	af
   1035 33            [ 6] 3806 	inc	sp
   1036 CDr44r0D      [17] 3807 	call	_joystick_read
   1039 33            [ 6] 3808 	inc	sp
   103A C1            [10] 3809 	pop	bc
   103B FD 21 01 00   [14] 3810 	ld	iy, #1
   103F FD 39         [15] 3811 	add	iy, sp
   1041 FD 75 00      [19] 3812 	ld	0 (iy), l
                           3813 ;src/main.c:1325: if ( rtn == JOY_ST_UP ) {
   1044 FD 7E 00      [19] 3814 	ld	a, 0 (iy)
   1047 D6 03         [ 7] 3815 	sub	a, #0x03
   1049 20 03         [12] 3816 	jr	NZ,00117$
                           3817 ;src/main.c:1326: cursor--;
   104B 05            [ 4] 3818 	dec	b
   104C 18 0A         [12] 3819 	jr	00118$
   104E                    3820 00117$:
                           3821 ;src/main.c:1328: else if ( rtn == JOY_ST_DN ) {
   104E 21 01 00      [10] 3822 	ld	hl, #1+0
   1051 39            [11] 3823 	add	hl, sp
   1052 7E            [ 7] 3824 	ld	a, (hl)
   1053 D6 04         [ 7] 3825 	sub	a, #0x04
   1055 20 01         [12] 3826 	jr	NZ,00118$
                           3827 ;src/main.c:1329: cursor++;
   1057 04            [ 4] 3828 	inc	b
   1058                    3829 00118$:
                           3830 ;src/main.c:1332: if ( cursor > 2 ) { cursor = 1; }
   1058 3E 02         [ 7] 3831 	ld	a, #0x02
   105A 90            [ 4] 3832 	sub	a, b
   105B 30 02         [12] 3833 	jr	NC,00120$
   105D 06 01         [ 7] 3834 	ld	b, #0x01
   105F                    3835 00120$:
                           3836 ;src/main.c:1333: if ( cursor < 1 ) { cursor = 2; }
   105F 78            [ 4] 3837 	ld	a, b
   1060 D6 01         [ 7] 3838 	sub	a, #0x01
   1062 30 02         [12] 3839 	jr	NC,00122$
   1064 06 02         [ 7] 3840 	ld	b, #0x02
   1066                    3841 00122$:
                           3842 ;src/main.c:1335: vdp_wr_addr(32); VDP_DATA_PORT = ' ';
   1066 C5            [11] 3843 	push	bc
   1067 21 20 00      [10] 3844 	ld	hl, #0x0020
   106A E5            [11] 3845 	push	hl
   106B CDr2Fr08      [17] 3846 	call	_vdp_wr_addr
   106E F1            [10] 3847 	pop	af
   106F C1            [10] 3848 	pop	bc
   1070 3E 20         [ 7] 3849 	ld	a, #0x20
   1072 D3 BE         [11] 3850 	out	(_VDP_DATA_PORT), a
                           3851 ;src/main.c:1336: vdp_wr_addr(64); VDP_DATA_PORT = ' ';
   1074 C5            [11] 3852 	push	bc
   1075 21 40 00      [10] 3853 	ld	hl, #0x0040
   1078 E5            [11] 3854 	push	hl
   1079 CDr2Fr08      [17] 3855 	call	_vdp_wr_addr
   107C F1            [10] 3856 	pop	af
   107D C1            [10] 3857 	pop	bc
   107E 3E 20         [ 7] 3858 	ld	a, #0x20
   1080 D3 BE         [11] 3859 	out	(_VDP_DATA_PORT), a
                           3860 ;src/main.c:1337: vdp_wr_addr((32 * cursor)); VDP_DATA_PORT = '>';
   1082 68            [ 4] 3861 	ld	l, b
   1083 26 00         [ 7] 3862 	ld	h, #0x00
   1085 29            [11] 3863 	add	hl, hl
   1086 29            [11] 3864 	add	hl, hl
   1087 29            [11] 3865 	add	hl, hl
   1088 29            [11] 3866 	add	hl, hl
   1089 29            [11] 3867 	add	hl, hl
   108A C5            [11] 3868 	push	bc
   108B E5            [11] 3869 	push	hl
   108C CDr2Fr08      [17] 3870 	call	_vdp_wr_addr
   108F F1            [10] 3871 	pop	af
   1090 C1            [10] 3872 	pop	bc
   1091 3E 3E         [ 7] 3873 	ld	a, #0x3e
   1093 D3 BE         [11] 3874 	out	(_VDP_DATA_PORT), a
                           3875 ;src/main.c:1339: if ( rtn == JOY_ST_FIRE )
   1095 FD 21 01 00   [14] 3876 	ld	iy, #1
   1099 FD 39         [15] 3877 	add	iy, sp
   109B FD 7E 00      [19] 3878 	ld	a, 0 (iy)
   109E D6 07         [ 7] 3879 	sub	a, #0x07
   10A0 C2rDFr0E      [10] 3880 	jp	NZ,00129$
                           3881 ;src/main.c:1341: if ( cursor == 2 && have_cart == 1 ) {
   10A3 78            [ 4] 3882 	ld	a, b
   10A4 D6 02         [ 7] 3883 	sub	a, #0x02
   10A6 C2rDFr0E      [10] 3884 	jp	NZ,00129$
   10A9 FD 2B         [10] 3885 	dec	iy
   10AB FD 7E 00      [19] 3886 	ld	a, 0 (iy)
   10AE 3D            [ 4] 3887 	dec	a
   10AF C2rDFr0E      [10] 3888 	jp	NZ,00129$
                           3889 ;src/main.c:1342: swapin_real_cart();
   10B2 C5            [11] 3890 	push	bc
   10B3 CDr25r0E      [17] 3891 	call	_swapin_real_cart
   10B6 C1            [10] 3892 	pop	bc
   10B7 C3rDFr0E      [10] 3893 	jp	00129$
                           3894 ;src/main.c:1346: }
   10BA F1            [10] 3895 	pop	af
   10BB C9            [10] 3896 	ret
   10BC                    3897 ___str_1:
   10BC 44 65 76 69 63 65  3898 	.ascii "Devices Detected:"
        73 20 44 65 74 65
        63 74 65 64 3A
   10CD 00                 3899 	.db 0x00
   10CE                    3900 ___str_2:
   10CE 53 44 43 41 52 44  3901 	.ascii "SDCARD:"
        3A
   10D5 00                 3902 	.db 0x00
   10D6                    3903 ___str_3:
   10D6 4E 4F 4E 45 20 20  3904 	.ascii "NONE     "
        20 20 20
   10DF 00                 3905 	.db 0x00
   10E0                    3906 ___str_4:
   10E0 49 4E 49 54 2E 2E  3907 	.ascii "INIT...  "
        2E 20 20
   10E9 00                 3908 	.db 0x00
   10EA                    3909 ___str_5:
   10EA 45 52 52 4F 52 3A  3910 	.ascii "ERROR:  "
        20 20
   10F2 00                 3911 	.db 0x00
   10F3                    3912 ___str_6:
   10F3 52 45 41 44 49 4E  3913 	.ascii "READING.."
        47 2E 2E
   10FC 00                 3914 	.db 0x00
   10FD                    3915 ___str_7:
   10FD 59 45 53 3A 20     3916 	.ascii "YES: "
   1102 00                 3917 	.db 0x00
   1103                    3918 ___str_8:
   1103 43 41 52 54 20 20  3919 	.ascii "CART  :"
        3A
   110A 00                 3920 	.db 0x00
   110B                    3921 ___str_9:
   110B 4E 4F 4E 45        3922 	.ascii "NONE"
   110F 00                 3923 	.db 0x00
                           3924 	.area _CODE
   1110                    3925 ___str_10:
   1110 53 44 53 43        3926 	.ascii "SDSC"
   1114 00                 3927 	.db 0x00
   1115                    3928 ___str_11:
   1115 53 44 48 43        3929 	.ascii "SDHC"
   1119 00                 3930 	.db 0x00
   111A                    3931 ___str_12:
   111A 4D 4D 43 20        3932 	.ascii "MMC "
   111E 00                 3933 	.db 0x00
   111F                    3934 ___str_13:
   111F 3F 3F 3F 3F        3935 	.ascii "????"
   1123 00                 3936 	.db 0x00
                           3937 	.area _INITIALIZER
   0000                    3938 __xinit__nmi_count_g:
   0000 00                 3939 	.db #0x00	; 0
   0001                    3940 __xinit__print_loc:
   0001 00 00              3941 	.dw #0x0000
   0003                    3942 __xinit__g_sd_type_name:
   0003r10r11              3943 	.dw ___str_10
   0005r15r11              3944 	.dw ___str_11
   0007r1Ar11              3945 	.dw ___str_12
   0009r1Fr11              3946 	.dw ___str_13
   000B                    3947 __xinit__g_sd_addr_size:
   000B 01                 3948 	.db #0x01	; 1
   000C                    3949 __xinit__g_sd_status:
   000C 00                 3950 	.db #0x00	; 0
   000D                    3951 __xinit__g_sd_type:
   000D 03                 3952 	.db #0x03	; 3
   000E                    3953 __xinit__CMDARGS:
   000E 00                 3954 	.db #0x00	; 0
   000F 00                 3955 	.db #0x00	; 0
   0010 00                 3956 	.db #0x00	; 0
   0011 00                 3957 	.db #0x00	; 0
                           3958 	.area _CABS (ABS)
